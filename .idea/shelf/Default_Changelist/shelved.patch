Index: core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_0.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_0.csv b/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_0.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_0.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,22 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,109.11655769135419,0,0.0,0.0,0.0
-1,0.0,0.0,55.132056408100475,0,0.0,0.0,0.0
-2,0.0,0.0,68.62101213826648,0,0.0,0.0,0.0
-3,0.0,0.0,113.61672803466513,0,0.0,0.0,0.0
-4,0.0,0.0,172.12084255298416,1,0.0,0.0,0.0
-5,0.0,0.0,5.619754878062678,0,0.0,0.0,0.0
-6,0.0,0.0,176.6331310127184,1,0.0,0.0,0.0
-7,0.0,0.0,208.1227074937084,0,0.0,0.0,0.0
-8,0.0,0.0,257.64661717373497,0,0.0,0.0,0.0
-9,0.0,0.0,329.61543068570717,0,0.0,0.0,0.0
-10,176.625,232.20291026183307,272.20387782647543,0,0.0,232.20291026183307,268.78381174154975
-11,176.625,222.85044890855735,222.0048186509257,1,0.0,222.85044890855735,268.78381174154975
-12,221.99261404202994,231.34972933236605,440.6979783392242,0,0.0,231.34972933236605,268.788504671247
-13,221.99261404202994,230.9874176301137,264.0215258315044,0,0.0,230.9874176301137,268.788504671247
-14,221.99261404202994,259.12772127243034,258.2291986754166,1,0.0,259.12772127243034,268.788504671247
-15,258.2264222519313,261.51450313740503,214.7886333994289,0,0.0,261.51450313740503,268.788504671247
-16,258.2264222519313,264.3377931917162,270.019539055736,0,0.0,264.3377931917162,268.788504671247
-17,258.2264222519313,266.84528721521644,267.392615539751,1,0.0,266.84528721521644,268.788504671247
-18,267.40528152882456,268.5313033612778,268.9640488185027,0,0.0,268.5313033612778,268.788504671247
-19,267.40528152882456,268.7720236222515,266.3222620340367,1,0.0,268.7720236222515,268.788504671247
-20,267.40528152882456,268.7821622419878,262.0303458244894,1,0.0,268.7821622419878,268.788504671247
Index: core/acquisition/RESULTS/LunarLander_cKG/it_0.csv
===================================================================
diff --git a/core/acquisition/RESULTS/LunarLander_cKG/it_0.csv b/core/acquisition/RESULTS/LunarLander_cKG/it_0.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/LunarLander_cKG/it_0.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,61 +0,0 @@
-,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-2.4221002822111926,7.2102666385860745,0,0.0,0.0,0.0
-1,0.0,0.0,-2.438135192788994,7.150914326520471,0,0.0,0.0,0.0
-2,0.0,0.0,-2.607801474567101,7.03220629682162,0,0.0,0.0,0.0
-3,0.0,0.0,-1.642189409056111,7.0129554749642695,0,0.0,0.0,0.0
-4,0.0,0.0,-0.977986513607902,8.884583831078075,0,0.0,0.0,0.0
-5,0.0,0.0,-0.5361485946399692,5.131444750162481,0,0.0,0.0,0.0
-6,0.0,0.0,-5.586962031010846,11.223747483435789,0,0.0,0.0,0.0
-7,0.0,0.0,-1.4832965455280565,6.1686834060095155,0,0.0,0.0,0.0
-8,0.0,0.0,-1.219777367601341,5.895352948531082,0,0.0,0.0,0.0
-9,0.0,0.0,-1.8173261015370883,7.3555664725486505,0,0.0,0.0,0.0
-10,0.0,0.0,-2.3299885671123373,6.718545791538521,0,0.0,0.0,0.0
-11,0.0,0.0,-2.311806527378848,8.558978454890841,0,0.0,0.0,0.0
-12,0.0,0.0,0.8688637617765126,4.068002179501358,0,0.0,0.0,0.0
-13,0.0,0.0,-2.7239392565607377,10.30377385095421,0,0.0,0.0,0.0
-14,0.0,0.0,-1.7809055906685944,7.4760613460943315,0,0.0,0.0,0.0
-15,0.0,0.0,-2.6719602166040484,7.2461341014619265,0,0.0,0.0,0.0
-16,0.0,0.0,-1.2321886590947895,5.7829213792638,0,0.0,0.0,0.0
-17,0.0,0.0,-2.8120365713129916,9.348710010595504,0,0.0,0.0,0.0
-18,0.0,0.0,-2.7311014897797334,7.335705165642449,0,0.0,0.0,0.0
-19,0.0,0.0,-2.0099107780178005,6.576777336360915,0,0.0,0.0,0.0
-20,0.0,0.0,-2.555857634245587,10.277520053414078,0,0.0,0.0,0.0
-21,0.0,0.0,-1.5234233585852044,5.965491227849402,0,0.0,0.0,0.0
-22,0.0,0.0,-2.3385716971643724,6.778297247019656,0,0.0,0.0,0.0
-23,0.0,0.0,-2.3698784238210755,7.150914326520471,0,0.0,0.0,0.0
-24,0.0,0.0,-2.2688265044515066,11.872237249652555,0,0.0,0.0,0.0
-25,0.0,0.0,-1.8124961024951924,6.770784565412453,0,0.0,0.0,0.0
-26,0.0,0.0,-2.3556262454604338,7.265025768681863,0,0.0,0.0,0.0
-27,0.0,0.0,-1.213459188708085,5.773753750637833,0,0.0,0.0,0.0
-28,0.0,0.0,-3.6257468847805483,10.637190535012813,0,0.0,0.0,0.0
-29,0.0,0.0,-2.351398413302021,8.88464985991051,0,0.0,0.0,0.0
-30,0.0,0.0,-2.3734552811860135,7.150914326520471,0,0.0,0.0,0.0
-31,0.0,0.0,-3.655918055973235,9.72298277998152,0,0.0,0.0,0.0
-32,0.0,0.0,-1.980061059685106,7.332800289516663,0,0.0,0.0,0.0
-33,0.0,0.0,-3.0035657956703443,11.599717585262633,0,0.0,0.0,0.0
-34,0.0,0.0,-1.7268289267496957,6.185520651486427,0,0.0,0.0,0.0
-35,0.0,0.0,-2.0590147914760246,7.241431463802526,0,0.0,0.0,0.0
-36,0.0,0.0,-2.0920660353359075,7.066936716270579,0,0.0,0.0,0.0
-37,0.0,0.0,-3.2355797912411415,9.832225998557503,0,0.0,0.0,0.0
-38,0.0,0.0,-2.2369077278451646,8.775522489778645,0,0.0,0.0,0.0
-39,0.0,0.0,-0.22298766292871228,6.054512798051483,0,0.0,0.0,0.0
-40,0.0,0.0,-1.9459289328297078,7.088206805365892,0,0.0,0.0,0.0
-41,0.0,0.0,-4.470514604337488,11.023107103019045,0,0.0,0.0,0.0
-42,0.0,0.0,-1.392093218136055,6.1811389025412,0,0.0,0.0,0.0
-43,0.0,0.0,-0.6231032160441459,5.574766984139669,0,0.0,0.0,0.0
-44,0.0,0.0,-1.9938867560027829,7.208758457904818,0,0.0,0.0,0.0
-45,0.0,0.0,-1.8781444321324314,6.397052805620358,0,0.0,0.0,0.0
-46,0.0,0.0,-2.6314824484100168,7.141827067651768,0,0.0,0.0,0.0
-47,0.0,0.0,-0.2690942817332971,5.56843156526118,0,0.0,0.0,0.0
-48,0.0,0.0,-2.9944409968515417,10.605025160274893,0,0.0,0.0,0.0
-49,0.0,0.0,-1.3734185258441034,6.14119216395619,0,0.0,0.0,0.0
-50,0.0,0.0,-1.5513972956729702,6.73478876266709,0,0.0,-0.0,0.0
-51,0.0,0.0,-0.7047533716577833,6.060232589158243,0,0.0,-0.0,0.0
-52,0.0,0.0,-3.876997515550855,9.276468843606601,0,0.0,-0.0,0.0
-53,0.0,0.0,0.5928189931242932,5.983971742196418,0,0.0,-0.0,0.0
-54,0.0,0.0,-1.443109700462012,8.330244571487317,0,0.0,-0.0,0.0
-55,0.0,0.0,-2.4628900349980367,6.756428111489509,0,0.0,-0.0,0.0
-56,0.0,0.0,-1.0660771509397222,9.919059124683992,0,0.0,-0.0,0.0
-57,0.0,0.0,-3.0536313795148713,9.05896874291903,0,0.0,-0.0,0.0
-58,0.0,0.0,-0.32083219457560674,6.354934167759575,0,0.0,-0.0,0.0
-59,0.0,0.0,0.2573273331844939,6.38975123147178,0,0.0,-0.0,0.0
Index: core/acquisition/RESULTS/LunarLander_TS/it_0.csv
===================================================================
diff --git a/core/acquisition/RESULTS/LunarLander_TS/it_0.csv b/core/acquisition/RESULTS/LunarLander_TS/it_0.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/LunarLander_TS/it_0.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,35 +0,0 @@
-,Y,C,C_bool,OC
-0,-1.184328295200344,5.494860729502145,0,0.0
-1,-1.8678912818749263,7.06092349692346,0,0.0
-2,-1.9084235099686742,7.188690258307053,0,0.0
-3,-1.4029065021205074,5.9675716192710215,0,0.0
-4,-1.9296075876629828,7.521789945249079,0,0.0
-5,-2.400182962919424,7.193323212773276,0,0.0
-6,-0.9382960306047865,5.530751331899726,0,0.0
-7,-1.6356195490892103,8.267627419874476,0,0.0
-8,-0.9650094571163492,5.629139343949139,0,0.0
-9,-2.3684792928465384,7.150914326520471,0,0.0
-10,-2.1445375479384183,6.339877481890041,0,0.0
-11,-4.163637101204972,10.042118748479343,0,0.0
-12,-0.35312820360798597,5.990828030895998,0,0.0
-13,-2.408809774184723,7.193323212773276,0,0.0
-14,-1.0372378856832123,8.110145593601237,0,0.0
-15,-2.3557242243796197,7.369527292769935,0,0.0
-16,-1.882428404839599,7.440421069863032,0,0.0
-17,-0.9022615445687601,7.206134977515044,0,0.0
-18,-0.8031437566343297,5.465550059982109,0,0.0
-19,-1.1456059912456569,6.295874925350647,0,0.0
-20,-0.9585963550918832,7.127147969704753,0,0.0
-21,-1.6835006834739092,7.48495504578802,0,0.0
-22,-2.6983935782195276,9.080201848571061,0,0.0
-23,-2.5677315118315,7.039899530300473,0,0.0
-24,-0.23327316374418014,6.366826404286887,0,0.0
-25,-2.4586681603244225,8.153416140159012,0,0.0
-26,-2.1604998411406595,6.414974766590404,0,0.0
-27,0.7841339710455312,5.961818082276023,0,0.0
-28,-2.1357221689289547,6.359991287763762,0,0.0
-29,-2.405892106259438,7.193323212773276,0,0.0
-30,-4.099970825922481,11.61421286987261,0,0.0
-31,-2.3734552811860135,7.150914326520471,0,0.0
-32,-1.1377686297945255,6.205760537526398,0,0.0
-33,-0.525346985338811,5.2154795829692455,0,0.0
Index: core/acquisition/RESULTS/NN_hybrid_KG/it_0.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_hybrid_KG/it_0.csv b/core/acquisition/RESULTS/NN_hybrid_KG/it_0.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_hybrid_KG/it_0.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,27 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,0.1144,0,0.0,0.0,0.0
-1,0.0,0.0,0.1123,0,0.0,0.0,0.0
-2,0.0,0.0,0.50620002,1,0.0,0.0,0.0
-3,0.0,0.0,0.1142,0,0.0,0.0,0.0
-4,0.0,0.0,0.3075,1,0.0,0.0,0.0
-5,0.0,0.0,0.40869999,1,0.0,0.0,0.0
-6,0.0,0.0,0.0976,0,0.0,0.0,0.0
-7,0.0,0.0,0.1123,0,0.0,0.0,0.0
-8,0.0,0.0,0.83700001,0,0.0,0.0,0.0
-9,0.0,0.0,0.0931,0,0.0,0.0,0.0
-10,0.0,0.0,0.1145,1,0.0,0.0,0.0
-11,0.0,0.0,0.1125,0,0.0,0.0,0.0
-12,0.0,0.0,0.1112,1,0.0,0.0,0.0
-13,0.0,0.0,0.1076,0,0.0,0.0,0.0
-14,0.0,0.0,0.096,1,0.0,0.0,0.0
-15,0.0,-0.45174999833106994,0.11240000277757645,0,0.0,0.45174999833106994,0.0
-16,0.0,-0.19023000150918962,0.11460000276565552,1,0.0,0.19023000150918962,0.0
-17,0.0,-0.10751999914646149,0.09989999979734421,0,0.0,0.10751999914646149,0.0
-18,0.0,-0.4203100025653839,0.20319999754428864,1,0.0,0.4203100025653839,0.0
-19,0.0,-0.43843000531196596,0.9096999764442444,1,0.0,0.43843000531196596,0.0
-20,0.0,-0.8931099951267243,0.1111999973654747,1,0.0,0.8931099951267243,0.0
-21,0.0,-0.8937399983406067,0.09560000151395798,1,0.0,0.8937399983406067,0.0
-22,0.0,-0.9014100074768067,0.8845000267028809,1,0.0,0.9014100074768067,0.0
-23,0.0,-0.933490002155304,0.11089999973773956,1,0.0,0.933490002155304,0.0
-24,0.0,-0.9384199917316437,0.11630000174045563,1,0.0,0.9384199917316437,0.0
-25,0.0,-0.9421500027179718,0.3831000030040741,1,0.0,0.9421500027179718,0.0
Index: core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv b/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,29 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,154.1303381091228,0,0.0,0.0,0.0
-1,0.0,0.0,136.12408026700993,0,0.0,0.0,0.0
-2,0.0,0.0,109.14413820387568,0,0.0,0.0,0.0
-3,0.0,0.0,406.1283079712965,0,0.0,0.0,0.0
-4,0.0,0.0,190.13641942519376,0,0.0,0.0,0.0
-5,0.0,0.0,289.11370404840693,0,0.0,0.0,0.0
-6,0.0,0.0,140.61649947622806,0,0.0,0.0,0.0
-7,0.0,0.0,50.63460820004092,0,0.0,0.0,0.0
-8,0.0,0.0,14.622825818249153,0,0.0,0.0,0.0
-9,0.0,0.0,5.626585148843523,0,0.0,0.0,0.0
-10,0.0,0.0,260.3388959306657,0,0.0,0.0,268.78848257441916
-11,0.0,0.0,153.61524052538752,0,0.0,0.0,268.7885010722384
-12,0.0,0.0,233.58878147117684,0,0.0,0.0,268.7885010722384
-13,0.0,0.0,248.7613968461777,0,0.0,0.0,268.78850465475466
-14,0.0,222.77361305214845,226.7178999420983,1,0.0,222.77361305214845,268.78850465475466
-15,226.70939973977693,237.4579682439591,237.46307106916882,1,0.0,237.4579682439591,268.78850465475466
-16,237.45443108150485,249.86961386410673,287.98283837508836,0,0.0,249.86961386410673,268.78850465475466
-17,237.45443108150485,252.2655692344861,257.4566748393384,1,0.0,252.2655692344861,268.78850465475466
-18,257.45953660265644,261.8383432343659,223.39723249955006,0,0.0,261.8383432343659,268.78850465475466
-19,257.45953660265644,262.46666980259363,264.4766107922862,1,0.0,262.46666980259363,268.78850465475466
-20,264.4625552398582,266.32660635144083,295.72289960385706,0,0.0,266.32660635144083,268.7885046712469
-21,264.4625552398582,266.9525844726019,238.4303060739879,0,0.0,266.9525844726019,268.7885046712469
-22,264.4625552398582,266.92560073056086,268.37858839701516,1,0.0,266.92560073056086,268.7885046712469
-23,268.3780060422734,268.67682203716527,268.6675827561429,1,0.0,268.67682203716527,268.7885046712469
-24,268.67796898457976,268.78253001286123,268.65784159557535,1,0.0,268.78253001286123,268.7885046712469
-25,268.67796898457976,268.78419512705216,50.618547796730915,0,0.0,268.78419512705216,268.7885046712469
-26,268.67796898457976,268.78421470781996,268.22311826415137,1,0.0,268.78421470781996,268.7885046712469
-27,268.67796898457976,268.78448484629644,289.1199550990901,0,0.0,268.78448484629644,268.788504671247
Index: core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_1.csv b/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,3 +0,0 @@
-,OC GP mean,OC GP sampled
-0,260.2826333308359,259.4010764134397
-1,260.27767606969655,259.4010764134397
Index: core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1.0/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1.0/it_1.csv b/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1.0/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1.0/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,2 +0,0 @@
-,OC GP mean,OC GP sampled
-0,242.39551546060918,240.2754986045219
Index: core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv b/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,16 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-1.4122726760633653,0,0.0,0.0,0.0
-1,0.0,0.0,3.7206070045951316,0,0.0,0.0,0.0
-2,0.0,0.0,1.6492898614090623,0,0.0,0.0,0.0
-3,0.0,0.0,-3.739537514278086,0,0.0,0.0,0.0
-4,0.0,0.0,-13.09013839225718,1,0.0,0.0,0.0
-5,0.0,0.0,0.254712208077112,0,0.0,0.0,0.0
-6,0.0,0.0,1.0366556054789144,1,0.0,0.0,0.0
-7,0.0,0.0,-16.670921439672796,1,0.0,0.0,0.0
-8,0.0,0.0,-19.89820447904164,0,0.0,0.0,0.0
-9,0.0,0.0,-29.411735698095637,1,0.0,0.0,0.0
-10,1.020988743467953,3.237972683015744,-14.370854952715945,1,0.0,3.237972683015744,6.1742743288663435
-11,1.020988743467953,3.260555807105,-22.501346365460666,1,0.0,3.260555807105,6.1742743288663435
-12,1.020988743467953,3.8301273951556967,5.505800062945816,1,0.0,3.8301273951556967,6.174274328866347
-13,5.5101418674341245,5.993330890477241,-4.931491401550918,1,0.0,5.993330890477241,6.174274328866347
-14,5.5101418674341245,6.013584749631205,-0.3208261844913985,1,0.0,6.013584749631205,6.174274328866347
Index: core/acquisition/RESULTS/mistery_nEI_1.0/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_nEI_1.0/it_1.csv b/core/acquisition/RESULTS/mistery_nEI_1.0/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_nEI_1.0/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,3 +0,0 @@
-,Opportunity_cost
-0,"tensor([0.6911], dtype=torch.float64)"
-1,"tensor([0.5388], dtype=torch.float64)"
Index: core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.1/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.1/it_1.csv b/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.1/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.1/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,33 +0,0 @@
-,OC GP mean,OC GP sampled
-0,4.674308709125606,3.659549989035752
-1,4.688710666725178,3.0520467678362495
-2,4.987034532175179,3.0520467678362495
-3,4.943873228238764,3.0520467678362495
-4,4.8896140503407395,3.659549989035752
-5,4.985575352684869,3.0520467678362495
-6,4.729344876689382,3.659549989035752
-7,5.18672067054518,3.659549989035752
-8,5.086126428326092,3.0520467678362495
-9,5.079194505935401,3.659549989035752
-10,5.159402386652207,3.659549989035752
-11,5.163006415476301,3.659549989035752
-12,5.425421648088657,5.59713446924726
-13,5.480197429319239,5.59713446924726
-14,5.401717428797089,5.59713446924726
-15,5.339373739612946,5.59713446924726
-16,5.358628250566507,5.59713446924726
-17,5.391707990807471,5.59713446924726
-18,5.341309888689187,5.59713446924726
-19,5.357958410481499,5.168552751153084
-20,5.365496297177414,5.168552751153084
-21,5.368401212776407,5.168552751153084
-22,5.327154080525045,5.168552751153084
-23,5.509877075476596,5.59713446924726
-24,5.517969214928437,5.59713446924726
-25,5.589589287927603,5.59713446924726
-26,5.567296053868242,5.59713446924726
-27,5.521164742862442,5.59713446924726
-28,5.5225916445655665,5.59713446924726
-29,5.55053517303838,5.59713446924726
-30,5.545177331954781,5.59713446924726
-31,5.516596632259563,5.59713446924726
Index: core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.01/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.01/it_1.csv b/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.01/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.01/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,4 +0,0 @@
-,OC GP mean,OC GP sampled
-0,0.8508838713217264,0.15721217602789306
-1,0.6032780688777182,0.15721217602789306
-2,0.7387350779474797,0.5866409561627792
Index: core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.31622776601683794/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.31622776601683794/it_1.csv b/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.31622776601683794/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.31622776601683794/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,7 +0,0 @@
-,OC GP mean,OC GP sampled
-0,4.641849747023554,3.659549989035752
-1,5.174028542664799,5.618917491789306
-2,5.430731517631037,5.414106676642699
-3,5.474680907319716,5.414106676642699
-4,5.449789476089999,5.414106676642699
-5,5.603591738834349,5.618917491789306
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_1.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-5.884078144746037,0,0.0,0.0,0.0
-1,0.0,0.0,-1.3865137982355646,0,0.0,0.0,0.0
-2,0.0,0.0,-1.4433689991450225,0,0.0,0.0,0.0
-3,0.0,0.0,-8.395223890772018,0,0.0,0.0,0.0
-4,0.0,0.0,-16.934103780113436,1,0.0,0.0,0.0
-5,0.0,0.0,-5.886190204773054,0,0.0,0.0,0.0
-6,0.0,0.0,-4.829063633725273,1,0.0,0.0,0.0
-7,0.0,0.0,-20.70772395459846,1,0.0,0.0,0.0
-8,0.0,0.0,-25.12121068400819,0,0.0,0.0,0.0
-9,0.0,0.0,-34.238171900904774,1,0.0,0.0,0.0
-10,1.1742743288663435,1.1742743288663435,1.9328794890113656,0,0.0,-0.0,0.0
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1e-06_n_c_1e-06/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1e-06_n_c_1e-06/it_1.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1e-06_n_c_1e-06/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1e-06_n_c_1e-06/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-6.417355246116316,0,0.0,0.0,0.0
-1,0.0,0.0,-1.2946324725286968,0,0.0,0.0,0.0
-2,0.0,0.0,-3.355275566326498,0,0.0,0.0,0.0
-3,0.0,0.0,-8.725690223295256,0,0.0,0.0,0.0
-4,0.0,0.0,-18.07490435697308,1,0.0,0.0,0.0
-5,0.0,0.0,-4.757724640627484,0,0.0,0.0,0.0
-6,0.0,0.0,-3.97986130890924,1,0.0,0.0,0.0
-7,0.0,0.0,-21.66758313868725,1,0.0,0.0,0.0
-8,0.0,0.0,-24.904009927098574,0,0.0,0.0,0.0
-9,0.0,0.0,-34.39652827037349,1,0.0,0.0,0.0
-10,1.1742743288663435,1.1742743288663435,0.9970248831203762,1,0.0,-0.0,0.0
Index: core/acquisition/RESULTS/NN_pKG/it_1.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_pKG/it_1.csv b/core/acquisition/RESULTS/NN_pKG/it_1.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_pKG/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,5 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,0.2612999975681305,1,0.0,0.0,0.0
-1,0.0,0.0,0.2102999985218048,0,0.0,0.0,0.0
-2,0.0,-0.25850000977516174,0.11469999700784683,0,0.0,0.25850000977516174,0.0
-3,0.0,-0.26269999146461487,0.10429999977350235,0,0.0,0.26269999146461487,0.0
Index: core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_2.csv b/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,5 +0,0 @@
-,OC GP mean,OC GP sampled
-0,195.65432627607558,194.4298908387826
-1,211.4171609329589,211.22090525103314
-2,212.27603427904515,211.22090525103314
-3,212.81449135256315,211.22090525103314
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.1/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.1/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.1/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.1/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,8 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-1.0828957451635588,1,0.0,0.0
-1,0.0,0.8548635735099165,1,0.0,0.0
-2,0.0,-0.08678815969383408,1,0.0,0.0
-3,0.0,-0.46436315701939584,1,0.0,0.0
-4,0.0,-0.586168833743818,1,0.0,0.0
-5,0.9511657408515484,0.36387917276776305,1,0.937149039269128,1.8883147801206763
-6,0.9511657408515484,0.16982851447215297,1,0.937149039269128,1.8883147801206763
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.01/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.01/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.01/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.01/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,21 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-0.8505686287253198,0,0.0,0.0,0.0
-1,0.0,0.0,0.9883243471472326,1,0.0,0.0,0.0
-2,0.0,0.0,0.23777120339359142,0,0.0,0.0,0.0
-3,0.0,0.0,-0.6575820834779291,0,0.0,0.0,0.0
-4,0.0,0.0,-0.7460791428390023,0,0.0,0.0,0.0
-5,0.838268122237956,0.838291604318165,0.8348116888941945,1,0.0,1.0500231758025114,0.0
-6,0.838268122237956,0.7940156663783116,1.867326212132633,1,0.0,1.0942991137423648,0.0
-7,0.1025562487479772,0.06253088157467968,1.7812544500081284,1,0.0,1.8257838985459967,0.0
-8,0.1025562487479772,0.020854105058518257,1.2317916287511521,1,0.0,1.867460675062158,0.0
-9,0.1025562487479772,0.02229630825248141,1.599590609850915,0,0.0,1.866018471868195,0.0
-10,0.1025562487479772,0.03223207312707621,0.7073460695486927,1,0.0,1.8560827069936001,0.0
-11,0.1025562487479772,0.032547324859419025,1.7463292711912322,1,0.0,1.8557674552612573,0.0
-12,0.10255624874797764,0.02338176556799132,1.603067138022819,1,0.0,1.864933014552685,0.0
-13,0.10255624874797764,0.020789204062086508,1.8614165967231573,1,0.0,1.8675255760585903,0.0
-14,0.10255624874797764,0.01003047293121817,1.5205597396567176,1,0.0,1.8782843071894586,0.0
-15,0.0225205188041131,0.0008129646827250703,1.6498874906395946,1,0.0,1.8875018154379517,0.0
-16,0.0225205188041131,0.0011277353889194153,1.7108405257829542,1,0.0,1.8871870447317574,0.0
-17,0.0225205188041131,0.0002419233945707422,1.7569536322879653,1,0.0,1.888072856726106,0.0
-18,0.0225205188041131,6.826582077734678e-05,1.6671105837931313,1,0.0,1.8882465142998994,0.0
-19,0.0225205188041131,0.001973996785271659,1.6203030792799813,1,0.0,1.8863407833354051,0.0
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,19 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-0.7771003437089218,0,0.0,0.0,0.0
-1,0.0,0.0,1.03052834944544,1,0.0,0.0,0.0
-2,0.0,0.0,0.3404058857225758,0,0.0,0.0,0.0
-3,0.0,0.0,-0.7186832729440829,0,0.0,0.0,0.0
-4,0.0,0.0,-0.7966472226472344,0,0.0,0.0,0.0
-5,0.838268122237956,0.8379014536138483,1.0396650312552644,1,0.0,1.050413326506828,0.0
-6,0.7874794926249207,0.7719420857687085,1.7771268130371562,1,0.0,1.1163726943519678,0.0
-7,0.12876905951209427,0.07875606988508865,1.8708677272285474,1,0.0,1.8095587102355877,0.0
-8,0.00013250251744478803,0.006266085292688572,1.5453890181082561,1,0.0,1.8820486948279878,0.0
-9,0.00013250251744478803,0.0011425930688915287,0.7533206408098888,1,0.0,1.8871721870517848,0.0
-10,0.00013250251744478803,0.0013542643087367523,1.8282041644186182,1,0.0,1.8869605158119396,0.0
-11,0.00013250251744478803,0.0002696883676156503,0.6908518212337034,1,0.0,1.8880450917530607,0.0
-12,0.00013250251744478803,0.0006801186189482333,0.67066930535301,1,0.0,1.887634661501728,0.0
-13,0.00013250251744478803,0.0006404287578405388,0.671484028295859,1,0.0,1.8876743513628358,0.0
-14,0.00013250251744478803,0.000628617095441264,0.6705277154079842,1,0.0,1.887686163025235,0.0
-15,0.00013250251744478803,0.0006216008098525183,0.6997004080546422,1,0.0,1.8876931793108238,0.0
-16,0.00013250251744478803,0.000643400695317764,0.7362026372212599,1,0.0,1.8876713794253586,0.0
-17,0.00013250251744478803,0.00068651225608507,0.7348573975583246,1,0.0,1.8876282678645913,0.0
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.0001/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.0001/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.0001/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.0001/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-0.7538676320650979,1,0.0,0.0
-1,0.0,1.0438744268091715,1,0.0,0.0
-2,0.0,0.37286182203131835,1,0.0,0.0
-3,0.0,-0.7380051655899362,1,0.0,0.0
-4,0.0,-0.8126382535567529,1,0.0,0.0
-5,0.00047666009934310694,1.869966034013185,1,1.8878381200213332,1.8883147801206763
-6,5.745153466296671e-06,1.1216831588029916,1,1.88830903496721,1.8883147801206763
-7,5.108566767098033e-05,1.6952851197470813,1,1.8882636944530053,1.8883147801206763
-8,0.00013420832329380517,1.5129641870931827,1,1.8881805717973825,1.8883147801206763
-9,3.778315592395387e-06,1.6515080461357534,1,1.888311001805084,1.8883147801206763
-10,7.68837070097561e-06,1.589044608481033,1,1.8883070917499754,1.8883147801206763
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.03/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.03/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.03/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.03/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,0.4390697788942991,0,0.0,0.0
-1,0.0,-0.1018210926777407,1,0.0,0.0
-2,0.0,0.5163710187171009,1,0.0,0.0
-3,0.0,0.8671003007226288,0,0.0,0.0
-4,0.0,0.6666139765185801,0,0.0,0.0
-5,0.028648805195525928,-0.022487848021334723,1,0.6989919219493624,0.7276407271448884
-6,0.02663876102682705,0.43876662271092515,1,0.7010019661180613,0.7276407271448884
-7,0.027888703940935344,0.34611047985032156,1,0.699752023203953,0.7276407271448884
-8,0.032163061427003314,-0.022320471396633484,1,0.695477665717885,0.7276407271448884
-9,0.02731944987965984,0.11388223990596845,1,0.7003212772652285,0.7276407271448884
-10,0.026693711762305283,0.2861865336666734,1,0.7009470153825831,0.7276407271448884
Index: core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,10 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,1.7383025274563202,1,0.0,0.0
-1,0.0,1.1160120449129018,0,0.0,0.0
-2,0.0,1.1962294815491836,1,0.0,0.0
-3,0.0,1.7418054931553715,1,0.0,0.0
-4,0.07335837801009748,0.47942120389505594,1,1.7457434398521234,1.819101817862221
-5,0.07335837801009748,1.8168757657194003,1,1.7457434398521234,1.819101817862221
-6,0.0007778078627918017,1.7697272490981204,0,1.8183240099994291,1.819101817862221
-7,0.0007778078627918017,1.759257470891594,0,1.8183240099994291,1.819101817862221
-8,0.0007778078627918017,0.11701988543051393,1,1.8183240099994291,1.819101817862221
Index: core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-0.7426201954634707,0,0.0,0.0
-1,0.0,1.0488013697961132,1,0.0,0.0
-2,0.0,0.3868139385499812,0,0.0,0.0
-3,0.0,-0.7478500712173083,0,0.0,0.0
-4,0.0,-0.8194822562586233,0,0.0,0.0
-5,0.0,-0.7599979523823379,0,0.0,0.0
-6,0.0044565421625066826,1.7344677129288661,1,1.8838582379581688,1.8883147801206754
-7,9.94692270928077e-06,0.6827358169344088,1,1.8883048331979666,1.8883147801206759
-8,4.848190103268202e-05,1.8777066097818844,1,1.8882662982196436,1.8883147801206763
-9,1.030426502612869e-05,1.7065971149573846,1,1.8883044758556502,1.8883147801206763
-10,9.65839764610621e-07,0.8641455542883205,1,1.8883138142809117,1.8883147801206763
Index: core/acquisition/RESULTS/new_branin_nEI_0.01/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_nEI_0.01/it_2.csv b/core/acquisition/RESULTS/new_branin_nEI_0.01/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_nEI_0.01/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,3 +0,0 @@
-,Opportunity_cost
-0,"tensor([185.0307], dtype=torch.float64)"
-1,"tensor([185.4388], dtype=torch.float64)"
Index: core/acquisition/RESULTS/new_branin_nEI_0.001/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_nEI_0.001/it_2.csv b/core/acquisition/RESULTS/new_branin_nEI_0.001/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_nEI_0.001/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,5 +0,0 @@
-,Opportunity_cost
-0,"tensor([194.0528], dtype=torch.float64)"
-1,"tensor([194.2962], dtype=torch.float64)"
-2,"tensor([194.1639], dtype=torch.float64)"
-3,"tensor([198.6499], dtype=torch.float64)"
Index: core/acquisition/RESULTS/new_branin_nEI_0.0001/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_nEI_0.0001/it_2.csv b/core/acquisition/RESULTS/new_branin_nEI_0.0001/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_nEI_0.0001/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,3 +0,0 @@
-,Opportunity_cost
-0,"tensor([198.0179], dtype=torch.float64)"
-1,"tensor([210.7191], dtype=torch.float64)"
Index: core/acquisition/RESULTS/new_branin_nEI_1.0/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_nEI_1.0/it_2.csv b/core/acquisition/RESULTS/new_branin_nEI_1.0/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_nEI_1.0/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,3 +0,0 @@
-,Opportunity_cost
-0,"tensor([198.3551], dtype=torch.float64)"
-1,"tensor([212.1355], dtype=torch.float64)"
Index: core/acquisition/RESULTS/new_branin_nEI_1e-06/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_nEI_1e-06/it_2.csv b/core/acquisition/RESULTS/new_branin_nEI_1e-06/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_nEI_1e-06/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,4 +0,0 @@
-,Opportunity_cost
-0,"tensor([185.0307], dtype=torch.float64)"
-1,"tensor([196.3695], dtype=torch.float64)"
-2,"tensor([213.1038], dtype=torch.float64)"
Index: core/acquisition/RESULTS/NN_nEI/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_nEI/it_2.csv b/core/acquisition/RESULTS/NN_nEI/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_nEI/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,4 +0,0 @@
-,Opportunity_cost
-0,0.6557999849319458
-1,0.6488000154495239
-2,0.8533999919891357
Index: core/acquisition/RESULTS/test_function_2_nEI_1.0/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_nEI_1.0/it_2.csv b/core/acquisition/RESULTS/test_function_2_nEI_1.0/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_nEI_1.0/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,7 +0,0 @@
-,OC GP mean,OC GP sampled
-0,0.2616196630189779,0.0
-1,0.20782956681871778,0.20227160709038108
-2,0.29601583728022635,0.30303533276173195
-3,0.322222029751844,0.30303533276173195
-4,0.3243971346472807,0.30303533276173195
-5,0.3268764874273582,0.30303533276173195
Index: core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.0/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.0/it_2.csv b/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.0/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.0/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,31 +0,0 @@
-,OC GP mean,OC GP sampled
-0,10.418661378202202,10.334927680451615
-1,10.625407306878682,10.558781835640477
-2,10.639043306039966,10.665363539534647
-3,10.691275876084994,10.665363539534647
-4,0.0,10.665363539534647
-5,10.665731438059943,10.665363539534647
-6,10.719367782835798,10.711447782025244
-7,10.72698742395516,10.711447782025244
-8,10.727538001624147,10.72713637901921
-9,10.727541415180491,10.72713637901921
-10,10.727539782802783,10.72713637901921
-11,10.72753317306714,10.72713637901921
-12,10.727514137569328,10.72713637901921
-13,10.727512895473852,10.72713637901921
-14,10.727509789507263,10.72713637901921
-15,10.727508515775956,10.72713637901921
-16,10.727507355006288,10.72713637901921
-17,10.727505432102092,10.72713637901921
-18,10.727512154226762,10.72713637901921
-19,10.727501020891122,10.72713637901921
-20,10.727503738792496,10.72713637901921
-21,10.727503242256804,10.72713637901921
-22,10.727497970457373,10.72713637901921
-23,10.72750363558109,10.72713637901921
-24,10.727507401511968,10.72713637901921
-25,10.727497403631405,10.72713637901921
-26,10.727500812862093,10.72713637901921
-27,10.727506134099947,10.72713637901921
-28,10.727503587269991,10.72713637901921
-29,10.727504811029048,10.72713637901921
Index: core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.1/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.1/it_2.csv b/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.1/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.1/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,10 +0,0 @@
-,OC GP mean,OC GP sampled
-0,0.0,0.0
-1,10.199716220699319,0.0
-2,0.0,0.0
-3,10.222859350954508,10.125433065384708
-4,10.233447446131406,10.125433065384708
-5,10.344401009234113,10.343579656183802
-6,10.338211563876557,10.343579656183802
-7,10.323343302542915,10.343579656183802
-8,10.40807137833905,10.343579656183802
Index: core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0/it_2.csv b/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,3 +0,0 @@
-,OC GP mean,OC GP sampled
-0,0.26528700691664103,0.13168567657544752
-1,0.23693562828572393,0.23593518545741388
Index: core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0_n_c_0.1/it_2.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0_n_c_0.1/it_2.csv b/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0_n_c_0.1/it_2.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0_n_c_0.1/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,9 +0,0 @@
-,OC GP mean,OC GP sampled
-0,0.0,0.0
-1,10.142076482770475,10.142096394353008
-2,10.137697409210165,10.142300666525728
-3,10.13784653702106,10.142300666525728
-4,10.138055901708777,10.142300666525728
-5,10.142377911947891,10.142300666525728
-6,10.225914922735953,10.226408852893352
-7,10.230496986089223,10.226408852893352
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_3.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_3.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_3.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_3.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,25 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,1.1785700180525343,1,0.0,0.0
-1,0.0,0.24726025517779035,1,0.0,0.0
-2,0.0,1.6626083975132881,0,0.0,0.0
-3,0.0,1.4092197851641939,1,0.0,0.0
-4,0.3900545303657219,1.482489501083295,0,1.429047287496499,1.819101817862221
-5,0.3900545303657219,1.6235975670702325,1,1.429047287496499,1.819101817862221
-6,0.18212046289143569,0.5237776010631402,1,1.6369813549707852,1.819101817862221
-7,0.18212046289143569,1.1284034779662149,0,1.6369813549707852,1.819101817862221
-8,0.18212046289143569,1.5561871182115221,0,1.6369813549707852,1.819101817862221
-9,0.18212046289143569,1.5561287651132318,1,1.6369813549707852,1.819101817862221
-10,0.18212046289143569,1.6196361666979202,0,1.6369813549707852,1.819101817862221
-11,0.18212046289143569,0.2031870737431058,1,1.6369813549707852,1.819101817862221
-12,0.18212046289143569,1.4973486340601772,1,1.6369813549707852,1.819101817862221
-13,0.18212046289143569,1.6828090919862981,0,1.6369813549707852,1.819101817862221
-14,0.18212046289143569,1.5949274496611996,1,1.6369813549707852,1.819101817862221
-15,0.18212046289143569,1.1740452718540273,0,1.6369813549707852,1.819101817862221
-16,0.18212046289143569,1.5956137759649576,0,1.6369813549707852,1.819101817862221
-17,0.18212046289143569,1.6003075835638312,1,1.6369813549707852,1.819101817862221
-18,0.18212046289143569,1.600187470975972,0,1.6369813549707852,1.819101817862221
-19,0.18212046289143569,1.5113297264953978,1,1.6369813549707852,1.819101817862221
-20,0.18212046289143569,1.6170782387923437,0,1.6369813549707852,1.819101817862221
-21,0.18212046289143569,1.529012916065565,1,1.6369813549707852,1.819101817862221
-22,0.18212046289143569,1.6386422945681631,0,1.6369813549707852,1.819101817862221
-23,0.18212046289143569,1.5507243215619582,1,1.6369813549707852,1.819101817862221
Index: core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_3.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_3.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_3.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_3.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,25 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,1.1864646246965842,1,0.0,0.0
-1,0.0,0.25735687273176844,1,0.0,0.0
-2,0.0,1.6649632613594392,0,0.0,0.0
-3,0.0,1.4270645372632684,1,0.0,0.0
-4,0.3900545303657219,0.4830446804204948,1,1.429047287496499,1.819101817862221
-5,0.3900545303657219,1.092626697176826,0,1.429047287496499,1.819101817862221
-6,0.3900545303657219,0.8094846965159783,1,1.429047287496499,1.819101817862221
-7,0.3900545303657219,1.566586649637077,1,1.429047287496499,1.819101817862221
-8,0.25745891714157265,1.1584832391817366,0,1.5616429007206483,1.819101817862221
-9,0.25745891714157265,1.6078973875783042,0,1.5616429007206483,1.819101817862221
-10,0.25745891714157265,1.5986314143547187,1,1.5616429007206483,1.819101817862221
-11,0.2169920843285762,1.5772641178654434,1,1.6021097335336447,1.819101817862221
-12,0.2169920843285762,1.6629163715792556,0,1.6021097335336447,1.819101817862221
-13,0.2169920843285762,1.5999800370903499,1,1.6021097335336447,1.819101817862221
-14,0.2169920843285762,1.677600668744216,0,1.6021097335336447,1.819101817862221
-15,0.2169920843285762,1.6159148736521027,1,1.6021097335336447,1.819101817862221
-16,0.20675580702997665,1.6926263844502294,0,1.6123460108322443,1.819101817862221
-17,0.20675580702997665,1.6263865907217803,1,1.6123460108322443,1.819101817862221
-18,0.19635446415321933,1.6041804858592108,1,1.6227473537090016,1.819101817862221
-19,0.19635446415321933,1.7151943689447702,0,1.6227473537090016,1.819101817862221
-20,0.19635446415321933,1.6382350439801594,1,1.6227473537090016,1.819101817862221
-21,0.18425746945774923,1.7147257043829307,0,1.6348443484044717,1.819101817862221
-22,0.18425746945774923,1.649104164242395,1,1.6348443484044717,1.819101817862221
-23,0.16744412461517477,1.6428689888197532,1,1.6516576932470461,1.819101817862221
Index: core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv b/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,102 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,157.3397692762597,0,0.0,0.0,0.0
-1,0.0,0.0,317.38591649830454,0,0.0,0.0,0.0
-2,0.0,0.0,202.5437878791315,0,0.0,0.0,0.0
-3,0.0,0.0,340.72119557000997,0,0.0,0.0,0.0
-4,0.0,0.0,414.7234657817956,0,0.0,0.0,0.0
-5,0.0,0.0,80.29035115587997,0,0.0,0.0,0.0
-6,0.0,0.0,121.71556224001858,0,0.0,0.0,0.0
-7,0.0,0.0,104.67659751267301,0,0.0,0.0,0.0
-8,0.0,0.0,94.21922935421424,0,0.0,0.0,0.0
-9,0.0,0.0,31.809118035924268,0,0.0,0.0,0.0
-10,0.0,0.0,112.29637579337414,0,0.0,0.0,0.0
-11,0.0,0.0,11.354837908268571,0,0.0,0.0,0.0
-12,0.0,0.0,99.71402134678571,0,0.0,0.0,0.0
-13,0.0,0.0,174.88049734245632,0,0.0,0.0,0.0
-14,0.0,0.0,237.67070932861714,0,0.0,0.0,0.0
-15,0.0,0.0,176.90637459977955,1,0.0,0.0,0.0
-16,0.0,0.0,59.00349355382833,0,0.0,0.0,0.0
-17,0.0,0.0,3.4375751446310825,0,0.0,0.0,0.0
-18,0.0,0.0,68.15009387817452,0,0.0,0.0,0.0
-19,0.0,0.0,241.3140736736848,1,0.0,0.0,0.0
-20,0.0,0.0,132.36819516259638,0,0.0,0.0,0.0
-21,0.0,0.0,54.276262792751474,0,0.0,0.0,0.0
-22,0.0,0.0,8.920442603864487,0,0.0,0.0,0.0
-23,0.0,0.0,115.99562871403036,0,0.0,0.0,0.0
-24,0.0,0.0,223.03733837219306,1,0.0,0.0,0.0
-25,0.0,0.0,278.0222253899552,0,0.0,0.0,0.0
-26,0.0,0.0,5.424724291193775,0,0.0,0.0,0.0
-27,0.0,0.0,0.3402516079990876,0,0.0,0.0,0.0
-28,0.0,0.0,295.3591497871967,0,0.0,0.0,0.0
-29,0.0,0.0,101.70578815011882,0,0.0,0.0,0.0
-30,0.0,0.0,269.33240213361114,0,0.0,0.0,0.0
-31,0.0,0.0,45.243771343610376,0,0.0,0.0,0.0
-32,0.0,0.0,1.5531736502638476,0,0.0,0.0,0.0
-33,0.0,0.0,59.66929937940855,0,0.0,0.0,0.0
-34,0.0,0.0,190.8516997648499,1,0.0,0.0,0.0
-35,0.0,0.0,245.97895310313132,0,0.0,0.0,0.0
-36,0.0,0.0,207.83132247114116,0,0.0,0.0,0.0
-37,0.0,0.0,60.615419973569765,0,0.0,0.0,0.0
-38,0.0,0.0,397.65829963428547,0,0.0,0.0,0.0
-39,0.0,0.0,23.682150540582526,0,0.0,0.0,0.0
-40,0.0,0.0,129.5274508331227,1,0.0,0.0,0.0
-41,0.0,0.0,132.37854865003746,0,0.0,0.0,0.0
-42,0.0,0.0,10.592541720981101,0,0.0,0.0,0.0
-43,0.0,0.0,297.46880141537633,0,0.0,0.0,0.0
-44,0.0,0.0,15.579530823454366,0,0.0,0.0,0.0
-45,0.0,0.0,352.63600297383715,0,0.0,0.0,0.0
-46,0.0,0.0,118.44075513068793,0,0.0,0.0,0.0
-47,0.0,0.0,116.2455545368044,0,0.0,0.0,0.0
-48,0.0,0.0,65.26169120669208,0,0.0,0.0,0.0
-49,0.0,0.0,271.08142029029483,0,0.0,0.0,0.0
-50,0.0,0.0,47.001385500644254,0,0.0,0.0,0.0
-51,0.0,0.0,61.575845817793706,0,0.0,0.0,0.0
-52,0.0,0.0,122.97772065445234,0,0.0,0.0,0.0
-53,0.0,0.0,88.8942202313377,0,0.0,0.0,0.0
-54,0.0,0.0,26.19207258955208,0,0.0,0.0,0.0
-55,0.0,0.0,187.4421508882665,1,0.0,0.0,0.0
-56,0.0,0.0,74.20831587907446,0,0.0,0.0,0.0
-57,0.0,0.0,270.9977502346492,0,0.0,0.0,0.0
-58,0.0,0.0,111.30052472420253,0,0.0,0.0,0.0
-59,0.0,0.0,126.5257295354131,0,0.0,0.0,0.0
-60,0.0,0.0,136.52622732551205,0,0.0,0.0,0.0
-61,0.0,0.0,62.377879048514586,0,0.0,0.0,0.0
-62,0.0,0.0,236.30292889093533,0,0.0,0.0,0.0
-63,0.0,0.0,110.22727463086754,0,0.0,0.0,0.0
-64,0.0,0.0,300.65389274997307,0,0.0,0.0,0.0
-65,0.0,0.0,31.650508832165787,0,0.0,0.0,0.0
-66,0.0,0.0,113.9196676007077,0,0.0,0.0,0.0
-67,0.0,0.0,118.41400467876134,0,0.0,0.0,0.0
-68,0.0,0.0,106.97218319016591,0,0.0,0.0,0.0
-69,0.0,0.0,14.047019437595843,0,0.0,0.0,0.0
-70,0.0,0.0,389.4836846211869,0,0.0,0.0,0.0
-71,0.0,0.0,150.1329036045077,0,0.0,0.0,0.0
-72,0.0,0.0,249.5277819136934,0,0.0,0.0,0.0
-73,0.0,0.0,172.31581054665554,0,0.0,0.0,0.0
-74,0.0,0.0,111.97711832595921,1,0.0,0.0,0.0
-75,0.0,0.0,169.97167682082377,0,0.0,0.0,0.0
-76,0.0,0.0,315.3665776680823,0,0.0,0.0,0.0
-77,0.0,0.0,150.13420363166452,0,0.0,0.0,0.0
-78,0.0,0.0,13.9693410365748,0,0.0,0.0,0.0
-79,0.0,0.0,314.1429537743464,0,0.0,0.0,0.0
-80,0.0,0.0,181.21649249244612,0,0.0,0.0,0.0
-81,0.0,0.0,9.384175171335068,0,0.0,0.0,0.0
-82,0.0,0.0,354.4310989783487,0,0.0,0.0,0.0
-83,0.0,0.0,154.71032828384253,0,0.0,0.0,0.0
-84,0.0,0.0,303.40252148698323,0,0.0,0.0,0.0
-85,0.0,0.0,180.65714285785708,1,0.0,0.0,0.0
-86,0.0,0.0,250.16014429026623,0,0.0,0.0,0.0
-87,0.0,0.0,132.8417134254664,0,0.0,0.0,0.0
-88,0.0,0.0,92.0788113521894,0,0.0,0.0,0.0
-89,0.0,0.0,30.40222093971257,0,0.0,0.0,0.0
-90,0.0,0.0,225.27473159772993,0,0.0,0.0,0.0
-91,0.0,0.0,141.63158652814315,0,0.0,0.0,0.0
-92,0.0,0.0,206.97632988644864,0,0.0,0.0,0.0
-93,0.0,0.0,20.53747221839355,0,0.0,0.0,0.0
-94,0.0,0.0,313.38785570564227,0,0.0,0.0,0.0
-95,0.0,0.0,199.59277125574712,1,0.0,0.0,0.0
-96,0.0,0.0,79.03293852820121,0,0.0,0.0,0.0
-97,0.0,0.0,88.39937218088699,0,0.0,0.0,0.0
-98,0.0,0.0,170.38517560611461,0,0.0,0.0,0.0
-99,0.0,0.0,202.91768843166997,0,0.0,0.0,0.0
-100,241.30124999999998,259.38831590343034,240.35552204991956,1,0.0,259.38831590343034,268.78847725364176
Index: core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/it_4.csv b/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,73.16643823947217,87.04988457748132,0,0.0,0.0,0.0
-1,0.0,0.0,1.1707704443384113,136.51798664526703,0,0.0,0.0,0.0
-2,0.0,0.0,40.9218015300289,102.81080186784511,0,0.0,0.0,0.0
-3,0.0,0.0,220.96460929105226,15.630088705993732,0,0.0,0.0,0.0
-4,0.0,0.0,140.0734659251441,4.129160975254793,0,0.0,0.0,0.0
-5,0.0,0.0,270.16736540987813,70.16779206223681,0,0.0,0.0,0.0
-6,0.0,0.0,58.979575886305255,65.47526288458955,0,0.0,0.0,0.0
-7,0.0,0.0,152.78392778407778,10.671204427054949,0,0.0,0.0,0.0
-8,0.0,0.0,364.3656810292203,108.78549546595892,0,0.0,0.0,0.0
-9,0.0,0.0,168.2281981312852,6.1705624471406,0,0.0,0.0,0.0
-10,0.0,0.0,184.11756643208057,5.946081911671629,0,0.0,0.0,268.788504671247
-11,0.0,174.72477897614058,188.1216548629703,-5.506965368558449,1,0.0,174.72477897614058,268.788504671247
-12,190.01434290073934,229.08424683262422,240.74276600237192,-4.288326704152704,1,0.0,229.08424683262422,268.788504671247
Index: core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv b/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-16.17349981418002,0,0.0,0.0,0.0
-1,0.0,0.0,-33.89852906594548,0,0.0,0.0,0.0
-2,0.0,0.0,-19.8018006129322,0,0.0,0.0,0.0
-3,0.0,0.0,-9.74934603798119,1,0.0,0.0,0.0
-4,0.0,0.0,-4.530545331387966,1,0.0,0.0,0.0
-5,0.0,0.0,-4.027809998357435,0,0.0,0.0,0.0
-6,0.0,0.0,-17.98848510329174,1,0.0,0.0,0.0
-7,0.0,0.0,-7.758961272950788,0,0.0,0.0,0.0
-8,0.0,0.0,-9.783343091172997,1,0.0,0.0,0.0
-9,0.0,0.0,-22.78209450203581,1,0.0,0.0,0.0
-10,1.1742743288663418,1.1742743288663418,-20.125199527177973,1,0.0,-0.0,0.0
Index: core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv b/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-21.21452367125748,0,0.0,0.0,0.0
-1,0.0,0.0,-38.943841805840506,0,0.0,0.0,0.0
-2,0.0,0.0,-24.105634127660828,0,0.0,0.0,0.0
-3,0.0,0.0,-14.095559236122936,1,0.0,0.0,0.0
-4,0.0,0.0,-8.984526597280606,1,0.0,0.0,0.0
-5,0.0,0.0,-8.07975175413678,0,0.0,0.0,0.0
-6,0.0,0.0,-22.349515230733942,1,0.0,0.0,0.0
-7,0.0,0.0,-11.431299779187821,0,0.0,0.0,0.0
-8,0.0,0.0,-13.53661731010111,1,0.0,0.0,0.0
-9,0.0,0.0,-28.379260652008156,1,0.0,0.0,0.0
-10,-0.0,-0.0,-16.970576095932394,1,0.0,-0.0,-0.0
-11,-0.0,-0.0,-19.98562645748909,1,0.0,-0.0,-0.0
Index: core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/it_4.csv b/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,19 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-21.21452367125748,0,0.0,0.0,0.0
-1,0.0,0.0,-38.943841805840506,0,0.0,0.0,0.0
-2,0.0,0.0,-24.105634127660828,0,0.0,0.0,0.0
-3,0.0,0.0,-14.095559236122936,1,0.0,0.0,0.0
-4,0.0,0.0,-8.984526597280606,1,0.0,0.0,0.0
-5,0.0,0.0,-8.07975175413678,0,0.0,0.0,0.0
-6,0.0,0.0,-22.349515230733942,1,0.0,0.0,0.0
-7,0.0,0.0,-11.431299779187821,0,0.0,0.0,0.0
-8,0.0,0.0,-13.53661731010111,1,0.0,0.0,0.0
-9,0.0,0.0,-28.379260652008156,1,0.0,0.0,0.0
-10,-0.0,-11.575224248100172,-15.999985345785541,0,-0.0,-11.575224248100172,-3.8257256711336547
-11,-0.0,-13.612796686496747,-26.22760099873026,1,-0.0,-13.612796686496747,-3.8257256711336547
-12,-0.0,-7.488184630340267,-18.282409262471678,1,-0.0,-7.488184630340267,-3.8257256711336547
-13,-0.0,-8.437205153478125,-15.68720519519552,1,-0.0,-8.437205153478125,-3.8257256711336547
-14,-0.0,-5.747734828655353,-4.138197352326653,1,-0.0,-5.747734828655353,-3.8257256711336547
-15,-0.0,-3.949550270520027,-9.987446691191222,1,-0.0,-3.949550270520027,-3.8257256711336547
-16,-0.0,-27.498970122355594,-32.23801243118782,1,-0.0,-27.498970122355594,-3.8257256711336547
-17,-0.0,-4.0177770630255205,-6.015975961820563,0,-0.0,-4.0177770630255205,-3.825725671133654
Index: core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,18 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-16.214896615412734,0,0.0,0.0,0.0
-1,0.0,0.0,-33.94425373983955,0,0.0,0.0,0.0
-2,0.0,0.0,-19.099305341431087,0,0.0,0.0,0.0
-3,0.0,0.0,-9.089615719742406,1,0.0,0.0,0.0
-4,0.0,0.0,-3.979562790606903,1,0.0,0.0,0.0
-5,0.0,0.0,-3.071133042825684,0,0.0,0.0,0.0
-6,0.0,0.0,-17.34370641371069,1,0.0,0.0,0.0
-7,0.0,0.0,-6.4192301292445215,0,0.0,0.0,0.0
-8,0.0,0.0,-8.525283439364093,1,0.0,0.0,0.0
-9,0.0,0.0,-23.384689435189724,1,0.0,0.0,0.0
-10,1.1742743288663418,17.307063009474682,-16.854376252275102,1,-0.0,-16.13278868060834,1.1742743288663418
-11,1.1742743288663444,1.1742743288663444,-11.653572359150182,1,-0.0,-0.0,1.1742743288663444
-12,1.1742743288663444,1.1742743288663444,0.23618954120472588,0,-0.0,-0.0,1.1742743288663444
-13,1.1742743288663462,1.1742743288663462,-5.591028578980081,1,-0.0,-0.0,1.1742743288663462
-14,1.1742743288663462,1.1742743288663462,-8.512807388944156,1,-0.0,-0.0,1.1742743288663462
-15,1.1742743288663462,1.1742743288663462,1.0446162460139399,0,0.0,0.0,1.1742743288663462
-16,0.1707638261527542,0.1707418827301055,0.9186234742179129,1,1.003510502713592,1.0035324461362407,1.1742743288663462
Index: core/acquisition/RESULTS/mistery_hybrid_KG_current_step1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_current_step1e-06/it_4.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_current_step1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_current_step1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,35 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-16.214896615412734,0,0.0,0.0
-1,0.0,-33.94425373983955,0,0.0,0.0
-2,0.0,-19.099305341431087,0,0.0,0.0
-3,0.0,-9.089615719742406,1,0.0,0.0
-4,0.0,-3.979562790606903,1,0.0,0.0
-5,0.0,-3.071133042825684,0,0.0,0.0
-6,0.0,-17.34370641371069,1,0.0,0.0
-7,0.0,-6.4192301292445215,0,0.0,0.0
-8,0.0,-8.525283439364093,1,0.0,0.0
-9,0.0,-23.384689435189724,1,0.0,0.0
-10,1.17427432886634,-21.250743662494745,1,-0.0,1.17427432886634
-11,1.17427432886634,-10.893764435735996,0,-0.0,1.17427432886634
-12,1.17427432886634,-10.999304173578057,0,-0.0,1.17427432886634
-13,1.17427432886634,-22.727324417741812,1,-0.0,1.17427432886634
-14,1.17427432886634,-10.01525215104085,1,-0.0,1.17427432886634
-15,1.1742743288663418,-11.001272200527458,0,-0.0,1.1742743288663418
-16,1.1742743288663462,-26.758618486275253,0,-0.0,1.1742743288663462
-17,1.1742743288663462,-14.262342700218621,1,-0.0,1.1742743288663462
-18,1.1742743288663462,0.9024551557247552,0,-0.0,1.1742743288663462
-19,0.03335123887431113,-12.038408585367476,1,1.140923089992035,1.1742743288663462
-20,1.1742743288663462,-7.042585233138656,1,0.0,1.1742743288663462
-21,0.05012097043719077,1.0035748446416946,0,1.1241533584291554,1.1742743288663462
-22,0.065995180762771,-4.910462538544116,1,1.1082791481035752,1.1742743288663462
-23,0.34375697140705785,-22.19455604564594,1,0.8305173574592883,1.1742743288663462
-24,0.1882344744156681,-2.435005504030396,0,0.9860398544506781,1.1742743288663462
-25,0.0010400301765409736,0.4552382559554637,1,1.1732342986898052,1.1742743288663462
-26,0.0004182673994339581,-21.250703941246684,1,1.1738560614669122,1.1742743288663462
-27,0.00041911518209136744,-10.3946088431299,1,1.1738552136842548,1.1742743288663462
-28,0.0005281309691946845,-7.594775245605672,1,1.1737461978971515,1.1742743288663462
-29,0.0007278634899057224,-35.912691584491405,0,1.1735464653764405,1.1742743288663462
-30,0.0005209626557372005,-28.741024445974052,1,1.173753366210609,1.1742743288663462
-31,0.0005032124841406471,-27.2508895428864,1,1.1737711163822055,1.1742743288663462
-32,0.0005074716308559601,-17.81967845076878,1,1.1737668572354902,1.1742743288663462
-33,0.0003603483065912627,-11.631942610419623,1,1.173913980559755,1.1742743288663462
Index: core/acquisition/RESULTS/mistery_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-16.17349981418002,0,0.0,0.0,0.0
-1,0.0,0.0,-33.89852906594548,0,0.0,0.0,0.0
-2,0.0,0.0,-19.8018006129322,0,0.0,0.0,0.0
-3,0.0,0.0,-9.74934603798119,1,0.0,0.0,0.0
-4,0.0,0.0,-4.530545331387966,1,0.0,0.0,0.0
-5,0.0,0.0,-4.027809998357435,0,0.0,0.0,0.0
-6,0.0,0.0,-17.98848510329174,1,0.0,0.0,0.0
-7,0.0,0.0,-7.758961272950788,0,0.0,0.0,0.0
-8,0.0,0.0,-9.783343091172997,1,0.0,0.0,0.0
-9,0.0,0.0,-22.78209450203581,1,0.0,0.0,0.0
-10,1.1742743288663418,1.1742743288663418,-20.896076123480352,1,0.0,-0.0,0.0
Index: core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_4.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,23 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-13.43193706004099,0,0.0,0.0,0.0
-1,0.0,0.0,-12.289807879047958,1,0.0,0.0,0.0
-2,0.0,0.0,-2.759817483811472,0,0.0,0.0,0.0
-3,0.0,0.0,-25.791875517859637,0,0.0,0.0,0.0
-4,0.0,0.0,-8.439416540319327,0,0.0,0.0,0.0
-5,0.0,0.0,-9.286644631544037,1,0.0,0.0,0.0
-6,0.0,0.0,-16.511538271093222,1,0.0,0.0,0.0
-7,0.0,0.0,-6.781362297134789,0,0.0,0.0,0.0
-8,0.0,0.0,-12.933364644416127,0,0.0,0.0,0.0
-9,0.0,0.0,-25.960379002027448,0,0.0,0.0,0.0
-10,0.0,0.0,-17.90818625959017,1,0.0,0.0,0.0
-11,0.0,0.0,-15.688329010440397,1,0.0,0.0,0.0
-12,0.0,0.0,-8.484901079023219,1,0.0,0.0,0.0
-13,0.0,0.0,-5.375447180557662,0,0.0,0.0,0.0
-14,0.0,0.0,-0.3978732915471677,1,0.0,0.0,0.0
-15,1.1742743288663462,1.1742743288663462,-2.4853209301552788,1,0.0,-0.0,0.0
-16,1.1742743288663462,1.1742743288663462,-2.6434930621828876,1,0.0,-0.0,0.0
-17,1.1742743288663462,3.745900396006167,-6.354004757480015,1,0.0,-2.571626067139821,0.0
-18,1.1742743288663462,0.7969442625034482,-10.151168735227557,1,0.0,0.377330066362898,0.0
-19,1.1742743288663462,0.7694649984298048,-35.15732890858464,0,0.0,0.40480933043654144,0.0
-20,1.1742743288663462,0.7679103034972101,-7.052673169983235,0,0.0,0.4063640253691361,0.0
-21,1.1742743288663462,0.76936107892615,-19.656993000677996,0,0.0,0.4049132499401962,0.0
Index: core/acquisition/RESULTS/mistery_penalised_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_penalised_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/mistery_penalised_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_penalised_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-16.214896615412734,0,0.0,0.0
-1,0.0,-33.94425373983955,0,0.0,0.0
-2,0.0,-19.099305341431087,0,0.0,0.0
-3,0.0,-9.089615719742406,1,0.0,0.0
-4,0.0,-3.979562790606903,1,0.0,0.0
-5,0.0,-3.071133042825684,0,0.0,0.0
-6,0.0,-17.34370641371069,1,0.0,0.0
-7,0.0,-6.4192301292445215,0,0.0,0.0
-8,0.0,-8.525283439364093,1,0.0,0.0
-9,0.0,-23.384689435189724,1,0.0,0.0
-10,1.174272986529692,-21.249641780791652,1,-0.0,1.174272986529692
-11,1.174272986529692,-0.1444325489564585,0,-0.0,1.174272986529692
Index: core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv b/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-11.173499814180019,0,0.0,0.0,0.0
-1,0.0,0.0,-28.89852906594548,0,0.0,0.0,0.0
-2,0.0,0.0,-14.801800612932203,0,0.0,0.0,0.0
-3,0.0,0.0,-4.74934603798119,1,0.0,0.0,0.0
-4,0.0,0.0,0.46945466861203355,1,0.0,0.0,0.0
-5,0.0,0.0,0.9721900016425646,0,0.0,0.0,0.0
-6,0.0,0.0,-12.988485103291739,1,0.0,0.0,0.0
-7,0.0,0.0,-2.7589612729507884,0,0.0,0.0,0.0
-8,0.0,0.0,-4.783343091172997,1,0.0,0.0,0.0
-9,0.0,0.0,-17.78209450203581,1,0.0,0.0,0.0
-10,0.0,-9.88863586145067,-15.99026958822921,1,0.0,-9.88863586145067,6.174274328866342
-11,0.0,2.577289684649388,4.285137893870023,0,0.0,2.577289684649388,6.174274328866342
-12,1.020988743467953,3.0963127596262447,2.098229824956209,1,0.0,3.0963127596262447,6.174274328866342
Index: core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1e-06_n_c_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1e-06_n_c_1e-06/it_4.csv b/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1e-06_n_c_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1e-06_n_c_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-16.214896615412734,0,0.0,0.0,0.0
-1,0.0,0.0,-33.94425373983955,0,0.0,0.0,0.0
-2,0.0,0.0,-19.099305341431087,0,0.0,0.0,0.0
-3,0.0,0.0,-9.089615719742406,1,0.0,0.0,0.0
-4,0.0,0.0,-3.979562790606903,1,0.0,0.0,0.0
-5,0.0,0.0,-3.071133042825684,0,0.0,0.0,0.0
-6,0.0,0.0,-17.34370641371069,1,0.0,0.0,0.0
-7,0.0,0.0,-6.4192301292445215,0,0.0,0.0,0.0
-8,0.0,0.0,-8.525283439364093,1,0.0,0.0,0.0
-9,0.0,0.0,-23.384689435189724,1,0.0,0.0,0.0
-10,1.1742743288663418,17.30989994460185,-21.248661818973183,1,0.0,-16.135625615735506,0.0
Index: core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,19 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,73.12504143823946,0,0.0,0.0,0.0
-1,0.0,0.0,1.1250457704443384,0,0.0,0.0,0.0
-2,0.0,0.0,41.624296801530015,0,0.0,0.0,0.0
-3,0.0,0.0,221.62433960929104,0,0.0,0.0,0.0
-4,0.0,0.0,140.62444846592516,0,0.0,0.0,0.0
-5,0.0,0.0,271.1240423654099,0,0.0,0.0,0.0
-6,0.0,0.0,59.62435457588631,0,0.0,0.0,0.0
-7,0.0,0.0,154.12365892778405,0,0.0,0.0,0.0
-8,0.0,0.0,365.62374068102923,0,0.0,0.0,0.0
-9,0.0,0.0,167.62560319813127,0,0.0,0.0,0.0
-10,268.76824889115545,268.76824889115545,238.38218871921126,1,0.0,0.0,268.76824889115545
-11,11.093432719333066,23.34654079202724,240.92730104422117,1,257.69507193123275,245.44196385853857,268.7885046505658
-12,27.860396343291086,17.809967856986816,251.04738346544366,1,240.92810830727473,250.978536793579,268.7885046505658
-13,14.280563287434092,16.379069258108217,213.23893793997217,0,254.50794136313172,252.4094353924576,268.7885046505658
-14,17.741706058290646,7.809637505659623,259.2952139575635,1,251.04679859227517,260.9788671449062,268.7885046505658
-15,9.493680974477627,0.8174855452417091,212.7107340872298,0,259.2948236760882,267.9710191053241,268.7885046505658
-16,9.493680974477627,0.5820953884700089,233.97273661081732,0,259.2948236760882,268.2064092620958,268.7885046505658
-17,9.493680974477627,0.6997009901335787,268.05220582466364,1,259.2948236760882,268.08880366043223,268.7885046505658
Index: core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_4.csv b/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,73.12504143823946,0,0.0,0.0
-1,0.0,1.1250457704443384,0,0.0,0.0
-2,0.0,41.624296801530015,0,0.0,0.0
-3,0.0,221.62433960929104,0,0.0,0.0
-4,0.0,140.62444846592516,0,0.0,0.0
-5,0.0,271.1240423654099,0,0.0,0.0
-6,0.0,59.62435457588631,0,0.0,0.0
-7,0.0,154.12365892778405,0,0.0,0.0
-8,0.0,365.62374068102923,0,0.0,0.0
-9,0.0,167.62560319813127,0,0.0,0.0
-10,268.77083021448334,229.98281705232915,0,0.0,268.77083021448334
-11,78.4125301423629,187.81779461336663,0,190.3756893119493,268.7882194543122
-12,21.93601742079403,214.10265122671666,1,246.85220203351815,268.7882194543122
Index: core/acquisition/RESULTS/new_branin_hybrid_KG_v2_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_hybrid_KG_v2_1e-06/it_4.csv b/core/acquisition/RESULTS/new_branin_hybrid_KG_v2_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_hybrid_KG_v2_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,73.12504143823946,0,0.0,0.0,0.0
-1,0.0,0.0,1.1250457704443384,0,0.0,0.0,0.0
-2,0.0,0.0,41.624296801530015,0,0.0,0.0,0.0
-3,0.0,0.0,221.62433960929104,0,0.0,0.0,0.0
-4,0.0,0.0,140.62444846592516,0,0.0,0.0,0.0
-5,0.0,0.0,271.1240423654099,0,0.0,0.0,0.0
-6,0.0,0.0,59.62435457588631,0,0.0,0.0,0.0
-7,0.0,0.0,154.12365892778405,0,0.0,0.0,0.0
-8,0.0,0.0,365.62374068102923,0,0.0,0.0,0.0
-9,0.0,0.0,167.62560319813127,0,0.0,0.0,0.0
-10,268.76824889115545,268.76824889115545,202.66162634644562,0,0.0,0.0,268.76824889115545
-11,268.788504671247,268.788504671247,215.20694315999646,0,0.0,0.0,268.788504671247
Index: core/acquisition/RESULTS/new_branin_hybrid_KG_v21e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_hybrid_KG_v21e-06/it_4.csv b/core/acquisition/RESULTS/new_branin_hybrid_KG_v21e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_hybrid_KG_v21e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,23 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,73.12504143823946,0,0.0,0.0,0.0
-1,0.0,0.0,1.1250457704443384,0,0.0,0.0,0.0
-2,0.0,0.0,41.624296801530015,0,0.0,0.0,0.0
-3,0.0,0.0,221.62433960929104,0,0.0,0.0,0.0
-4,0.0,0.0,140.62444846592516,0,0.0,0.0,0.0
-5,0.0,0.0,271.1240423654099,0,0.0,0.0,0.0
-6,0.0,0.0,59.62435457588631,0,0.0,0.0,0.0
-7,0.0,0.0,154.12365892778405,0,0.0,0.0,0.0
-8,0.0,0.0,365.62374068102923,0,0.0,0.0,0.0
-9,0.0,0.0,167.62560319813127,0,0.0,0.0,0.0
-10,268.76824889115545,268.76824889115545,202.66162634644562,0,0.0,0.0,268.76824889115545
-11,268.78834082196335,268.78834082196335,215.20693947526038,0,0.0,0.0,268.78834082196335
-12,268.7884677402681,268.7884677402681,156.1213889499634,0,0.0,0.0,268.7884677402681
-13,268.7884677402681,268.7884677402681,154.51394598407524,0,0.0,0.0,268.7884677402681
-14,268.78849874202535,268.78849874202535,219.3369131710887,0,0.0,0.0,268.78849874202535
-15,268.78849874202535,268.78849874202535,226.94887941283972,0,0.0,0.0,268.78849874202535
-16,268.78849874202535,268.78849874202535,225.00111110026117,0,0.0,0.0,268.78849874202535
-17,268.78849874202535,268.78849874202535,199.08453941762772,1,0.0,0.0,268.78849874202535
-18,69.70399577247636,63.8741017076093,238.71387309706873,1,199.084502969549,204.91439703441606,268.78849874202535
-19,30.07451023424497,30.106122078395913,247.62477517238665,0,238.71398850778039,238.68237666362944,268.78849874202535
-20,30.07451023424497,29.68369924853016,268.0028240788082,0,238.71398850778039,239.1047994934952,268.78849874202535
-21,1.60714394854989,4.203065759785318,262.50530182807006,1,267.18135479347546,264.58543298224004,268.78849874202535
Index: core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,48 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,73.12504143823946,0,0.0,0.0
-1,0.0,1.1250457704443384,0,0.0,0.0
-2,0.0,41.624296801530015,0,0.0,0.0
-3,0.0,221.62433960929104,0,0.0,0.0
-4,0.0,140.62444846592516,0,0.0,0.0
-5,0.0,271.1240423654099,0,0.0,0.0
-6,0.0,59.62435457588631,0,0.0,0.0
-7,0.0,154.12365892778405,0,0.0,0.0
-8,0.0,365.62374068102923,0,0.0,0.0
-9,0.0,167.62560319813127,0,0.0,0.0
-10,268.77083021448334,177.9419705276238,0,0.0,268.77083021448334
-11,60.25139634012294,185.57115414765406,1,208.53671005568572,268.78810639580865
-12,71.60765434529273,145.03961953841156,0,197.18045205051592,268.78810639580865
-13,70.95931702102968,185.6477636082673,1,197.82878937477898,268.78810639580865
-14,71.88042040280493,188.39843267121876,1,196.9080665633037,268.7884869661086
-15,72.59607543849657,191.5578696604432,1,196.19241152761205,268.7884869661086
-16,77.23189259764192,186.7088909447227,1,191.5565943684667,268.7884869661086
-17,71.44365022168134,184.57064914132536,1,197.34483674442728,268.7884869661086
-18,70.64764006585932,102.68109397906696,0,198.1408469002493,268.7884869661086
-19,70.67123549726813,214.10243948495034,1,198.1172514688405,268.7884869661086
-20,22.49579848378903,179.33613868620083,1,246.29270618745795,268.788504671247
-21,20.52295890406546,282.49758797320067,0,248.26554576718152,268.788504671247
-22,19.333377788935138,184.7308004795104,1,249.45512688231184,268.788504671247
-23,8.847753950346487,200.50071868012967,1,259.9407507209005,268.788504671247
-24,20.274330844002208,101.35618895603582,0,248.51417382724478,268.788504671247
-25,20.440279983857067,197.19386632805308,1,248.34822468738992,268.788504671247
-26,20.5403860706179,241.6584526205408,1,248.24811860062908,268.788504671247
-27,14.041932603247716,423.32676582446476,0,254.74657206799927,268.788504671247
-28,71.41113797999421,252.5007487972426,0,197.37736669125277,268.788504671247
-29,19.08558125572864,225.93201965301043,1,249.70292341551834,268.788504671247
-30,3.8928539670824875,247.39235275162542,1,264.8956507041645,268.788504671247
-31,5.11532468344501,238.8732493087891,1,263.673179987802,268.788504671247
-32,1.8882562204349256,168.00684378198446,1,266.90024845081206,268.788504671247
-33,1.9512896614005513,187.49820613316405,1,266.83721500984643,268.788504671247
-34,1.7045040368240052,168.84001594301824,0,267.084000634423,268.788504671247
-35,1.8797227849310048,186.10626377270282,1,266.908781886316,268.788504671247
-36,3.371482115768913,21.251702760163635,0,265.41702255547807,268.788504671247
-37,1.2506371129955483,354.8733675955718,0,267.53786755825143,268.788504671247
-38,19.459818806201156,223.19394149310193,0,249.32868586504583,268.788504671247
-39,23.141130194071053,232.62132739908188,1,245.64737447717593,268.788504671247
-40,0.626192983264275,260.1567642963974,1,268.1623116879827,268.788504671247
-41,0.34439295268066417,266.81702574333053,1,268.4441117185663,268.788504671247
-42,71.43328052631603,268.1013570456929,1,197.35522414493096,268.788504671247
-43,16.97472213280085,268.3001229121408,1,251.81378253844613,268.788504671247
-44,17.755556611345668,261.679919675486,1,251.03294805990132,268.788504671247
-45,2.029206338005963,260.14087450734445,1,266.759298333241,268.788504671247
-46,0.11204827290367803,268.6715702870025,1,268.6764563983433,268.788504671247
Index: core/acquisition/RESULTS/new_brannin_cEI_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_cEI_1e-06/it_4.csv b/core/acquisition/RESULTS/new_brannin_cEI_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_cEI_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,60 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,73.12504143823946,0,0.0,0.0
-1,0.0,1.1250457704443384,0,0.0,0.0
-2,0.0,41.624296801530015,0,0.0,0.0
-3,0.0,221.62433960929104,0,0.0,0.0
-4,0.0,140.62444846592516,0,0.0,0.0
-5,0.0,271.1240423654099,0,0.0,0.0
-6,0.0,59.62435457588631,0,0.0,0.0
-7,0.0,154.12365892778405,0,0.0,0.0
-8,0.0,365.62374068102923,0,0.0,0.0
-9,0.0,167.62560319813127,0,0.0,0.0
-10,268.77083021448334,181.75035402517872,0,0.0,268.77083021448334
-11,268.788504671247,177.21353800902347,1,0.0,268.788504671247
-12,91.5742693599471,212.20845601182424,1,177.2142353112999,268.788504671247
-13,56.578691759051765,240.04919461621375,1,212.20981291219522,268.788504671247
-14,28.740350330167757,276.2565875746588,0,240.04815434107923,268.788504671247
-15,28.740350330167757,263.3594918051563,1,240.04815434107923,268.788504671247
-16,5.428649403081295,273.6345490033593,0,263.3598552681657,268.788504671247
-17,5.428649403081295,269.497312739617,0,263.3598552681657,268.788504671247
-18,5.428649403081295,268.5867379186445,1,263.3598552681657,268.788504671247
-19,0.2017198336956767,268.76898422481906,1,268.5867848375513,268.788504671247
-20,0.017872127820851347,268.78418960185974,1,268.77063254342613,268.788504671247
-21,0.017872127820851347,268.7896842830032,0,268.77063254342613,268.788504671247
-22,0.017872127820851347,268.78798853448484,1,268.77063254342613,268.788504671247
-23,0.017872127820851347,268.7900518218535,0,268.77063254342613,268.788504671247
-24,0.017872127820851347,268.7913692384796,0,268.77063254342613,268.788504671247
-25,0.017872127820851347,268.78937078551786,0,268.77063254342613,268.788504671247
-26,0.017872127820851347,268.7892576395184,0,268.77063254342613,268.788504671247
-27,0.017872127820851347,268.7906816582399,0,268.77063254342613,268.788504671247
-28,0.017872127820851347,268.7913636838533,0,268.77063254342613,268.788504671247
-29,0.017872127820851347,268.7907510741832,0,268.77063254342613,268.788504671247
-30,0.017872127820851347,268.7906686507634,0,268.77063254342613,268.788504671247
-31,0.017872127820851347,268.79170906803915,0,268.77063254342613,268.788504671247
-32,0.017872127820851347,268.7890319617562,0,268.77063254342613,268.788504671247
-33,0.017872127820851347,268.78933065279654,0,268.77063254342613,268.788504671247
-34,0.017872127820851347,268.7893057215767,0,268.77063254342613,268.788504671247
-35,0.017872127820851347,268.7891806685181,0,268.77063254342613,268.788504671247
-36,0.017872127820851347,268.7896989738446,0,268.77063254342613,268.788504671247
-37,0.017872127820851347,268.78860612481986,0,268.77063254342613,268.788504671247
-38,0.017872127820851347,268.7904184282053,0,268.77063254342613,268.788504671247
-39,0.017872127820851347,268.7896762095876,0,268.77063254342613,268.788504671247
-40,0.017872127820851347,268.7887727297005,0,268.77063254342613,268.788504671247
-41,0.017872127820851347,268.7897650510962,0,268.77063254342613,268.788504671247
-42,0.017872127820851347,268.79033234912697,0,268.77063254342613,268.788504671247
-43,0.017872127820851347,268.7884294936724,0,268.77063254342613,268.788504671247
-44,0.017872127820851347,268.78974526255934,0,268.77063254342613,268.788504671247
-45,0.017872127820851347,268.7861394249291,0,268.77063254342613,268.788504671247
-46,0.017872127820851347,268.7886399856096,0,268.77063254342613,268.788504671247
-47,0.017872127820851347,268.78813884716567,0,268.77063254342613,268.788504671247
-48,0.017872127820851347,268.78908072954516,0,268.77063254342613,268.788504671247
-49,0.017872127820851347,268.7887257621805,0,268.77063254342613,268.788504671247
-50,0.0049608638911990965,268.78925671011626,0,268.7835438073558,268.788504671247
-51,0.0049608638911990965,268.7872067752343,0,268.7835438073558,268.788504671247
-52,0.0049608638911990965,268.78830159891135,0,268.7835438073558,268.788504671247
-53,0.0049608638911990965,268.7883287554158,0,268.7835438073558,268.788504671247
-54,0.0049608638911990965,268.7895903152962,0,268.7835438073558,268.788504671247
-55,0.0049608638911990965,268.78781202721797,0,268.7835438073558,268.788504671247
-56,0.0049608638911990965,268.7890265965508,0,268.7835438073558,268.788504671247
-57,0.0049608638911990965,268.78915116608357,0,268.7835438073558,268.788504671247
-58,0.0049608638911990965,268.7890361989147,0,268.7835438073558,268.788504671247
Index: core/acquisition/RESULTS/new_brannin_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/new_brannin_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,73.12504143823946,0,0.0,0.0
-1,0.0,1.1250457704443384,0,0.0,0.0
-2,0.0,41.624296801530015,0,0.0,0.0
-3,0.0,221.62433960929104,0,0.0,0.0
-4,0.0,140.62444846592516,0,0.0,0.0
-5,0.0,271.1240423654099,0,0.0,0.0
-6,0.0,59.62435457588631,0,0.0,0.0
-7,0.0,154.12365892778405,0,0.0,0.0
-8,0.0,365.62374068102923,0,0.0,0.0
-9,0.0,167.62560319813127,0,0.0,0.0
-10,268.77083021448334,277.70829119901333,0,0.0,268.77083021448334
Index: core/acquisition/RESULTS/test_function_2_cKG-EI_n_obj_1e-06_n_c_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG-EI_n_obj_1e-06_n_c_1e-06/it_4.csv b/core/acquisition/RESULTS/test_function_2_cKG-EI_n_obj_1e-06_n_c_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG-EI_n_obj_1e-06_n_c_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.425041438239473,1,0.0,0.0,0.0
-1,0.0,0.0,10.205045770444338,0,0.0,0.0,0.0
-2,0.0,0.0,10.18429680153003,0,0.0,0.0,0.0
-3,0.0,0.0,10.484339609291052,0,0.0,0.0,0.0
-4,0.0,0.0,10.224448465925144,1,0.0,0.0,0.0
-5,0.0,0.0,10.904042365409877,0,0.0,0.0,0.0
-6,0.0,0.0,10.064354575886306,0,0.0,0.0,0.0
-7,0.0,0.0,10.583658927784079,0,0.0,0.0,0.0
-8,0.0,0.0,10.923740681029221,0,0.0,0.0,0.0
-9,0.0,0.0,10.145603198131285,0,0.0,0.0,0.0
-10,0.07662912573873015,0.10592413198537187,10.525619435535594,0,0.0,10.64238417693242,0.0
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/it_4.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,OC GP mean,sampling_decisions,recommended_val_GP,optimum
-0,0.0,0.0,0.0,0.0
-1,0.0,0.0,0.0,0.0
-2,0.0,0.0,0.0,0.0
-3,0.0,0.0,0.0,0.0
-4,0.0,0.0,0.0,0.0
-5,0.0,0.0,0.0,0.0
-6,0.0,0.0,0.0,0.0
-7,0.0,0.0,0.0,0.0
-8,0.0,0.0,0.0,0.0
-9,0.0,0.0,0.0,0.0
-10,10.641928307035908,2.0,10.641928307035908,10.748308308917792
-11,10.641928307035908,2.0,10.641928307035908,10.748308308917792
-12,10.641928307035908,0.0,10.641928307035908,10.748308308917792
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,17 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.466438239472186,1,0.0,0.0,0.0
-1,0.0,0.0,10.25077044433841,0,0.0,0.0,0.0
-2,0.0,0.0,9.481801530028914,0,0.0,0.0,0.0
-3,0.0,0.0,9.824609291052267,1,0.0,0.0,0.0
-4,0.0,0.0,9.67346592514408,1,0.0,0.0,0.0
-5,0.0,0.0,9.947365409878126,0,0.0,0.0,0.0
-6,0.0,0.0,9.419575886305257,0,0.0,0.0,0.0
-7,0.0,0.0,9.243927784077812,0,0.0,0.0,0.0
-8,0.0,0.0,9.665681029220318,0,0.0,0.0,0.0
-9,0.0,0.0,10.748198131285196,0,0.0,0.0,0.0
-10,10.225,10.244734518489997,11.523292107808489,0,0.0,10.244734518489997,10.748308308917792
-11,10.225,10.33221228963437,12.172536515249707,0,0.0,10.33221228963437,10.748308308917792
-12,10.225,10.20825520452905,8.573538915338682,1,0.0,10.20825520452905,10.748308308917792
-13,10.185797487214037,10.227281447110359,10.823466895459344,0,0.0,10.227281447110359,10.748308308917792
-14,10.225,10.224298686280846,10.640853789927679,1,0.0,10.224298686280846,10.748308308917792
-15,10.225,10.222889480530311,10.127852813309289,1,0.0,10.222889480530311,10.748308308917792
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/it_4.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,17 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.425041438239473,1,0.0,0.0,0.0
-1,0.0,0.0,10.205045770444338,0,0.0,0.0,0.0
-2,0.0,0.0,10.18429680153003,0,0.0,0.0,0.0
-3,0.0,0.0,10.484339609291052,1,0.0,0.0,0.0
-4,0.0,0.0,10.224448465925144,0,0.0,0.0,0.0
-5,0.0,0.0,10.904042365409877,0,0.0,0.0,0.0
-6,0.0,0.0,10.064354575886306,0,0.0,0.0,0.0
-7,0.0,0.0,10.583658927784079,0,0.0,0.0,0.0
-8,0.0,0.0,10.923740681029221,0,0.0,0.0,0.0
-9,0.0,0.0,10.145603198131285,0,0.0,0.0,0.0
-10,0.0,10.545454338806836,10.52641733206351,1,0.0,10.545454338806836,10.748308308917792
-11,10.527208295423955,10.582763000268962,11.249479990104577,0,0.0,10.582763000268962,10.748308308917792
-12,10.527208295423955,10.569367379883381,10.525028116331162,0,0.0,10.569367379883381,10.748308308917792
-13,10.527208295423955,10.549871293543811,11.210728961708508,0,0.0,10.549871293543811,10.748308308917792
-14,10.524713635142003,10.458536153545042,11.249513043495766,0,0.0,10.458536153545042,10.748308308917792
-15,10.527208295423955,10.596176635541765,11.096115393631619,0,0.0,10.596176635541765,10.748308308917792
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/it_4.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.425041438239473,1,0.0,0.0,0.0
-1,0.0,0.0,10.205045770444338,0,0.0,0.0,0.0
-2,0.0,0.0,10.18429680153003,0,0.0,0.0,0.0
-3,0.0,0.0,10.484339609291052,1,0.0,0.0,0.0
-4,0.0,0.0,10.224448465925144,1,0.0,0.0,0.0
-5,0.0,0.0,10.904042365409877,0,0.0,0.0,0.0
-6,0.0,0.0,10.064354575886306,0,0.0,0.0,0.0
-7,0.0,0.0,10.583658927784079,0,0.0,0.0,0.0
-8,0.0,0.0,10.923740681029221,0,0.0,0.0,0.0
-9,0.0,0.0,10.145603198131285,0,0.0,0.0,0.0
-10,10.425,10.531956589061217,11.249981044856023,0,0.0,10.531956589061217,10.748308308917792
Index: core/acquisition/RESULTS/test_function_2_hybrid_KG_0.1/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_hybrid_KG_0.1/it_4.csv b/core/acquisition/RESULTS/test_function_2_hybrid_KG_0.1/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_hybrid_KG_0.1/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,28 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,2.4763959892134846,0,0.0,0.0
-1,0.0,0.9153662456677669,1,0.0,0.0
-2,0.0,3.620857119906426,1,0.0,0.0
-3,0.0,1.9780952277556778,0,0.0,0.0
-4,0.0,2.0064981031241533,0,0.0,0.0
-5,0.0,3.0585616991234756,1,0.0,0.0
-6,0.0,-0.7177841679246478,1,0.0,0.0
-7,0.0,1.208674323007677,0,0.0,0.0
-8,0.0,0.17249411819288923,1,0.0,0.0
-9,0.0,2.1040761315822745,1,0.0,0.0
-10,0.24585095213269703,3.8126053282021077,0,3.392352683591745,3.638203635724442
-11,0.21868063517311143,3.16513011266784,1,3.4195230005513304,3.638203635724442
-12,0.25211470276683556,2.6099553843290946,1,3.3860889329576063,3.638203635724442
-13,0.23545009855293975,3.4694660860690263,1,3.402753537171502,3.638203635724442
-14,0.22019428361961246,2.7065504439568757,1,3.4180093521048294,3.638203635724442
-15,0.218768180217781,2.578392427551176,1,3.419435455506661,3.638203635724442
-16,0.2035103121763404,2.9792589916167054,0,3.4346933235481014,3.638203635724442
-17,0.20555451558732107,2.215138766598462,1,3.4326491201371208,3.638203635724442
-18,0.18787119144102515,3.8243819962694188,1,3.4503324442834167,3.638203635724442
-19,0.07287724230452852,3.302950674904791,1,3.5653263934199133,3.638203635724442
-20,0.07419439543358397,3.2992309128188126,1,3.564009240290858,3.638203635724442
-21,0.19126930028569156,3.289110205679832,1,3.4469343354387503,3.638203635724442
-22,0.19230641874092225,3.4969469074779087,1,3.4458972169835196,3.638203635724442
-23,0.19380885004450965,3.4574037050018087,1,3.444394785679932,3.638203635724442
-24,0.07385321065813022,3.2427636353053244,1,3.5643504250663116,3.638203635724442
-25,0.19350092254235918,3.515729713908746,1,3.4447027131820827,3.638203635724442
-26,0.19290558348364062,3.215409386490806,1,3.445298052240801,3.638203635724442
Index: core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_4.csv b/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,24 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,2.7737430011256428,0,0.0,0.0
-1,0.0,1.739684851028479,1,0.0,0.0
-2,0.0,4.176769717741294,1,0.0,0.0
-3,0.0,1.0760292172317967,0,0.0,0.0
-4,0.0,0.6381165625650875,0,0.0,0.0
-5,0.0,1.8068493546944275,1,0.0,0.0
-6,0.0,-1.0676506361479978,1,0.0,0.0
-7,0.0,1.6993913826658102,0,0.0,0.0
-8,0.0,-0.21975517670974942,1,0.0,0.0
-9,0.0,1.7492482876095912,1,0.0,0.0
-10,1.21485016689157,-2.803341869875804,0,2.4233534688328717,3.638203635724442
-11,0.3327727244020293,2.606800329572249,1,3.3054309113224125,3.638203635724442
-12,0.30634830270758373,2.343839048703949,0,3.331855333016858,3.638203635724442
-13,0.32594190701120596,2.32729321533054,1,3.312261728713236,3.638203635724442
-14,0.3272631798834351,3.1351018654172425,0,3.3109404558410067,3.638203635724442
-15,0.27233613815575186,3.7261907029705696,1,3.36586749756869,3.638203635724442
-16,0.3174561468362658,2.451986439419664,1,3.320747488888176,3.638203635724442
-17,0.29560560355919074,2.760747962885484,1,3.342598032165251,3.638203635724442
-18,0.29231096873887097,4.567901348068234,0,3.345892666985571,3.638203635724442
-19,0.24030421469705532,1.1255526950585213,1,3.3978994210273865,3.638203635724442
-20,0.199227325386091,2.3739617466376393,1,3.438976310338351,3.638203635724442
-21,0.18857807084787304,0.010011333637799158,1,3.449625564876569,3.638203635724442
-22,0.18270983439631472,3.3639016422325687,1,3.455493801328127,3.638203635724442
Index: core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.425041438239473,1,0.0,0.0,0.0
-1,0.0,0.0,10.205045770444338,0,0.0,0.0,0.0
-2,0.0,0.0,10.18429680153003,0,0.0,0.0,0.0
-3,0.0,0.0,10.484339609291052,0,0.0,0.0,0.0
-4,0.0,0.0,10.224448465925144,1,0.0,0.0,0.0
-5,0.0,0.0,10.904042365409877,0,0.0,0.0,0.0
-6,0.0,0.0,10.064354575886306,0,0.0,0.0,0.0
-7,0.0,0.0,10.583658927784079,0,0.0,0.0,0.0
-8,0.0,0.0,10.923740681029221,0,0.0,0.0,0.0
-9,0.0,0.0,10.145603198131285,0,0.0,0.0,0.0
-10,0.0759014290693365,0.10453241556604453,10.810278287926206,0,10.672406879848456,10.643775893351748,10.748308308917792
Index: core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/it_4.csv b/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.466438239472186,1,0.0,0.0,0.0
-1,0.0,0.0,10.25077044433841,0,0.0,0.0,0.0
-2,0.0,0.0,9.481801530028914,0,0.0,0.0,0.0
-3,0.0,0.0,9.824609291052267,1,0.0,0.0,0.0
-4,0.0,0.0,9.67346592514408,1,0.0,0.0,0.0
-5,0.0,0.0,9.947365409878126,0,0.0,0.0,0.0
-6,0.0,0.0,9.419575886305257,0,0.0,0.0,0.0
-7,0.0,0.0,9.243927784077812,0,0.0,0.0,0.0
-8,0.0,0.0,9.665681029220318,0,0.0,0.0,0.0
-9,0.0,0.0,10.748198131285196,0,0.0,0.0,0.0
-10,10.225,10.244734518489997,11.165764711604263,1,0.0,10.244734518489997,10.748308308917792
Index: core/acquisition/RESULTS/test_mistery_hybrid_KG_1e-06/it_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_mistery_hybrid_KG_1e-06/it_4.csv b/core/acquisition/RESULTS/test_mistery_hybrid_KG_1e-06/it_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_mistery_hybrid_KG_1e-06/it_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-16.214896615412734,0,0.0,0.0
-1,0.0,-33.94425373983955,0,0.0,0.0
-2,0.0,-19.099305341431087,0,0.0,0.0
-3,0.0,-9.089615719742406,1,0.0,0.0
-4,0.0,-3.979562790606903,1,0.0,0.0
-5,0.0,-3.071133042825684,0,0.0,0.0
-6,0.0,-17.34370641371069,1,0.0,0.0
-7,0.0,-6.4192301292445215,0,0.0,0.0
-8,0.0,-8.525283439364093,1,0.0,0.0
-9,0.0,-23.384689435189724,1,0.0,0.0
-10,1.17427432886634,-12.270890771128014,1,-0.0,1.17427432886634
Index: core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_12.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_12.csv b/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_12.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_12.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,7.80409205447461,0,0.0,0.0
-1,0.0,11.398168663897932,0,0.0,0.0
-2,0.0,11.884489073873477,0,0.0,0.0
-3,0.0,10.491065282783708,0,0.0,0.0
-4,0.0,10.941173763027564,0,0.0,0.0
-5,0.0,11.047091880827331,0,0.0,0.0
-6,0.0,11.399956376214192,1,0.0,0.0
-7,0.0,9.599174805130193,0,0.0,0.0
-8,0.0,10.357602279824533,0,0.0,0.0
-9,0.0,11.199149947214115,0,0.0,0.0
-10,0.10175151744786781,11.251319319343194,0,10.646556074198015,10.748307591645883
-11,0.1047784988622329,10.686668412969249,0,10.643529798473798,10.748308297336031
Index: core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_12.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_12.csv b/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_12.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_12.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,10.062739092054475,0,0.0,0.0
-1,0.0,10.0863131686639,0,0.0,0.0
-2,0.0,10.586299489073875,0,0.0,0.0
-3,0.0,10.005486065282785,0,0.0,0.0
-4,0.0,11.104836173763028,0,0.0,0.0
-5,0.0,10.745302091880827,0,0.0,0.0
-6,0.0,10.326074956376214,1,0.0,0.0
-7,0.0,10.48411417480513,0,0.0,0.0
-8,0.0,10.245112602279823,0,0.0,0.0
-9,0.0,10.505694149947216,0,0.0,0.0
-10,0.03917089699577048,10.500292805783166,1,10.709136694650113,10.748307591645883
-11,0.16024890041948225,10.865751114435966,0,10.588059408883835,10.748308309303317
-12,0.12824518765432025,11.04873715791324,0,10.620063121648997,10.748308309303317
Index: core/acquisition/RESULTS/test_function_2_hybrid_KG_current_step1e-06/it_12.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_hybrid_KG_current_step1e-06/it_12.csv b/core/acquisition/RESULTS/test_function_2_hybrid_KG_current_step1e-06/it_12.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_hybrid_KG_current_step1e-06/it_12.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,10.062739092054475,0,0.0,0.0
-1,0.0,10.0863131686639,0,0.0,0.0
-2,0.0,10.586299489073875,0,0.0,0.0
-3,0.0,10.005486065282785,0,0.0,0.0
-4,0.0,11.104836173763028,0,0.0,0.0
-5,0.0,10.745302091880827,0,0.0,0.0
-6,0.0,10.326074956376214,1,0.0,0.0
-7,0.0,10.48411417480513,0,0.0,0.0
-8,0.0,10.245112602279823,0,0.0,0.0
-9,0.0,10.505694149947216,0,0.0,0.0
-10,0.09289365267753702,11.01428961046164,0,10.655413938968346,10.748307591645883
-11,0.0031153166293460544,10.76555040853664,0,10.745192886668697,10.748308203298043
-12,0.017917207194617646,10.72188433838623,1,10.730391100252396,10.748308307447013
Index: core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_1e-06/it_12.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_1e-06/it_12.csv b/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_1e-06/it_12.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_1e-06/it_12.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,34 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,10.062739092054475,0,0.0,0.0
-1,0.0,10.0863131686639,0,0.0,0.0
-2,0.0,10.586299489073875,0,0.0,0.0
-3,0.0,10.005486065282785,0,0.0,0.0
-4,0.0,11.104836173763028,0,0.0,0.0
-5,0.0,10.745302091880827,0,0.0,0.0
-6,0.0,10.326074956376214,1,0.0,0.0
-7,0.0,10.48411417480513,0,0.0,0.0
-8,0.0,10.245112602279823,0,0.0,0.0
-9,0.0,10.505694149947216,0,0.0,0.0
-10,0.42330828114489627,10.737158071092884,0,10.325,10.748308281144896
-11,0.4233082958145271,10.745069124589747,1,10.325,10.748308295814526
-12,0.0033781247852235907,10.471731062142519,1,10.74493018114842,10.748308305933644
-13,0.0033781247852235907,10.748141297377572,1,10.74493018114842,10.748308305933644
-14,0.0007604279193333952,10.66103282564783,1,10.747547878014311,10.748308305933644
-15,0.0007604279193333952,10.749636278568241,0,10.747547878014311,10.748308305933644
-16,0.0007604279193333952,10.688579456757852,1,10.747547878014311,10.748308305933644
-17,0.0007604279193333952,10.749577524320559,1,10.747547878014311,10.748308305933644
-18,0.00044222583657393955,10.727493558887693,1,10.74786608009707,10.748308305933644
-19,0.00044222583657393955,10.747830487347962,1,10.74786608009707,10.748308305933644
-20,0.00038283312897924304,10.64608120950607,1,10.747925475639187,10.748308308768166
-21,0.00038283312897924304,10.671047849679999,1,10.747925475639187,10.748308308768166
-22,0.00038283312897924304,10.708923487363734,1,10.747925475639187,10.748308308768166
-23,0.00038283312897924304,10.694810614751786,1,10.747925475639187,10.748308308768166
-24,0.00038283312897924304,10.718466655580857,1,10.747925475639187,10.748308308768166
-25,0.00038283312897924304,10.513284172960514,1,10.747925475639187,10.748308308768166
-26,0.00038283312897924304,10.685423789085132,1,10.747925475639187,10.748308308768166
-27,0.00038283312897924304,10.690021126562245,1,10.747925475639187,10.748308308768166
-28,0.00038283312897924304,10.725673348158153,1,10.747925475639187,10.748308308768166
-29,0.00038283312897924304,10.69587410508061,1,10.747925475639187,10.748308308768166
-30,0.00038283312897924304,10.713227152349527,1,10.747925475639187,10.748308308768166
-31,0.00038283312897924304,10.698228193965855,1,10.747925475639187,10.748308308768166
-32,0.00038283312897924304,10.748263225639068,1,10.747925475639187,10.748308308768166
Index: core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_12.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_12.csv b/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_12.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_12.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,7.80409205447461,0,0.0,0.0,0.0
-1,0.0,0.0,11.398168663897932,0,0.0,0.0,0.0
-2,0.0,0.0,11.884489073873477,0,0.0,0.0,0.0
-3,0.0,0.0,10.491065282783708,0,0.0,0.0,0.0
-4,0.0,0.0,10.941173763027564,0,0.0,0.0,0.0
-5,0.0,0.0,11.047091880827331,0,0.0,0.0,0.0
-6,0.0,0.0,11.399956376214192,1,0.0,0.0,0.0
-7,0.0,0.0,9.599174805130193,0,0.0,0.0,0.0
-8,0.0,0.0,10.357602279824533,0,0.0,0.0,0.0
-9,0.0,0.0,11.199149947214115,0,0.0,0.0,0.0
-10,0.4233082957055405,0.3361388329256112,8.847126035938476,0,0.0,10.412168758720272,0.0
-11,0.4233082992797108,0.30460910514206674,11.512310808064823,0,0.0,10.443699190563473,0.0
-12,0.4233082992797108,0.2986540903512971,11.001005611890042,1,0.0,10.449654208928413,0.0
Index: core/acquisition/RESULTS/new_brannin_TS_1e-06/it_15.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_TS_1e-06/it_15.csv b/core/acquisition/RESULTS/new_brannin_TS_1e-06/it_15.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_TS_1e-06/it_15.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,17 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,68.62608115424332,0,0.0,0.0
-1,0.0,176.62326699575237,0,0.0,0.0
-2,0.0,73.12529809683868,0,0.0,0.0
-3,0.0,95.62526794211207,0,0.0,0.0
-4,0.0,271.126205308072,0,0.0,0.0
-5,0.0,176.62532757269722,1,0.0,0.0
-6,0.0,208.123926287514,0,0.0,0.0
-7,0.0,122.62620213947189,0,0.0,0.0
-8,0.0,131.62622622482652,0,0.0,0.0
-9,0.0,172.12586315856606,1,0.0,0.0
-10,92.16348554128058,240.78357185454496,0,176.625,268.7884855412806
-11,92.16348554128058,284.3892413571848,0,176.625,268.7884855412806
-12,92.16350467124698,235.33719887707088,0,176.625,268.788504671247
-13,92.16350467124698,225.15452172238037,0,176.625,268.788504671247
-14,92.16350467124698,202.02803933260995,0,176.625,268.788504671247
-15,92.16350467124698,240.28098475053935,1,176.625,268.788504671247
Index: core/acquisition/RESULTS/new_brannin_TS_n_obj_1.0_n_c_0.010000000000000002/it_15.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1.0_n_c_0.010000000000000002/it_15.csv b/core/acquisition/RESULTS/new_brannin_TS_n_obj_1.0_n_c_0.010000000000000002/it_15.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1.0_n_c_0.010000000000000002/it_15.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,69.70615424332301,0,0.0,0.0,0.0
-1,0.0,0.0,174.89199575237288,0,0.0,0.0,0.0
-2,0.0,0.0,73.42309683869317,0,0.0,0.0,0.0
-3,0.0,0.0,95.8929421120693,0,0.0,0.0,0.0
-4,0.0,0.0,272.3303080719985,0,0.0,0.0,0.0
-5,0.0,0.0,176.95257269721947,1,0.0,0.0,0.0
-6,0.0,0.0,207.05128751399673,0,0.0,0.0,0.0
-7,0.0,0.0,123.82713947190649,0,0.0,0.0,0.0
-8,0.0,0.0,132.8512248265217,0,0.0,0.0,0.0
-9,0.0,0.0,172.98815856606967,1,0.0,0.0,0.0
-10,92.16348554128058,268.7884855412806,303.50343016253004,0,0.0,0.0,0.0
Index: core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/it_15.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/it_15.csv b/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/it_15.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/it_15.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,17 +0,0 @@
-,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,69.70615424332301,115.32326186858333,0,0.0,0.0,0.0
-1,0.0,0.0,174.89199575237288,16.229947503598996,0,0.0,0.0,0.0
-2,0.0,0.0,73.42309683869317,54.66255747711995,0,0.0,0.0,0.0
-3,0.0,0.0,95.8929421120693,3.935369193500692,0,0.0,0.0,0.0
-4,0.0,0.0,272.3303080719985,69.68951431427156,0,0.0,0.0,0.0
-5,0.0,0.0,176.95257269721947,-3.0395515069309162,1,0.0,0.0,0.0
-6,0.0,0.0,207.05128751399673,5.315408192195015,0,0.0,0.0,0.0
-7,0.0,0.0,123.82713947190649,30.80433621196685,0,0.0,0.0,0.0
-8,0.0,0.0,132.8512248265217,28.59710150702156,0,0.0,0.0,0.0
-9,0.0,0.0,172.98815856606967,-0.5577328356074427,1,0.0,0.0,0.0
-10,176.625,0.0,296.51098902886554,80.62497607350413,0,0.0,0.0,0.0
-11,176.625,200.9585688215704,226.43011574935932,18.705119612192384,0,0.0,200.9585688215704,0.0
-12,176.625,184.62401704528165,239.8797328930632,9.233141613962033,0,0.0,184.62401704528165,0.0
-13,176.625,182.54426263264705,242.94583994492595,-1.067316221723784,1,0.0,182.54426263264705,0.0
-14,243.57389062500005,238.1551800114827,269.51397851312163,0.6470217587836957,0,0.0,238.1551800114827,0.0
-15,243.57389062500005,240.52469355804726,262.737348762882,-0.13023420807267744,1,0.0,240.52469355804726,0.0
Index: core/acquisition/RESULTS/new_brannin_TS_n_obj_1e-06_n_c_1e-06/it_15.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1e-06_n_c_1e-06/it_15.csv b/core/acquisition/RESULTS/new_brannin_TS_n_obj_1e-06_n_c_1e-06/it_15.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1e-06_n_c_1e-06/it_15.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,68.62608115424332,0,0.0,0.0,0.0
-1,0.0,0.0,176.62326699575237,0,0.0,0.0,0.0
-2,0.0,0.0,73.12529809683868,0,0.0,0.0,0.0
-3,0.0,0.0,95.62526794211207,0,0.0,0.0,0.0
-4,0.0,0.0,271.126205308072,0,0.0,0.0,0.0
-5,0.0,0.0,176.62532757269722,1,0.0,0.0,0.0
-6,0.0,0.0,208.123926287514,0,0.0,0.0,0.0
-7,0.0,0.0,122.62620213947189,0,0.0,0.0,0.0
-8,0.0,0.0,131.62622622482652,0,0.0,0.0,0.0
-9,0.0,0.0,172.12586315856606,1,0.0,0.0,0.0
-10,92.16348554128058,268.7884855412806,281.37243949283294,0,0.0,0.0,0.0
Index: core/acquisition/RESULTS/branin_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv b/core/acquisition/RESULTS/branin_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,16 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,208.12466667551772,0,0.0,0.0,0.0
-1,0.0,0.0,190.12385919844962,0,0.0,0.0,0.0
-2,0.0,0.0,68.62518600019307,0,0.0,0.0,0.0
-3,0.0,0.0,5.626383835601723,0,0.0,0.0,0.0
-4,0.0,0.0,28.124435295668146,0,0.0,0.0,0.0
-5,0.0,0.0,95.62643021652684,0,0.0,0.0,0.0
-6,0.0,0.0,73.12543183951783,0,0.0,0.0,0.0
-7,0.0,0.0,329.6253734513176,0,0.0,0.0,0.0
-8,0.0,0.0,329.62736003641385,0,0.0,0.0,0.0
-9,0.0,0.0,167.62547940186192,0,0.0,0.0,0.0
-10,268.7623487196945,268.7230754636884,174.3871379973409,0,0.0,0.0,0.0
-11,268.7813604527244,268.7813604527244,250.98688497919434,0,0.0,0.0,0.0
-12,268.78831358889704,268.78831358889704,267.0932891204237,0,0.0,0.0,0.0
-13,268.78831358889704,268.78831358889704,189.3150574190819,0,0.0,0.0,0.0
-14,268.78850195445773,268.78850195445773,266.7629368319333,0,0.0,0.0,0.0
Index: core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_21.csv b/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,4 +0,0 @@
-,OC GP mean,OC GP sampled
-0,247.49845750656013,247.43589426504965
-1,241.77228906654975,247.43589426504965
-2,267.1841653651777,266.6988137115063
Index: core/acquisition/RESULTS/mistery_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv b/core/acquisition/RESULTS/mistery_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,17 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-5.778928686120471,0,0.0,0.0,0.0
-1,0.0,0.0,-7.220653310733324,0,0.0,0.0,0.0
-2,0.0,0.0,-24.570491032157587,0,0.0,0.0,0.0
-3,0.0,0.0,-34.39530294965611,1,0.0,0.0,0.0
-4,0.0,0.0,-14.034542215970463,0,0.0,0.0,0.0
-5,0.0,0.0,-1.4565328114161697,1,0.0,0.0,0.0
-6,0.0,0.0,-8.188122494777724,0,0.0,0.0,0.0
-7,0.0,0.0,-3.8906173928378043,0,0.0,0.0,0.0
-8,0.0,0.0,-9.091168524790644,1,0.0,0.0,0.0
-9,0.0,0.0,-23.384813231459077,1,0.0,0.0,0.0
-10,1.1742743288663409,28.51346202941311,-27.210761188945447,1,0.0,-27.339187715313063,0.0
-11,1.1742743288663409,15.863454426647667,-14.16221276860347,1,0.0,-14.689180097781326,0.0
-12,1.1742743288663462,1.1742743288663462,-17.779883825015673,0,0.0,-0.0,0.0
-13,1.1742743288663462,1.1742743288663462,-15.840238145951561,1,0.0,-0.0,0.0
-14,1.1742743288663462,1.1742743288663462,-10.998223647639733,0,0.0,-0.0,0.0
-15,1.1742743288663462,1.1742743288663462,0.3164471821929902,1,0.0,-0.0,0.0
Index: core/acquisition/RESULTS/mistery_TS_1e-06/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_1e-06/it_21.csv b/core/acquisition/RESULTS/mistery_TS_1e-06/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_TS_1e-06/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,15 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,-5.778928686120471,0,0.0,0.0
-1,0.0,-7.220653310733324,0,0.0,0.0
-2,0.0,-24.570491032157587,0,0.0,0.0
-3,0.0,-34.39530294965611,1,0.0,0.0
-4,0.0,-14.034542215970463,0,0.0,0.0
-5,0.0,-1.4565328114161697,1,0.0,0.0
-6,0.0,-8.188122494777724,0,0.0,0.0
-7,0.0,-3.8906173928378043,0,0.0,0.0
-8,0.0,-9.091168524790644,1,0.0,0.0
-9,0.0,-23.384813231459077,1,0.0,0.0
-10,1.1742737056380514,0.8602415116666865,0,-0.0,1.1742737056380514
-11,1.1742737056380514,-26.208428501574204,1,0.0,1.1742737056380514
-12,1.1742743288663435,-0.8308593780580422,1,0.0,1.1742743288663435
-13,1.1742743288663435,-0.876617520256375,1,0.0,1.1742743288663435
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.1/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.1/it_21.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.1/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.1/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,37 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-6.1119198439101465,0,0.0,0.0,0.0
-1,0.0,0.0,-8.36031405955168,0,0.0,0.0,0.0
-2,0.0,0.0,-24.38467683928273,0,0.0,0.0,0.0
-3,0.0,0.0,-33.01285118352764,1,0.0,0.0,0.0
-4,0.0,0.0,-14.598681843492841,0,0.0,0.0,0.0
-5,0.0,0.0,-0.02774650108143173,1,0.0,0.0,0.0
-6,0.0,0.0,-7.756714816446542,0,0.0,0.0,0.0
-7,0.0,0.0,-3.5175395265374294,0,0.0,0.0,0.0
-8,0.0,0.0,-6.733492147351036,1,0.0,0.0,0.0
-9,0.0,0.0,-22.905890771388993,0,0.0,0.0,0.0
-10,1.1742737056380514,1.1742737056380514,-2.673752179603137,1,-0.0,-0.0,1.1742737056380514
-11,1.1742743288662565,1.1742743288662565,-0.5107269609062625,1,-0.0,-0.0,1.1742743288662565
-12,1.174274328866332,1.174274328866332,1.6285029157050175,0,-0.0,-0.0,1.174274328866332
-13,1.1742743288663409,1.1742743288663409,-3.570848802404282,0,0.0,0.0,1.1742743288663409
-14,1.1742743288663409,1.1742743288663409,1.2047319700883088,0,0.0,0.0,1.1742743288663409
-15,1.1742743288663409,1.1742743288663409,-6.892702948422835,0,0.0,0.0,1.1742743288663409
-16,1.1742743288663462,1.1742743288663462,2.744327739697586,0,0.0,0.0,1.1742743288663462
-17,1.1742743288663462,1.1742743288663462,1.592382423998727,1,0.0,0.0,1.1742743288663462
-18,0.9995699083154639,0.9995699083154639,-6.14472678962429,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-19,0.9995699083154639,0.9995699083154639,-11.294891996333858,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-20,0.9995699083154639,0.9995699083154639,-7.5876954290962715,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-21,0.9995699083154639,0.9995699083154639,0.1773410169947074,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-22,0.9995699083154639,0.9995699083154639,-5.026288246092829,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-23,0.9995699083154639,0.9995699083154639,-6.244717125698224,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-24,0.9995699083154639,0.9995699083154639,-19.65775894002273,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-25,0.9995699083154639,0.9995699083154639,-5.413483418542945,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-26,0.9995699083154639,0.9995699083154639,-6.374748831969115,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-27,0.9995699083154639,0.9995699083154639,2.592479916883242,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-28,0.9995699083154639,0.9995699083154639,-10.306696820821468,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-29,0.9995699083154639,0.9995699083154639,-2.7342403486953977,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-30,0.9995699083154639,0.9995699083154639,-5.377061656197677,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-31,0.9995699083154639,0.9995699083154639,-22.5570225815345,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
-32,0.9995699083154639,0.9995699083154639,0.3729699539974052,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-33,0.9995699083154639,0.9995699083154639,-33.20417315136491,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-34,0.9995699083154639,0.9995699083154639,-16.452483677210147,0,0.1747044205508823,0.1747044205508823,1.1742743288663462
-35,0.9995699083154639,0.9995699083154639,-13.51595484488675,1,0.1747044205508823,0.1747044205508823,1.1742743288663462
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.01/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.01/it_21.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.01/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.01/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,69 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-6.1119198439101465,0,0.0,0.0,0.0
-1,0.0,0.0,-8.36031405955168,0,0.0,0.0,0.0
-2,0.0,0.0,-24.38467683928273,0,0.0,0.0,0.0
-3,0.0,0.0,-33.01285118352764,1,0.0,0.0,0.0
-4,0.0,0.0,-14.598681843492841,0,0.0,0.0,0.0
-5,0.0,0.0,-0.02774650108143173,1,0.0,0.0,0.0
-6,0.0,0.0,-7.756714816446542,0,0.0,0.0,0.0
-7,0.0,0.0,-3.5175395265374294,0,0.0,0.0,0.0
-8,0.0,0.0,-6.733492147351036,1,0.0,0.0,0.0
-9,0.0,0.0,-22.905890771388993,0,0.0,0.0,0.0
-10,1.1742743288663409,1.174274314100047,0.11095501350451498,1,0.0,-0.0,0.0
-11,1.174274328866347,2.232222857289754,-0.8500253289268058,1,0.0,-1.0579485284234131,0.0
-12,2.6322373568093784,2.5852381292296913,-6.579148536638815,1,0.0,-1.4109638003633442,0.0
-13,2.6322373568093784,2.5420601772630436,0.09105904131333831,1,0.0,-1.3677858483966965,0.0
-14,1.9048950060262388,2.923412346721265,-1.5725587614776049,1,0.0,-1.7491380178549178,0.0
-15,1.9048950060262388,3.4059016422778896,-0.017808871312966712,1,0.0,-2.2316273134115425,0.0
-16,2.7388278975275506,3.233849288492366,-3.569533379774173,1,0.0,-2.059574959626019,0.0
-17,1.9048950060262388,1.1525179095109248,-0.3996229041969578,1,0.0,0.021756419355422274,0.0
-18,1.9048950060262388,0.626314742648824,-0.012101148424001729,1,0.0,0.547959586217523,0.0
-19,0.751636453953072,0.798301392230421,-1.4570277846464401,1,0.0,0.3759729366359261,0.0
-20,0.751636453953072,0.6171714353770072,-0.5121835904279857,0,0.0,0.5571028934893398,0.0
-21,0.751636453953072,0.3990322509495492,1.046955013498108,1,0.0,0.7752420779167979,0.0
-22,0.751636453953072,0.41305032171856126,-8.43759698130261,1,0.0,0.7612240071477858,0.0
-23,0.751636453953072,0.41235439022315745,1.3742228002932309,1,0.0,0.7619199386431896,0.0
-24,0.48277589784442476,0.45307829808024724,-22.18985394211143,0,0.0,0.7211960307860998,0.0
-25,0.48277589784442476,0.4456036437773525,-1.1362432686893464,1,0.0,0.7286706850889946,0.0
-26,0.48277589784442476,0.45819664778135927,1.8934106296269229,1,0.0,0.7160776810849878,0.0
-27,0.48277589784442476,0.3851489139531923,-0.06873763849237913,1,0.0,0.7891254149131548,0.0
-28,0.48277589784442476,0.42224617217796734,1.3048854243851788,1,0.0,0.7520281566883797,0.0
-29,0.48277589784442476,0.3286135643549688,-3.6269450526829408,1,0.0,0.8456607645113783,0.0
-30,0.48277589784442476,0.35760658665717404,0.9050544912235005,1,0.0,0.816667742209173,0.0
-31,0.48277589784442476,0.33937678851920783,-1.5462759899729097,1,0.0,0.8348975403471393,0.0
-32,0.48277589784442476,0.33273739905228883,0.3451173278946538,1,0.0,0.8415369298140583,0.0
-33,0.48277589784442476,0.29243324228417045,2.211390492611624,1,0.0,0.8818410865821766,0.0
-34,0.44208222525701313,0.3124411059613923,0.7734013728686752,1,0.0,0.8618332229049548,0.0
-35,0.44208222525701313,0.32115294621857693,-0.19341513145019462,1,0.0,0.8531213826477702,0.0
-36,0.44208222525701313,0.36388916790072745,1.4970309560998893,0,0.0,0.8103851609656196,0.0
-37,0.44208222525701313,0.36387054869979174,-0.39421196936285674,0,0.0,0.8104037801665553,0.0
-38,0.44208222525701313,0.3567716907162124,-2.729753028805706,0,0.0,0.8175026381501347,0.0
-39,0.44208222525701313,0.3570378625890669,-3.3182297921040864,1,0.0,0.8172364662772802,0.0
-40,0.44208222525701313,0.34419751245463637,-1.0529049557266148,1,0.0,0.8300768164117107,0.0
-41,0.44208222525701313,0.27033891595593573,0.20997485093156854,0,0.0,0.9039354129104114,0.0
-42,0.4062753665263843,0.25605043094333535,-14.681706179430229,1,0.0,0.9182238979230117,0.0
-43,0.4062753665263843,0.2568579848325019,0.2572909969373887,1,0.0,0.9174163440338452,0.0
-44,0.4062753665263843,0.24106898286045197,1.5693522758886638,1,0.0,0.9332053460058951,0.0
-45,0.18686571597638668,0.21444641874100956,-2.56212580001593,1,0.0,0.9598279101253375,0.0
-46,0.18686571597638668,0.2143140132660939,-24.89138424418218,1,0.0,0.9599603156002532,0.0
-47,0.18686571597638668,0.21480103607822976,-0.5618548170379383,1,0.0,0.9594732927881173,0.0
-48,0.18686571597638668,0.20288915294271703,-3.077908979580166,0,0.0,0.97138517592363,0.0
-49,0.18686571597638668,0.20279243740992126,-2.016306842685093,1,0.0,0.9714818914564258,0.0
-50,0.18686571597638668,0.18952212516879285,-11.330941296770224,1,0.0,0.9847522036975542,0.0
-51,0.18686571597638668,0.18940991751639746,-11.040794031450133,1,0.0,0.9848644113499496,0.0
-52,0.18686571597638668,0.18953012205927688,0.09368652018066065,1,0.0,0.9847442068070702,0.0
-53,0.18686571597638668,0.18876109215678838,-18.831389933216126,1,0.0,0.9855132367095587,0.0
-54,0.18686571597638668,0.1886529594436901,0.8092782251028277,1,0.0,0.985621369422657,0.0
-55,0.1768934017777628,0.15155374551066458,-9.348420315117236,1,0.0,1.0227205833556825,0.0
-56,0.1768934017777628,0.15148627638050982,-10.412465298943449,1,0.0,1.0227880524858373,0.0
-57,0.1768934017777628,0.1514527361187099,0.3844980772595494,1,0.0,1.0228215927476372,0.0
-58,0.1768934017777628,0.14800737748597736,-21.565254911471964,1,0.0,1.0262669513803697,0.0
-59,0.1768934017777628,0.14779242315003938,-0.3218375838286781,1,0.0,1.0264819057163077,0.0
-60,0.1768934017777628,0.14792922892703508,-0.022539815085431958,1,0.0,1.026345099939312,0.0
-61,0.1768934017777628,0.14495416882579448,-2.8798210579656747,1,0.0,1.0293201600405526,0.0
-62,0.1768934017777628,0.15781212661682442,-12.819300189036301,1,0.0,1.0164622022495227,0.0
-63,0.1768934017777628,0.15777503096706536,-0.33496032171506984,1,0.0,1.0164992978992817,0.0
-64,0.1768934017777628,0.14679864153857825,-11.115815944827425,1,0.0,1.0274756873277688,0.0
-65,0.1768934017777628,0.14676716239229926,-10.58975875042662,1,0.0,1.0275071664740478,0.0
-66,0.1768934017777628,0.14674155176733983,-18.310476289017384,1,0.0,1.0275327770990073,0.0
-67,0.1768934017777628,0.14670774122057928,-6.23520273086756,0,0.0,1.0275665876457678,0.0
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-6.1119198439101465,0,0.0,0.0,0.0
-1,0.0,0.0,-8.36031405955168,0,0.0,0.0,0.0
-2,0.0,0.0,-24.38467683928273,0,0.0,0.0,0.0
-3,0.0,0.0,-33.01285118352764,1,0.0,0.0,0.0
-4,0.0,0.0,-14.598681843492841,0,0.0,0.0,0.0
-5,0.0,0.0,-0.02774650108143173,1,0.0,0.0,0.0
-6,0.0,0.0,-7.756714816446542,0,0.0,0.0,0.0
-7,0.0,0.0,-3.5175395265374294,0,0.0,0.0,0.0
-8,0.0,0.0,-6.733492147351036,1,0.0,0.0,0.0
-9,0.0,0.0,-22.905890771388993,0,0.0,0.0,0.0
-10,1.1742743288663409,28.149311633787683,-23.187795925624012,1,0.0,-26.975037319687637,0.0
Index: core/acquisition/RESULTS/NN_cEI_/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_cEI_/it_21.csv b/core/acquisition/RESULTS/NN_cEI_/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_cEI_/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,11 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,0.09489999711513519,0,0.0,0.0,0.0
-1,0.0,0.0,0.09489999711513519,0,0.0,0.0,0.0
-2,0.0,0.0,0.10239999741315842,1,0.0,0.0,0.0
-3,-0.09939999878406525,-0.09939999878406525,0.10899999737739563,1,0.09939999878406525,0.09939999878406525,0.0
-4,-0.11240000277757645,-0.11240000277757645,0.11810000240802765,1,0.11240000277757645,0.11240000277757645,0.0
-5,-0.11140000075101852,-0.11140000075101852,0.09139999747276306,1,0.11140000075101852,0.11140000075101852,0.0
-6,-0.11169999837875366,-0.11169999837875366,0.1193000003695488,1,0.11169999837875366,0.11169999837875366,0.0
-7,-0.1216999962925911,-0.1216999962925911,0.09730000048875809,1,0.1216999962925911,0.1216999962925911,0.0
-8,-0.11890000104904175,-0.11890000104904175,0.09749999642372131,1,0.11890000104904175,0.11890000104904175,0.0
-9,-0.11640000343322754,-0.11640000343322754,0.1005999967455864,1,0.11640000343322754,0.11640000343322754,0.0
Index: core/acquisition/RESULTS/NN_TS_/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_TS_/it_21.csv b/core/acquisition/RESULTS/NN_TS_/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_TS_/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,6 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,0.09780000150203705,0,0.0,0.0,0.0
-1,0.0,0.0,0.09489999711513519,0,0.0,0.0,0.0
-2,0.0,0.0,0.1006999984383583,1,0.0,0.0,0.0
-3,-0.09179999679327011,-0.09179999679327011,0.11640000343322754,0,0.09179999679327011,0.09179999679327011,0.0
-4,-0.10199999809265137,-0.10199999809265137,0.0989999994635582,0,0.10199999809265137,0.10199999809265137,0.0
Index: core/acquisition/RESULTS/test_fun_n_obj_1e-06_n_c_1e-06/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_fun_n_obj_1e-06_n_c_1e-06/it_21.csv b/core/acquisition/RESULTS/test_fun_n_obj_1e-06_n_c_1e-06/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_fun_n_obj_1e-06_n_c_1e-06/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.724666675517728,0,0.0,0.0,0.0
-1,0.0,0.0,10.443859198449632,0,0.0,0.0,0.0
-2,0.0,0.0,10.505186000193069,0,0.0,0.0,0.0
-3,0.0,0.0,10.12638383560173,0,0.0,0.0,0.0
-4,0.0,0.0,10.124435295668146,0,0.0,0.0,0.0
-5,0.0,0.0,10.126430216526861,1,0.0,0.0,0.0
-6,0.0,0.0,10.22543183951785,0,0.0,0.0,0.0
-7,0.0,0.0,10.965373451317618,0,0.0,0.0,0.0
-8,0.0,0.0,10.767360036413853,0,0.0,0.0,0.0
-9,0.0,0.0,10.145479401861932,0,0.0,0.0,0.0
-10,0.6233083049982593,0.08043006850799017,10.715414118682846,0,0.0,10.66787823649027,0.0
-11,0.6233083049982593,0.017443405316781124,10.735580732573155,1,0.0,10.730864899681478,0.0
Index: core/acquisition/RESULTS/test_fun_TS_1e-06/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_fun_TS_1e-06/it_21.csv b/core/acquisition/RESULTS/test_fun_TS_1e-06/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_fun_TS_1e-06/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,14 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,10.724666675517728,0,0.0,0.0
-1,0.0,10.443859198449632,0,0.0,0.0
-2,0.0,10.505186000193069,0,0.0,0.0
-3,0.0,10.12638383560173,0,0.0,0.0
-4,0.0,10.124435295668146,0,0.0,0.0
-5,0.0,10.126430216526861,1,0.0,0.0
-6,0.0,10.22543183951785,0,0.0,0.0
-7,0.0,10.965373451317618,0,0.0,0.0
-8,0.0,10.767360036413853,0,0.0,0.0
-9,0.0,10.145479401861932,0,0.0,0.0
-10,0.6233083080328345,10.70279939572306,1,10.125,10.748308308032835
-11,0.0445451830328345,10.735940162119956,0,10.703763125,10.748308308032835
-12,0.0445451830328345,10.735153194400338,1,10.703763125,10.748308308032835
Index: core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv b/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,10.391675517728052,0,0.0,0.0,0.0
-1,0.0,0.0,9.304198449631276,0,0.0,0.0,0.0
-2,0.0,0.0,10.691000193067925,1,0.0,0.0,0.0
-3,0.0,0.0,11.508835601730203,0,0.0,0.0,0.0
-4,0.0,0.0,9.560295668145768,0,0.0,0.0,0.0
-5,0.0,0.0,11.5552165268616,0,0.0,0.0,0.0
-6,0.0,0.0,10.656839517849033,0,0.0,0.0,0.0
-7,0.0,0.0,11.338451317617993,0,0.0,0.0,0.0
-8,0.0,0.0,13.125036413853461,1,0.0,0.0,0.0
-9,0.0,0.0,10.624401861932013,0,0.0,0.0,0.0
-10,0.0,10.427408366675248,8.63020065116221,1,0.0,10.427408366675248,0.0
-11,10.216441125,10.327586164702415,11.959591268741082,1,0.0,10.327586164702415,0.0
Index: core/acquisition/RESULTS/NN_TS_/it_22.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_TS_/it_22.csv b/core/acquisition/RESULTS/NN_TS_/it_22.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_TS_/it_22.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,32 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,0.9362000226974487,0,0.0,0.0,0.0
-1,0.0,0.0,0.8722000122070312,0,0.0,0.0,0.0
-2,0.0,0.0,0.9696000218391418,0,0.0,0.0,0.0
-3,0.0,0.0,0.5019999742507935,1,0.0,0.0,0.0
-4,0.0,0.0,0.8944000005722046,0,0.0,0.0,0.0
-5,0.0,0.0,0.9251999855041504,0,0.0,0.0,0.0
-6,0.0,0.0,0.8148999810218811,0,0.0,0.0,0.0
-7,0.0,0.0,0.9686999917030334,0,0.0,0.0,0.0
-8,0.0,0.0,0.9783999919891357,0,0.0,0.0,0.0
-9,0.0,0.0,0.9746000170707703,0,0.0,0.0,0.0
-10,0.0,0.0,0.9606000185012817,0,0.0,0.0,0.0
-11,0.0,0.0,0.9836999773979187,0,0.0,0.0,0.0
-12,0.0,0.0,0.5705000162124634,1,0.0,0.0,0.0
-13,0.0,0.0,0.6108999848365784,1,0.0,0.0,0.0
-14,0.0,0.0,0.4034999907016754,0,0.0,0.0,0.0
-15,0.0,0.0,0.9732999801635742,0,0.0,0.0,0.0
-16,0.0,0.0,0.2718999981880188,0,0.0,0.0,0.0
-17,0.0,0.0,0.48429998755455017,0,0.0,0.0,0.0
-18,0.0,0.0,0.38339999318122864,0,0.0,0.0,0.0
-19,0.0,0.0,0.902999997138977,1,0.0,0.0,0.0
-20,-0.9071999788284302,-0.9613000154495239,0.9505000114440918,1,0.0,0.9613000154495239,0.0
-21,-0.955299973487854,-0.9635000228881836,0.9435999989509583,0,0.0,0.9635000228881836,0.0
-22,-0.9560999870300293,-0.9628999829292297,0.920799970626831,0,0.0,0.9628999829292297,0.0
-23,-0.9545000195503235,-0.9606999754905701,0.9696999788284302,0,0.0,0.9606999754905701,0.0
-24,-0.9521999955177307,-0.9610999822616577,0.9570000171661377,1,0.0,0.9610999822616577,0.0
-25,-0.9614999890327454,-0.9607999920845032,0.9527999758720398,0,0.0,0.9607999920845032,0.0
-26,-0.9649999737739563,-0.9696999788284302,0.9768000245094299,1,0.0,0.9696999788284302,0.0
-27,-0.9865999817848206,-0.9742000102996826,0.9799000024795532,0,0.0,0.9742000102996826,0.0
-28,-0.9848999977111816,-0.9772999882698059,0.9728000164031982,0,0.0,0.9772999882698059,0.0
-29,-0.9864000082015991,-0.9754999876022339,0.9598000049591064,0,0.0,0.9754999876022339,0.0
-30,-0.9848999977111816,-0.9724000096321106,0.9642999768257141,0,0.0,0.9724000096321106,0.0
Index: core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/it_23.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/it_23.csv b/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/it_23.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/it_23.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,31 +0,0 @@
-,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-30.548127653343084,-0.013771864827353153,1,0.0,0.0,0.0
-1,0.0,0.0,0.008116074203552204,-0.20200285054323056,1,0.0,0.0,0.0
-2,0.0,0.0,0.41703859912200036,0.9704635951631859,0,0.0,0.0,0.0
-3,0.0,0.0,-11.685768940818358,-1.0064612042371222,1,0.0,0.0,0.0
-4,0.0,0.0,-1.249897212953097,0.2505762665671394,0,0.0,0.0,0.0
-5,0.0,0.0,-19.378142810459995,-0.5635287904666197,1,0.0,0.0,0.0
-6,0.0,0.0,3.2504021910995484,1.117195125152385,0,0.0,0.0,0.0
-7,0.0,0.0,-7.089340710078541,0.9089333089397249,0,0.0,0.0,0.0
-8,0.0,0.0,-13.563282402149854,-0.5317862190801663,1,0.0,0.0,0.0
-9,0.0,0.0,-1.8506343031035661,-0.1214637585214488,1,0.0,0.0,0.0
-10,-1.2591321343526207,-5.445635460226756,-6.478232201647238,-0.3672996771350915,1,0.0,-5.445635460226756,6.174274328866322
-11,-1.2591321343526207,-16.901381620080553,-0.5922143260129662,0.7998812150952994,0,0.0,-16.901381620080553,6.174274328866346
-12,-1.2591321343526207,-8.063460509999887,-13.836984820158275,0.6694922007661421,0,0.0,-8.063460509999887,6.174274328866346
-13,-1.2591321343526207,0.0,-11.51436534995835,-1.3935843672183736,1,0.0,0.0,6.174274328866346
-14,-1.2591321343526207,0.34161808455941056,-0.8588207299451147,-0.40657586815883995,1,0.0,0.34161808455941056,6.174274328866346
-15,0.0,-15.502386819170564,-16.636501336386317,-1.284412253970074,1,0.0,-15.502386819170564,6.174274328866346
-16,0.0,-0.0,0.020639443437399096,-0.25516586542108666,1,0.0,-0.0,6.174274328866346
-17,-1.2591321343526207,-0.0,-1.3126750664828006,-0.37970883458455956,1,0.0,-0.0,6.174274328866346
-18,-1.2591321343526207,-0.0,6.619033902827123,0.007126106931745674,0,0.0,-0.0,6.174274328866346
-19,0.0,6.07395654228513,2.832582654709878,-0.4781823695706905,1,0.0,6.07395654228513,6.174274328866346
-20,4.65813957549754,5.898699370332612,1.4406052473255626,0.2837101546163798,0,0.0,5.898699370332612,6.174274328866346
-21,4.65813957549754,5.785234614452636,3.7532792526438694,-0.05112909830585502,1,0.0,5.785234614452636,6.174274328866346
-22,4.477415217589136,5.797267057562571,6.392624592659469,-0.15643284171833843,1,0.0,5.797267057562571,6.174274328866346
-23,4.477415217589136,5.891604291465706,-16.583352360917388,-0.3763706847121759,1,0.0,5.891604291465706,6.174274328866346
-24,4.477415217589136,5.890329798073485,6.039350279705463,-0.008987286713430603,1,0.0,5.890329798073485,6.174274328866347
-25,4.477415217589136,5.892250282493982,6.771642771019977,0.23497628311970575,0,0.0,5.892250282493982,6.174274328866347
-26,4.477415217589136,5.82610786017551,-4.268080076011351,0.9201896742582787,0,0.0,5.82610786017551,6.174274328866347
-27,4.477415217589136,5.817800767241712,-21.92124611822245,0.39865701345450966,0,0.0,5.817800767241712,6.174274328866347
-28,4.477415217589136,5.826879952485332,6.782248190980656,-0.20035918226926044,1,0.0,5.826879952485332,6.174274328866347
-29,5.60416599472302,5.849214415627373,3.8006413157134036,0.33226340309301555,0,0.0,5.849214415627373,6.174274328866347
Index: core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/it_24.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/it_24.csv b/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/it_24.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/it_24.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,14.012828497084294,1.1172934457813644,0,0.0,0.0,0.0
-1,0.0,0.0,-1.7336281382531031,-0.16688132951927165,1,0.0,0.0,0.0
-2,0.0,0.0,19.44080298146738,0.5255818023861861,0,0.0,0.0,0.0
-3,0.0,0.0,14.948470403846482,-0.4574112672873414,1,0.0,0.0,0.0
-4,0.0,0.0,10.909004456056264,-0.12007712925489629,1,0.0,0.0,0.0
-5,0.0,0.0,11.60285270113981,-0.1853235446039706,1,0.0,0.0,0.0
-6,0.0,0.0,2.790941187731655,-1.05798758781666,1,0.0,0.0,0.0
-7,0.0,0.0,2.6934241326709687,-0.4801596055913139,1,0.0,0.0,0.0
-8,0.0,0.0,0.7042297725411835,-0.8229225833869026,1,0.0,0.0,0.0
-9,0.0,0.0,2.4437717012918627,-0.830497075142931,1,0.0,0.0,0.0
-10,9.975056956657657,9.959198940739181,8.11325964274262,-0.23050191847932178,1,0.0,9.959198940739181,21.174274328866346
-11,9.939562358783968,0.0,15.098980309226542,0.6448738472518317,0,0.0,0.0,21.174274328866346
Index: core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/it_28.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/it_28.csv b/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/it_28.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/it_28.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,172.029713674059,0,0.0,0.0,0.0
-1,0.0,0.0,108.35512390186206,0,0.0,0.0,0.0
-2,0.0,0.0,297.9412754663117,0,0.0,0.0,0.0
-3,0.0,0.0,73.30180894649064,0,0.0,0.0,0.0
-4,0.0,0.0,289.8620561905059,0,0.0,0.0,0.0
-5,0.0,0.0,33.318862642215606,0,0.0,0.0,0.0
-6,0.0,0.0,166.809469669941,0,0.0,0.0,0.0
-7,0.0,0.0,204.01268045419766,1,0.0,0.0,0.0
-8,0.0,0.0,82.23153700578986,0,0.0,0.0,0.0
-9,0.0,0.0,68.3104230765388,0,0.0,0.0,0.0
-10,203.625,204.5101717516297,432.9936259024501,0,0.0,204.5101717516297,268.78122473508523
Index: core/acquisition/RESULTS/branin_penalised_KG_n_obj_1e-06_n_c_1e-06/it_28.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1e-06_n_c_1e-06/it_28.csv b/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1e-06_n_c_1e-06/it_28.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1e-06_n_c_1e-06/it_28.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,172.12490471367406,0,0.0,0.0,0.0
-1,0.0,0.0,109.12423012390187,0,0.0,0.0,0.0
-2,0.0,0.0,298.1248162754663,0,0.0,0.0,0.0
-3,0.0,0.0,73.12517680894648,0,0.0,0.0,0.0
-4,0.0,0.0,289.12573705619053,0,0.0,0.0,0.0
-5,0.0,0.0,32.62569386264219,0,0.0,0.0,0.0
-6,0.0,0.0,167.62418446966993,0,0.0,0.0,0.0
-7,0.0,0.0,203.6253876804542,1,0.0,0.0,0.0
-8,0.0,0.0,82.12510653700579,0,0.0,0.0,0.0
-9,0.0,0.0,68.62468542307654,0,0.0,0.0,0.0
-10,65.15622473508523,62.49776044377356,418.85973879092995,0,0.0,206.28346429131167,0.0
Index: core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_28.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_28.csv b/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_28.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_28.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,23 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,172.12490471367406,0,0.0,0.0
-1,0.0,109.12423012390187,0,0.0,0.0
-2,0.0,298.1248162754663,0,0.0,0.0
-3,0.0,73.12517680894648,0,0.0,0.0
-4,0.0,289.12573705619053,0,0.0,0.0
-5,0.0,32.62569386264219,0,0.0,0.0
-6,0.0,167.62418446966993,0,0.0,0.0
-7,0.0,203.6253876804542,1,0.0,0.0
-8,0.0,82.12510653700579,0,0.0,0.0
-9,0.0,68.62468542307654,0,0.0,0.0
-10,65.35523036546522,204.0810806396927,1,203.4331803966304,268.7884107620956
-11,268.7884107620956,204.43270794505617,1,0.0,268.7884107620956
-12,66.70262298961262,225.79108339011879,0,202.085787772483,268.7884107620956
-13,268.7884107620956,225.49153664839704,0,0.0,268.7884107620956
-14,268.7884107620956,216.7608376664522,0,0.0,268.7884107620956
-15,49.59232728334871,221.9782844009377,0,219.1960834787469,268.7884107620956
-16,49.55382268474767,219.27622582349844,1,219.23468198634197,268.78850467108964
-17,48.642684761854326,219.44872731676946,1,220.1458199092353,268.78850467108964
-18,48.653178364921786,220.1490083282933,1,220.13532630616785,268.78850467108964
-19,48.621543241073425,211.34615380208876,1,220.16696143001622,268.78850467108964
-20,48.62146748666797,206.47970413191393,0,220.16703718442167,268.78850467108964
-21,48.62222940684086,215.93358678289053,1,220.16627526424878,268.78850467108964
Index: core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_28.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_28.csv b/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_28.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_28.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,41 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,172.12490471367406,0,0.0,0.0
-1,0.0,109.12423012390187,0,0.0,0.0
-2,0.0,298.1248162754663,0,0.0,0.0
-3,0.0,73.12517680894648,0,0.0,0.0
-4,0.0,289.12573705619053,0,0.0,0.0
-5,0.0,32.62569386264219,0,0.0,0.0
-6,0.0,167.62418446966993,0,0.0,0.0
-7,0.0,203.6253876804542,1,0.0,0.0
-8,0.0,82.12510653700579,0,0.0,0.0
-9,0.0,68.62468542307654,0,0.0,0.0
-10,65.16341076209562,433.7856174145429,0,203.625,268.7884107620956
-11,65.16341076209562,222.332304391929,0,203.625,268.7884107620956
-12,65.16341076209562,402.6979724379347,0,203.625,268.7884107620956
-13,65.16350018259209,350.5723453231909,0,203.625,268.7885001825921
-14,65.16350018259209,204.70762561897746,1,203.625,268.7885001825921
-15,64.07863625569317,275.31487047815483,0,204.70986799378986,268.788504249483
-16,64.07863625569317,189.455631265671,1,204.70986799378986,268.788504249483
-17,64.07863667725101,145.91593711619464,0,204.70986799378986,268.78850467104087
-18,64.07863667725101,189.47760834591432,1,204.70986799378986,268.78850467104087
-19,64.07863667725101,254.77212314964794,1,204.70986799378986,268.78850467104087
-20,14.016346303319892,185.45492002946358,1,254.77215836772098,268.78850467104087
-21,14.016346303319892,173.63463613317307,0,254.77215836772098,268.78850467104087
-22,14.016346303319892,246.580228426617,1,254.77215836772098,268.78850467104087
-23,14.016346303319892,219.24057786347115,1,254.77215836772098,268.78850467104087
-24,14.016346303319892,179.45322086065843,1,254.77215836772098,268.78850467104087
-25,14.016346303319892,263.7964085731141,1,254.77215836772098,268.78850467104087
-26,4.993376593881862,197.83200194067723,1,263.795128077159,268.78850467104087
-27,4.993376593881862,200.4087566798129,1,263.795128077159,268.78850467104087
-28,4.99337659408792,189.09163835472134,1,263.795128077159,268.7885046712469
-29,4.99337659408792,222.89758449527238,0,263.795128077159,268.7885046712469
-30,4.99337659408792,262.0058425845483,1,263.795128077159,268.7885046712469
-31,4.99337659408792,218.35801651317493,1,263.795128077159,268.7885046712469
-32,4.99337659408792,267.0077876215017,1,263.795128077159,268.7885046712469
-33,1.7795681570595434,268.7098994730854,1,267.0089365141874,268.7885046712469
-34,0.07871990452872524,268.72369463019527,1,268.7097847667182,268.7885046712469
-35,0.06619465054018292,268.3741846547192,1,268.72231002070674,268.7885046712469
-36,0.06619465054018292,263.0261674543474,1,268.72231002070674,268.7885046712469
-37,0.06619465054018292,265.95937651416403,1,268.72231002070674,268.7885046712469
-38,0.06619465054018292,267.19722240458054,1,268.72231002070674,268.7885046712469
-39,0.06619465054018292,220.3928666579429,0,268.72231002070674,268.7885046712469
Index: core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_34.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_34.csv b/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_34.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_34.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,35 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,249.60481627954195,0,0.0,0.0
-1,0.0,230.6619036976595,0,0.0,0.0
-2,0.0,164.4565830201157,1,0.0,0.0
-3,0.0,190.12357821047033,0,0.0,0.0
-4,0.0,215.01459458069908,0,0.0,0.0
-5,0.0,41.07465785341574,0,0.0,0.0
-6,0.0,5.157289028362771,0,0.0,0.0
-7,0.0,171.38848010844424,1,0.0,0.0
-8,0.0,132.62291861089648,0,0.0,0.0
-9,0.0,96.97037166396571,0,0.0,0.0
-10,101.44825744783515,269.34437872652603,0,167.20593537687648,268.65419282471163
-11,100.77458386628527,400.28706931062936,0,168.01366392345565,268.7882477897409
-12,39.29867333086287,193.63944646524644,1,229.4898176374366,268.78849096829947
-13,73.65219096009648,188.65339956917038,1,195.136300008203,268.78849096829947
-14,68.60905776773586,154.60384322552773,0,200.1794332005636,268.78849096829947
-15,70.18964232354708,193.5469065464681,0,198.5988486447524,268.78849096829947
-16,69.62043216098294,231.94591949723545,0,199.16805880731653,268.78849096829947
-17,77.53379355332422,198.69144196692238,0,191.25469741497525,268.78849096829947
-18,70.3539886767021,284.1541526444845,0,198.43450229159737,268.78849096829947
-19,73.06834397091814,199.79976766760217,1,195.7201607003288,268.7885046712469
-20,68.9449880969137,200.47591180744914,1,199.84351657433322,268.7885046712469
-21,25.368649703461784,235.57271268116776,0,243.41985496778514,268.7885046712469
-22,19.96656399112814,221.66131466761152,0,248.8219406801188,268.7885046712469
-23,43.897212398100066,246.8617504258729,0,224.89129227314686,268.7885046712469
-24,12.993852352743971,242.80183849318223,0,255.79465231850295,268.7885046712469
-25,11.836216699650038,198.88015872878387,0,256.9522879715969,268.7885046712469
-26,11.50858777941778,245.27546179650457,0,257.27991689182915,268.7885046712469
-27,18.13008693377043,327.08373989058947,0,250.6584177374765,268.7885046712469
-28,58.01348465566974,225.16205785678224,0,210.77502001557718,268.7885046712469
-29,7.680932870350944,252.3180518644655,1,261.107571800896,268.7885046712469
-30,8.14229022350878,232.37099733384434,0,260.64621444773815,268.7885046712469
-31,0.9055852975461107,260.14792390963913,1,267.8829193737008,268.7885046712469
-32,58.15790544386144,269.0986341734939,1,210.6305992273855,268.7885046712469
-33,0.4100615777393841,264.44866854858293,1,268.37844309350754,268.7885046712469
Index: core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_44.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_44.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_44.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_44.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,-7.800241515808794,0,0.0,0.0,0.0
-1,0.0,0.0,-7.381584727417095,0,0.0,0.0,0.0
-2,0.0,0.0,-10.387569171395347,1,0.0,0.0,0.0
-3,0.0,0.0,-18.55133309308299,1,0.0,0.0,0.0
-4,0.0,0.0,-15.463746761188967,1,0.0,0.0,0.0
-5,0.0,0.0,-17.3421979184562,1,0.0,0.0,0.0
-6,0.0,0.0,-1.4605406728247678,1,0.0,0.0,0.0
-7,0.0,0.0,-10.024619190859324,1,0.0,0.0,0.0
-8,0.0,0.0,-17.60540207609362,1,0.0,0.0,0.0
-9,0.0,0.0,-10.107543122330103,1,0.0,0.0,0.0
-10,1.174274328866347,1.318128767790455,1.276334778728243,0,0.0,-0.14385443892410787,0.0
-11,1.174274328866347,0.23013399000821888,-1.4449762578956589,1,0.0,0.9441403388581282,0.0
Index: core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_44.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_44.csv b/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_44.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_44.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,39 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,190.03278958153845,1,0.0,0.0
-1,0.0,80.56660056707157,0,0.0,0.0
-2,0.0,296.9786982562665,0,0.0,0.0
-3,0.0,204.26396935105237,0,0.0,0.0
-4,0.0,206.8924054222474,1,0.0,0.0
-5,0.0,60.488071140794574,0,0.0,0.0
-6,0.0,93.04735511826341,0,0.0,0.0
-7,0.0,131.94885248301935,0,0.0,0.0
-8,0.0,127.42400607630445,1,0.0,0.0
-9,0.0,100.05771055840437,0,0.0,0.0
-10,60.50688415213682,345.86365328102744,0,208.125,268.6318841521368
-11,55.160246103250955,143.13497178352202,0,213.6200486171799,268.78029472043085
-12,60.655294720430845,223.19853305849205,0,208.125,268.78029472043085
-13,60.655294720430845,243.91274924121612,0,208.125,268.78029472043085
-14,60.655294720430845,260.6240994797575,0,208.125,268.78029472043085
-15,77.02316983890034,242.47561569941234,1,191.7571248815305,268.78029472043085
-16,22.535330897744018,233.49328264741294,0,246.24496382268683,268.78029472043085
-17,17.592037695231397,254.46848972818742,0,251.1925217706853,268.7845594659167
-18,20.331015814481617,232.88295617833418,0,248.45748870139712,268.78850451587874
-19,20.03212472036546,225.22503636953883,0,248.75637995075567,268.78850467112113
-20,16.131609206005493,271.4867749223253,0,252.65689546511564,268.78850467112113
-21,77.34461124227107,208.3283516067393,1,191.44389342885006,268.78850467112113
-22,9.920925245999797,176.72559194260464,0,258.86757942512133,268.78850467112113
-23,6.306893291673418,278.646009940571,0,262.4816113794477,268.78850467112113
-24,18.525814186202297,293.72452322391405,0,250.26269048504395,268.78850467124624
-25,13.913512497721939,228.92219169950297,1,254.8749921735243,268.78850467124624
-26,4.91456300729277,169.23783099383044,0,263.8739416639535,268.78850467124624
-27,77.11174864483797,184.64687599315536,1,191.67675602640827,268.78850467124624
-28,4.462308019537886,239.32850885595676,0,264.32619665170836,268.78850467124624
-29,0.4705179374587374,232.91889123929914,0,268.3179867337875,268.78850467124624
-30,0.6699656654891442,278.748054650641,0,268.1185390057571,268.78850467124624
-31,2.9550081156232295,218.00366197350846,0,265.833496555623,268.78850467124624
-32,2.711778540282012,154.46189003016218,1,266.07672613096423,268.78850467124624
-33,2.562982575081435,254.7577058060471,1,266.2255220961648,268.78850467124624
-34,0.3066028285056177,263.55458615558376,1,268.4819018427406,268.78850467124624
-35,0.14288364599372017,269.36692441271384,1,268.6456210252525,268.78850467124624
-36,0.35407907426264273,264.1171514555571,1,268.4344255969843,268.7885046712469
-37,0.07294359638007109,269.28313137859016,1,268.71556107486686,268.7885046712469
Index: core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_54.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_54.csv b/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_54.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_54.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,20 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,28.123291589075915,0,0.0,0.0
-1,0.0,194.62526981230042,0,0.0,0.0
-2,0.0,230.6241644526332,0,0.0,0.0
-3,0.0,176.62542269735232,1,0.0,0.0
-4,0.0,113.62348832255084,0,0.0,0.0
-5,0.0,95.62649373178726,0,0.0,0.0
-6,0.0,298.12437729925733,0,0.0,0.0
-7,0.0,167.62434435618206,0,0.0,0.0
-8,0.0,19.125836226629428,0,0.0,0.0
-9,0.0,172.12567271864782,0,0.0,0.0
-10,87.53475589848648,362.09998189470195,0,181.19009721308493,268.7248531115714
-11,63.69188609937325,241.22791049650283,0,205.09661611511532,268.7885022144886
-12,88.50512646944156,207.65471340248874,1,180.283375745047,268.7885022144886
-13,53.784491043449066,171.6222203661179,0,215.0040111710395,268.7885022144886
-14,87.77162394275337,204.51036202154438,0,181.0168782717352,268.7885022144886
-15,87.68005944407255,226.9356623155353,0,181.10844277041602,268.7885022144886
-16,53.68271155714294,215.1162320852888,0,215.10579065734564,268.7885022144886
-17,54.56914065508144,228.79712860032055,1,214.21936155940713,268.7885022144886
-18,21.792965593833202,247.92600870479257,1,246.99553907689946,268.78850467073266
Index: core/acquisition/RESULTS/test_fun_cEI_1e-06/it_71.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_fun_cEI_1e-06/it_71.csv b/core/acquisition/RESULTS/test_fun_cEI_1e-06/it_71.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_fun_cEI_1e-06/it_71.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,18 +0,0 @@
-,Opportunity_cost,Y,C_bool,recommended_val,optimum
-0,0.0,0.2655418268759092,1,0.0,0.0
-1,0.0,0.12464591803096542,1,0.0,0.0
-2,0.0,0.12401437706648516,0,0.0,0.0
-3,0.0,0.924218413214805,0,0.0,0.0
-4,0.0,0.4846989084556808,0,0.0,0.0
-5,0.0,0.04473849592047956,0,0.0,0.0
-6,0.0,0.9267512591349069,0,0.0,0.0
-7,0.0,0.3048716651340994,0,0.0,0.0
-8,0.0,0.6842512179326615,1,0.0,0.0
-9,0.0,0.26605608502141953,0,0.0,0.0
-10,0.03348142093842077,0.7384139393567439,0,0.7148268755071219,0.7483082964455426
-11,0.007963694301375446,0.7626347180563529,0,0.7403446120562787,0.7483083063576541
-12,0.0074423506207381696,0.7435621732497726,0,0.7408659557369159,0.7483083063576541
-13,0.0060390719590599495,0.8785287942105225,0,0.7422692343985942,0.7483083063576541
-14,0.005670891269568323,0.7446743350827878,1,0.7426374150880858,0.7483083063576541
-15,0.0047244571167711635,0.7453636935421007,1,0.7435838492408829,0.7483083063576541
-16,0.004257991314779441,0.7453232727443748,1,0.7440503150428747,0.7483083063576541
Index: core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1e-06/it_101.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1e-06/it_101.csv b/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1e-06/it_101.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1e-06/it_101.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,4 +0,0 @@
-,OC GP mean,OC GP sampled
-0,254.51428105589724,251.85427107112667
-1,268.1289424114936,267.82866916946654
-2,268.21362816536794,267.82866916946654
Index: core/acquisition/RESULTS/NN_nEI/it_103.csv
===================================================================
diff --git a/core/acquisition/RESULTS/NN_nEI/it_103.csv b/core/acquisition/RESULTS/NN_nEI/it_103.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/NN_nEI/it_103.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,2 +0,0 @@
-,Opportunity_cost
-0,0.9538000226020813
Index: core/acquisition/RESULTS/exploratory_NN_YC/X.csv
===================================================================
diff --git a/core/acquisition/RESULTS/exploratory_NN_YC/X.csv b/core/acquisition/RESULTS/exploratory_NN_YC/X.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/exploratory_NN_YC/X.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,100 +0,0 @@
-4.823763200103602100e-02,6.836165650847119135e-01,8.000000000000000000e+00,5.000000000000000000e+00
-2.862185631919186846e-01,7.714541629583454574e-01,9.000000000000000000e+00,9.000000000000000000e+00
-7.137566833629175322e-01,4.675683870556952837e-02,8.000000000000000000e+00,7.000000000000000000e+00
-2.140008741679029491e-02,7.381558915873699667e-02,6.000000000000000000e+00,8.000000000000000000e+00
-2.038635376147646394e-01,5.987960935135034912e-01,1.100000000000000000e+01,7.000000000000000000e+00
-5.026552412842303502e-02,7.052265026464921149e-01,8.000000000000000000e+00,1.000000000000000000e+01
-2.992491750249706706e-01,1.492668026899108824e-01,6.000000000000000000e+00,8.000000000000000000e+00
-6.572711916784529373e-01,6.086159387557782408e-01,5.000000000000000000e+00,1.100000000000000000e+01
-3.050332493045100346e-01,1.493424781358744513e-01,8.000000000000000000e+00,8.000000000000000000e+00
-5.777553634564127627e-01,4.571148970574923642e-01,6.000000000000000000e+00,7.000000000000000000e+00
-6.887524506647453582e-02,9.704606460587864580e-01,1.000000000000000000e+01,9.000000000000000000e+00
-8.587304391531574987e-01,8.350839662287388165e-01,5.000000000000000000e+00,1.000000000000000000e+01
-1.319081140592302526e-01,6.849956357173876409e-01,5.000000000000000000e+00,1.200000000000000000e+01
-1.763434149439033760e-01,4.581709385494040498e-01,6.000000000000000000e+00,7.000000000000000000e+00
-4.909702543278942066e-01,9.076058843603532766e-01,1.100000000000000000e+01,5.000000000000000000e+00
-8.550626481126413214e-01,7.252418124351933670e-01,1.000000000000000000e+01,8.000000000000000000e+00
-7.513543971569931479e-01,2.079495883911903955e-03,1.100000000000000000e+01,1.000000000000000000e+01
-9.607802740956660204e-01,6.661999574769269516e-01,1.100000000000000000e+01,9.000000000000000000e+00
-7.517095272576972409e-01,5.729585802118198901e-01,7.000000000000000000e+00,1.000000000000000000e+01
-3.804075317692281466e-01,4.742154703405269678e-01,9.000000000000000000e+00,9.000000000000000000e+00
-4.046311461492952399e-01,4.317579461336367719e-01,9.000000000000000000e+00,7.000000000000000000e+00
-7.062268236056339354e-01,3.596763608531035605e-01,7.000000000000000000e+00,9.000000000000000000e+00
-2.679630749464024242e-01,2.813018394597028293e-01,8.000000000000000000e+00,1.000000000000000000e+01
-8.455618432714305799e-01,7.643052455250100019e-01,7.000000000000000000e+00,9.000000000000000000e+00
-9.040323299156874937e-01,7.086605482658452360e-01,6.000000000000000000e+00,5.000000000000000000e+00
-7.531485089679601508e-01,1.612026055992079043e-01,1.000000000000000000e+01,7.000000000000000000e+00
-5.115018523804855111e-01,7.531006952642318453e-01,1.000000000000000000e+01,8.000000000000000000e+00
-1.661574075692922592e-01,7.779698869514971582e-01,5.000000000000000000e+00,7.000000000000000000e+00
-2.957053686927770264e-01,7.312205309001181819e-01,7.000000000000000000e+00,6.000000000000000000e+00
-2.811036145803275099e-01,2.265135210982560654e-01,7.000000000000000000e+00,1.000000000000000000e+01
-3.239404508515536518e-01,3.269093665332162835e-01,1.100000000000000000e+01,5.000000000000000000e+00
-4.555389304550462870e-01,2.733708986466910074e-01,9.000000000000000000e+00,8.000000000000000000e+00
-5.389246758630612533e-01,8.886224238952591392e-01,8.000000000000000000e+00,5.000000000000000000e+00
-2.152268610621247136e-01,9.158713666959175104e-01,7.000000000000000000e+00,7.000000000000000000e+00
-7.918696436695866758e-01,6.123898095767641436e-01,9.000000000000000000e+00,1.200000000000000000e+01
-7.194176048035700877e-01,1.379105478273253416e-01,1.100000000000000000e+01,1.200000000000000000e+01
-8.407997862573047820e-01,1.361537846624142900e-01,1.200000000000000000e+01,8.000000000000000000e+00
-2.648465865362515936e-01,3.622093114616064535e-01,5.000000000000000000e+00,6.000000000000000000e+00
-6.086764640369503043e-01,1.143148423612166675e-01,9.000000000000000000e+00,1.200000000000000000e+01
-6.462285124620491539e-01,5.067143522449557569e-01,5.000000000000000000e+00,1.200000000000000000e+01
-3.829482697929427193e-01,2.567625998794132447e-01,1.100000000000000000e+01,8.000000000000000000e+00
-4.062506367870905577e-01,1.093731132971674930e-01,9.000000000000000000e+00,5.000000000000000000e+00
-8.020559739977107805e-01,1.862329125408112296e-01,8.000000000000000000e+00,6.000000000000000000e+00
-5.943655727283134738e-01,3.207195745480007631e-01,7.000000000000000000e+00,1.100000000000000000e+01
-8.893569351988473981e-01,6.588837518433025009e-01,5.000000000000000000e+00,6.000000000000000000e+00
-4.851319027985278032e-01,3.088395802807762935e-01,1.100000000000000000e+01,8.000000000000000000e+00
-8.200349508941189303e-01,5.187092670686767049e-01,1.100000000000000000e+01,7.000000000000000000e+00
-8.503005764565564339e-01,3.304307331273024229e-01,1.200000000000000000e+01,7.000000000000000000e+00
-7.805606922046820495e-01,8.745151603905310100e-02,1.100000000000000000e+01,6.000000000000000000e+00
-8.787788828351309478e-01,8.740289726399151637e-02,5.000000000000000000e+00,5.000000000000000000e+00
-6.918721810629632207e-01,2.497699463343907855e-01,1.100000000000000000e+01,6.000000000000000000e+00
-4.498464045346420859e-01,2.160763556808053543e-01,5.000000000000000000e+00,9.000000000000000000e+00
-3.028560131409669398e-01,6.206229750730598432e-02,1.200000000000000000e+01,7.000000000000000000e+00
-8.118835608766675760e-01,7.699992997320461718e-01,1.000000000000000000e+01,1.000000000000000000e+01
-1.382680088697797460e-01,4.911708101310574559e-01,1.100000000000000000e+01,8.000000000000000000e+00
-3.972835334958816911e-01,2.715081146743379414e-01,1.000000000000000000e+01,1.000000000000000000e+01
-2.289001917909323225e-01,8.017349718188144791e-01,1.100000000000000000e+01,6.000000000000000000e+00
-5.845531859079229342e-01,3.342993586558683505e-01,1.000000000000000000e+01,7.000000000000000000e+00
-8.774053773557943803e-01,1.936542877126568585e-01,1.100000000000000000e+01,1.200000000000000000e+01
-3.244641745083981510e-01,3.385502537548582547e-01,5.000000000000000000e+00,1.100000000000000000e+01
-7.965635554994513479e-01,6.660421470179479497e-01,1.000000000000000000e+01,9.000000000000000000e+00
-7.894783110733016862e-01,2.802832991164660448e-01,1.100000000000000000e+01,1.200000000000000000e+01
-6.590367112964529150e-01,2.629991036816756167e-01,1.100000000000000000e+01,1.100000000000000000e+01
-2.416713717555457330e-01,8.723297617605361154e-01,5.000000000000000000e+00,1.100000000000000000e+01
-8.111626832970180168e-01,5.337386299624335972e-01,8.000000000000000000e+00,9.000000000000000000e+00
-4.629251785436345190e-01,7.363274836433661985e-01,9.000000000000000000e+00,6.000000000000000000e+00
-7.317176397142484134e-01,8.888304224104826012e-01,7.000000000000000000e+00,9.000000000000000000e+00
-4.560400036393109646e-01,2.712214811682001070e-01,8.000000000000000000e+00,1.200000000000000000e+01
-8.554448920772445009e-01,5.281011649814807418e-01,1.100000000000000000e+01,8.000000000000000000e+00
-6.951426490840720840e-01,1.318615075193003416e-01,1.200000000000000000e+01,9.000000000000000000e+00
-1.662953226986273458e-01,9.522366388667276027e-01,1.000000000000000000e+01,6.000000000000000000e+00
-1.774540083939169233e-01,8.043313682980463009e-01,1.100000000000000000e+01,7.000000000000000000e+00
-8.414059782645899599e-01,6.448949083031418894e-01,6.000000000000000000e+00,6.000000000000000000e+00
-3.614611243735655344e-01,2.002348760713381082e-01,8.000000000000000000e+00,1.100000000000000000e+01
-3.772247880167679535e-01,9.611145748791758425e-01,6.000000000000000000e+00,1.200000000000000000e+01
-4.079541536347938008e-02,3.518067790346802309e-02,6.000000000000000000e+00,1.100000000000000000e+01
-6.278214461455954298e-01,4.190018840230225750e-01,9.000000000000000000e+00,1.000000000000000000e+01
-7.961365590206791465e-01,9.349701002546020323e-01,1.000000000000000000e+01,9.000000000000000000e+00
-8.883397686645944091e-01,3.160176483963776373e-01,7.000000000000000000e+00,8.000000000000000000e+00
-1.928158477034690732e-01,7.691451541079800114e-01,9.000000000000000000e+00,7.000000000000000000e+00
-8.487689367997864887e-01,9.653406840097706887e-01,1.100000000000000000e+01,1.000000000000000000e+01
-1.749622671034178900e-01,6.949152446304867059e-01,1.000000000000000000e+01,5.000000000000000000e+00
-3.697858876638430714e-01,2.995037823352426631e-01,9.000000000000000000e+00,1.100000000000000000e+01
-3.784559734464816305e-01,9.589772656534710782e-01,1.000000000000000000e+01,8.000000000000000000e+00
-5.649385717953677721e-01,3.917560610488590167e-01,7.000000000000000000e+00,7.000000000000000000e+00
-5.060253493757709276e-01,9.417959727021723015e-01,9.000000000000000000e+00,1.000000000000000000e+01
-5.237865356553668139e-01,1.281119773118841731e-01,1.000000000000000000e+01,8.000000000000000000e+00
-5.179706720208618886e-01,9.276935288471930274e-01,5.000000000000000000e+00,1.100000000000000000e+01
-9.225587820170765285e-01,7.495369504604275646e-01,5.000000000000000000e+00,9.000000000000000000e+00
-2.441101746668734584e-01,4.565808878801300846e-02,7.000000000000000000e+00,1.100000000000000000e+01
-2.062200204929779679e-01,6.562434233949494544e-01,1.100000000000000000e+01,9.000000000000000000e+00
-8.078700861895423690e-01,2.243055168552093859e-01,8.000000000000000000e+00,1.200000000000000000e+01
-3.008283247682011496e-01,5.142561292141855089e-01,1.100000000000000000e+01,7.000000000000000000e+00
-6.686384670037419653e-01,5.055685435369443592e-01,7.000000000000000000e+00,7.000000000000000000e+00
-9.144214677617554798e-01,1.064665083588154509e-01,7.000000000000000000e+00,1.200000000000000000e+01
-6.926972549929830136e-02,8.069127909272828525e-01,1.100000000000000000e+01,1.100000000000000000e+01
-7.739517481764724982e-01,9.528284869114913569e-01,8.000000000000000000e+00,6.000000000000000000e+00
-3.475195912931790254e-02,5.829935690695837724e-01,9.000000000000000000e+00,1.000000000000000000e+01
-5.039888660130664721e-01,4.002095301580778641e-01,1.100000000000000000e+01,8.000000000000000000e+00
-4.344037566903606318e-01,6.493182224574481909e-01,7.000000000000000000e+00,6.000000000000000000e+00
Index: core/acquisition/RESULTS/LunarLander_cKG/X_0.csv
===================================================================
diff --git a/core/acquisition/RESULTS/LunarLander_cKG/X_0.csv b/core/acquisition/RESULTS/LunarLander_cKG/X_0.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/LunarLander_cKG/X_0.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,60 +0,0 @@
-5.000000000000000000e-01,9.000000000000000222e-01,2.000000000000000042e-02,2.200000000000000011e-01,3.399999999999999689e-01,7.399999999999999911e-01,1.979999999999999982e+00,3.399999999999999689e-01,1.780000000000000027e+00,8.599999999999999867e-01,1.580000000000000071e+00,1.580000000000000071e+00
-1.000000000000000056e-01,6.600000000000000311e-01,1.699999999999999956e+00,9.000000000000000222e-01,9.799999999999999822e-01,1.459999999999999964e+00,5.999999999999999778e-02,2.200000000000000011e-01,1.340000000000000080e+00,2.600000000000000089e-01,2.600000000000000089e-01,1.100000000000000089e+00
-1.260000000000000009e+00,5.800000000000000711e-01,3.800000000000000044e-01,8.200000000000000622e-01,1.179999999999999938e+00,1.179999999999999938e+00,1.060000000000000053e+00,8.200000000000000622e-01,1.979999999999999982e+00,3.800000000000000044e-01,1.620000000000000107e+00,1.400000000000000133e-01
-1.580000000000000071e+00,2.000000000000000042e-02,1.660000000000000142e+00,5.400000000000000355e-01,1.860000000000000098e+00,5.000000000000000000e-01,1.739999999999999991e+00,1.860000000000000098e+00,9.799999999999999822e-01,2.000000000000000042e-02,1.660000000000000142e+00,1.860000000000000098e+00
-1.419999999999999929e+00,1.899999999999999911e+00,1.100000000000000089e+00,1.799999999999999933e-01,1.380000000000000115e+00,1.419999999999999929e+00,1.400000000000000133e-01,1.899999999999999911e+00,1.419999999999999929e+00,1.400000000000000133e-01,1.140000000000000124e+00,1.000000000000000056e-01
-1.500000000000000000e+00,5.000000000000000000e-01,5.999999999999999778e-02,2.600000000000000089e-01,1.060000000000000053e+00,1.020000000000000018e+00,9.799999999999999822e-01,9.399999999999999467e-01,4.599999999999999645e-01,4.599999999999999645e-01,6.999999999999999556e-01,2.000000000000000042e-02
-1.340000000000000080e+00,1.620000000000000107e+00,1.540000000000000036e+00,1.260000000000000009e+00,3.800000000000000044e-01,1.140000000000000124e+00,1.000000000000000056e-01,1.979999999999999982e+00,1.060000000000000053e+00,5.800000000000000711e-01,1.799999999999999933e-01,9.399999999999999467e-01
-1.100000000000000089e+00,1.140000000000000124e+00,1.500000000000000000e+00,1.060000000000000053e+00,1.140000000000000124e+00,5.400000000000000355e-01,1.820000000000000062e+00,1.140000000000000124e+00,1.219999999999999973e+00,1.979999999999999982e+00,3.800000000000000044e-01,1.500000000000000000e+00
-1.020000000000000018e+00,1.500000000000000000e+00,1.219999999999999973e+00,1.020000000000000018e+00,1.620000000000000107e+00,1.939999999999999947e+00,4.200000000000000400e-01,1.260000000000000009e+00,1.799999999999999933e-01,3.399999999999999689e-01,1.500000000000000000e+00,1.820000000000000062e+00
-7.399999999999999911e-01,1.179999999999999938e+00,1.799999999999999933e-01,1.419999999999999929e+00,1.820000000000000062e+00,1.500000000000000000e+00,1.860000000000000098e+00,1.020000000000000018e+00,3.399999999999999689e-01,1.660000000000000142e+00,9.399999999999999467e-01,1.660000000000000142e+00
-1.060000000000000053e+00,1.260000000000000009e+00,5.000000000000000000e-01,1.219999999999999973e+00,2.200000000000000011e-01,9.799999999999999822e-01,1.459999999999999964e+00,6.199999999999999956e-01,2.200000000000000011e-01,1.260000000000000009e+00,1.340000000000000080e+00,3.000000000000000444e-01
-4.599999999999999645e-01,1.580000000000000071e+00,7.399999999999999911e-01,1.000000000000000056e-01,6.999999999999999556e-01,1.219999999999999973e+00,1.020000000000000018e+00,1.500000000000000000e+00,5.800000000000000711e-01,1.179999999999999938e+00,9.000000000000000222e-01,1.140000000000000124e+00
-5.400000000000000355e-01,1.219999999999999973e+00,3.399999999999999689e-01,1.100000000000000089e+00,1.580000000000000071e+00,5.800000000000000711e-01,8.599999999999999867e-01,1.660000000000000142e+00,1.100000000000000089e+00,1.799999999999999933e-01,4.200000000000000400e-01,5.999999999999999778e-02
-8.599999999999999867e-01,1.380000000000000115e+00,8.599999999999999867e-01,1.620000000000000107e+00,1.780000000000000027e+00,1.340000000000000080e+00,7.800000000000000266e-01,5.400000000000000355e-01,1.380000000000000115e+00,1.140000000000000124e+00,7.399999999999999911e-01,6.199999999999999956e-01
-9.399999999999999467e-01,1.020000000000000018e+00,4.200000000000000400e-01,1.860000000000000098e+00,5.800000000000000711e-01,5.999999999999999778e-02,3.800000000000000044e-01,4.599999999999999645e-01,8.200000000000000622e-01,9.000000000000000222e-01,6.199999999999999956e-01,1.260000000000000009e+00
-3.800000000000000044e-01,1.860000000000000098e+00,5.400000000000000355e-01,1.300000000000000044e+00,1.000000000000000056e-01,1.979999999999999982e+00,1.540000000000000036e+00,1.000000000000000056e-01,1.620000000000000107e+00,1.100000000000000089e+00,9.799999999999999822e-01,3.399999999999999689e-01
-1.780000000000000027e+00,2.600000000000000089e-01,1.300000000000000044e+00,1.820000000000000062e+00,1.979999999999999982e+00,1.620000000000000107e+00,1.780000000000000027e+00,1.060000000000000053e+00,9.000000000000000222e-01,5.999999999999999778e-02,1.260000000000000009e+00,1.459999999999999964e+00
-1.739999999999999991e+00,1.979999999999999982e+00,1.820000000000000062e+00,5.000000000000000000e-01,1.419999999999999929e+00,3.399999999999999689e-01,1.799999999999999933e-01,2.000000000000000042e-02,1.020000000000000018e+00,1.620000000000000107e+00,1.939999999999999947e+00,1.739999999999999991e+00
-2.600000000000000089e-01,1.100000000000000089e+00,6.999999999999999556e-01,1.540000000000000036e+00,3.000000000000000444e-01,1.260000000000000009e+00,7.399999999999999911e-01,6.600000000000000311e-01,1.580000000000000071e+00,2.200000000000000011e-01,1.820000000000000062e+00,4.599999999999999645e-01
-6.199999999999999956e-01,1.699999999999999956e+00,1.620000000000000107e+00,1.340000000000000080e+00,8.200000000000000622e-01,6.600000000000000311e-01,1.939999999999999947e+00,7.399999999999999911e-01,9.399999999999999467e-01,1.380000000000000115e+00,1.739999999999999991e+00,1.060000000000000053e+00
-1.140000000000000124e+00,4.599999999999999645e-01,1.899999999999999911e+00,1.979999999999999982e+00,1.459999999999999964e+00,1.739999999999999991e+00,6.199999999999999956e-01,1.580000000000000071e+00,5.000000000000000000e-01,1.020000000000000018e+00,5.000000000000000000e-01,1.219999999999999973e+00
-2.000000000000000042e-02,5.400000000000000355e-01,1.459999999999999964e+00,4.200000000000000400e-01,1.939999999999999947e+00,3.800000000000000044e-01,2.200000000000000011e-01,1.300000000000000044e+00,6.600000000000000311e-01,6.999999999999999556e-01,1.780000000000000027e+00,7.399999999999999911e-01
-3.399999999999999689e-01,1.400000000000000133e-01,9.000000000000000222e-01,1.939999999999999947e+00,1.020000000000000018e+00,1.820000000000000062e+00,9.399999999999999467e-01,4.200000000000000400e-01,1.540000000000000036e+00,1.699999999999999956e+00,1.060000000000000053e+00,8.200000000000000622e-01
-1.300000000000000044e+00,7.800000000000000266e-01,1.140000000000000124e+00,6.199999999999999956e-01,4.599999999999999645e-01,7.800000000000000266e-01,5.400000000000000355e-01,3.000000000000000444e-01,1.400000000000000133e-01,1.820000000000000062e+00,8.599999999999999867e-01,1.939999999999999947e+00
-3.000000000000000444e-01,1.660000000000000142e+00,8.200000000000000622e-01,9.399999999999999467e-01,1.100000000000000089e+00,3.000000000000000444e-01,1.620000000000000107e+00,1.939999999999999947e+00,1.500000000000000000e+00,1.000000000000000056e-01,2.200000000000000011e-01,1.380000000000000115e+00
-1.979999999999999982e+00,1.340000000000000080e+00,1.979999999999999982e+00,6.999999999999999556e-01,7.399999999999999911e-01,1.899999999999999911e+00,1.219999999999999973e+00,9.799999999999999822e-01,1.820000000000000062e+00,1.419999999999999929e+00,4.599999999999999645e-01,1.620000000000000107e+00
-1.820000000000000062e+00,6.999999999999999556e-01,5.800000000000000711e-01,7.800000000000000266e-01,5.999999999999999778e-02,4.599999999999999645e-01,1.340000000000000080e+00,1.799999999999999933e-01,1.260000000000000009e+00,1.340000000000000080e+00,1.000000000000000056e-01,4.200000000000000400e-01
-9.799999999999999822e-01,1.799999999999999933e-01,6.199999999999999956e-01,1.380000000000000115e+00,1.660000000000000142e+00,1.699999999999999956e+00,1.419999999999999929e+00,9.000000000000000222e-01,1.860000000000000098e+00,1.860000000000000098e+00,1.219999999999999973e+00,2.600000000000000089e-01
-1.860000000000000098e+00,1.739999999999999991e+00,3.000000000000000444e-01,1.459999999999999964e+00,1.340000000000000080e+00,9.399999999999999467e-01,4.599999999999999645e-01,1.620000000000000107e+00,1.660000000000000142e+00,5.000000000000000000e-01,1.179999999999999938e+00,1.419999999999999929e+00
-5.800000000000000711e-01,3.800000000000000044e-01,1.580000000000000071e+00,1.660000000000000142e+00,1.400000000000000133e-01,2.200000000000000011e-01,8.200000000000000622e-01,8.599999999999999867e-01,8.599999999999999867e-01,1.939999999999999947e+00,8.200000000000000622e-01,8.599999999999999867e-01
-1.939999999999999947e+00,1.780000000000000027e+00,2.200000000000000011e-01,1.899999999999999911e+00,1.219999999999999973e+00,1.400000000000000133e-01,2.000000000000000042e-02,5.999999999999999778e-02,1.179999999999999938e+00,9.399999999999999467e-01,2.000000000000000042e-02,1.179999999999999938e+00
-1.380000000000000115e+00,8.200000000000000622e-01,1.000000000000000056e-01,3.399999999999999689e-01,8.599999999999999867e-01,1.860000000000000098e+00,5.000000000000000000e-01,1.380000000000000115e+00,7.399999999999999911e-01,8.200000000000000622e-01,5.800000000000000711e-01,5.400000000000000355e-01
-1.660000000000000142e+00,6.199999999999999956e-01,1.179999999999999938e+00,1.699999999999999956e+00,2.600000000000000089e-01,1.799999999999999933e-01,3.000000000000000444e-01,1.100000000000000089e+00,6.199999999999999956e-01,1.219999999999999973e+00,1.540000000000000036e+00,5.800000000000000711e-01
-6.999999999999999556e-01,9.799999999999999822e-01,1.419999999999999929e+00,9.799999999999999822e-01,6.600000000000000311e-01,1.580000000000000071e+00,1.660000000000000142e+00,1.699999999999999956e+00,3.800000000000000044e-01,1.540000000000000036e+00,3.399999999999999689e-01,1.020000000000000018e+00
-1.899999999999999911e+00,1.419999999999999929e+00,1.400000000000000133e-01,8.599999999999999867e-01,4.200000000000000400e-01,1.100000000000000089e+00,6.600000000000000311e-01,1.400000000000000133e-01,2.600000000000000089e-01,1.739999999999999991e+00,1.400000000000000133e-01,1.799999999999999933e-01
-1.699999999999999956e+00,1.540000000000000036e+00,1.060000000000000053e+00,2.000000000000000042e-02,5.000000000000000000e-01,1.300000000000000044e+00,1.580000000000000071e+00,6.999999999999999556e-01,3.000000000000000444e-01,1.060000000000000053e+00,6.600000000000000311e-01,1.780000000000000027e+00
-1.400000000000000133e-01,5.999999999999999778e-02,9.399999999999999467e-01,1.140000000000000124e+00,1.540000000000000036e+00,1.780000000000000027e+00,1.899999999999999911e+00,1.179999999999999938e+00,1.899999999999999911e+00,6.600000000000000311e-01,1.699999999999999956e+00,1.979999999999999982e+00
-4.200000000000000400e-01,1.820000000000000062e+00,6.600000000000000311e-01,7.399999999999999911e-01,1.899999999999999911e+00,8.599999999999999867e-01,1.380000000000000115e+00,5.800000000000000711e-01,6.999999999999999556e-01,1.459999999999999964e+00,1.380000000000000115e+00,5.000000000000000000e-01
-8.200000000000000622e-01,2.200000000000000011e-01,9.799999999999999822e-01,5.999999999999999778e-02,6.199999999999999956e-01,1.380000000000000115e+00,1.699999999999999956e+00,1.780000000000000027e+00,7.800000000000000266e-01,1.300000000000000044e+00,7.800000000000000266e-01,1.899999999999999911e+00
-1.799999999999999933e-01,4.200000000000000400e-01,1.739999999999999991e+00,1.580000000000000071e+00,1.739999999999999991e+00,4.200000000000000400e-01,1.140000000000000124e+00,1.739999999999999991e+00,5.400000000000000355e-01,9.799999999999999822e-01,1.300000000000000044e+00,3.800000000000000044e-01
-7.800000000000000266e-01,3.399999999999999689e-01,2.600000000000000089e-01,6.600000000000000311e-01,1.500000000000000000e+00,6.199999999999999956e-01,1.179999999999999938e+00,7.800000000000000266e-01,1.939999999999999947e+00,3.000000000000000444e-01,1.100000000000000089e+00,1.540000000000000036e+00
-1.219999999999999973e+00,1.000000000000000056e-01,1.260000000000000009e+00,1.739999999999999991e+00,2.000000000000000042e-02,9.000000000000000222e-01,3.399999999999999689e-01,1.219999999999999973e+00,1.739999999999999991e+00,7.399999999999999911e-01,5.400000000000000355e-01,1.340000000000000080e+00
-9.000000000000000222e-01,8.599999999999999867e-01,1.780000000000000027e+00,3.800000000000000044e-01,9.000000000000000222e-01,2.600000000000000089e-01,1.260000000000000009e+00,1.820000000000000062e+00,1.000000000000000056e-01,1.780000000000000027e+00,1.459999999999999964e+00,9.000000000000000222e-01
-1.620000000000000107e+00,9.399999999999999467e-01,1.020000000000000018e+00,4.599999999999999645e-01,1.260000000000000009e+00,2.000000000000000042e-02,9.000000000000000222e-01,1.540000000000000036e+00,1.140000000000000124e+00,1.500000000000000000e+00,1.020000000000000018e+00,1.300000000000000044e+00
-1.540000000000000036e+00,7.399999999999999911e-01,1.939999999999999947e+00,5.800000000000000711e-01,1.799999999999999933e-01,1.540000000000000036e+00,5.800000000000000711e-01,1.419999999999999929e+00,1.300000000000000044e+00,1.580000000000000071e+00,1.899999999999999911e+00,6.999999999999999556e-01
-6.600000000000000311e-01,1.459999999999999964e+00,4.599999999999999645e-01,1.179999999999999938e+00,9.399999999999999467e-01,8.200000000000000622e-01,1.100000000000000089e+00,1.459999999999999964e+00,1.699999999999999956e+00,5.400000000000000355e-01,1.860000000000000098e+00,7.800000000000000266e-01
-2.200000000000000011e-01,1.300000000000000044e+00,7.800000000000000266e-01,3.000000000000000444e-01,1.300000000000000044e+00,6.999999999999999556e-01,1.500000000000000000e+00,2.600000000000000089e-01,4.200000000000000400e-01,7.800000000000000266e-01,1.979999999999999982e+00,1.699999999999999956e+00
-1.179999999999999938e+00,3.000000000000000444e-01,1.860000000000000098e+00,1.500000000000000000e+00,7.800000000000000266e-01,1.000000000000000056e-01,6.999999999999999556e-01,5.000000000000000000e-01,1.459999999999999964e+00,4.200000000000000400e-01,3.000000000000000444e-01,2.200000000000000011e-01
-5.999999999999999778e-02,1.939999999999999947e+00,1.340000000000000080e+00,1.400000000000000133e-01,1.699999999999999956e+00,1.060000000000000053e+00,1.300000000000000044e+00,1.340000000000000080e+00,5.999999999999999778e-02,6.199999999999999956e-01,1.419999999999999929e+00,9.799999999999999822e-01
-1.459999999999999964e+00,1.060000000000000053e+00,1.380000000000000115e+00,1.780000000000000027e+00,5.400000000000000355e-01,1.660000000000000142e+00,2.600000000000000089e-01,3.800000000000000044e-01,2.000000000000000042e-02,1.899999999999999911e+00,5.999999999999999778e-02,6.600000000000000311e-01
-1.898890614867955462e-01,6.859864360253857818e-01,1.744026585216962267e-04,1.176699828519526925e+00,2.000000000000000000e+00,2.070029671636715459e-04,7.404261048427241976e-01,1.974474393548883100e+00,5.560691484726671963e-01,8.224409370688135965e-05,1.878160657604142636e-01,1.919566708673752322e-04
-0.000000000000000000e+00,3.756127799976002760e-05,3.089813503723395959e-05,2.000000000000000000e+00,1.423497284973232802e+00,6.351080505741120152e-01,1.705496287608164074e+00,1.959146633839870422e+00,1.315946587369430709e+00,1.117405606347370776e-04,1.903229745654315685e+00,0.000000000000000000e+00
-0.000000000000000000e+00,1.545155467289802242e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.396405526239744249e-04,6.836837559569035605e-01,0.000000000000000000e+00,1.249705818412790048e+00,0.000000000000000000e+00,2.465567661660124853e-05,2.559969302081822710e-04,0.000000000000000000e+00
-9.683679897692331062e-01,2.811074582701524743e-02,5.380135995370370004e-05,5.380135995370370004e-05,1.404888811186422615e+00,5.644658798395199018e-01,1.158301449584230092e+00,1.164847542418583348e+00,5.380135995370370004e-05,5.380135995370370004e-05,8.408450157961676330e-02,5.380135995370370004e-05
-0.000000000000000000e+00,1.552450685571580724e+00,2.000000000000000000e+00,1.916380838939900855e+00,1.278209691745808563e+00,1.566319941901468595e-04,0.000000000000000000e+00,2.000000000000000000e+00,1.965045397510282399e+00,1.148193120056476360e-04,1.447491133398353558e+00,0.000000000000000000e+00
-1.711152342398233550e+00,3.927580076149269628e-01,2.028683121702009040e-01,0.000000000000000000e+00,1.492466555563374708e+00,7.522797435504351427e-01,2.000000000000000000e+00,8.546349588839012937e-05,2.448666770266194148e-05,0.000000000000000000e+00,0.000000000000000000e+00,3.168047494799710977e-04
-1.976040978107092894e+00,1.039443626535159204e+00,2.662032267962108388e-04,2.000000000000000000e+00,1.155478959761674584e+00,5.268025003690318675e-01,9.714000078433445706e-01,2.000000000000000000e+00,0.000000000000000000e+00,1.255116412744970169e-04,1.737555089402947228e+00,1.661628600649824213e-04
-1.644470704984189346e+00,1.496538556212667181e+00,1.358718815081751075e+00,5.370311833629251019e-01,1.492903343405130201e+00,4.377725949017117202e-01,1.680938334766013398e+00,1.254982950887375992e+00,1.037707379707391908e+00,1.994900344010890336e+00,8.479382685709330181e-03,1.617717416394303109e-01
-7.943885104093313387e-01,1.077845434352176834e+00,1.052045769565421063e+00,1.808330347774720570e+00,1.699191782773045611e+00,6.238991144376218045e-01,8.312267784214493194e-01,1.612673400026526149e+00,1.861577090489867192e+00,2.448387795940155653e-01,5.138898711574092504e-01,1.997521084704292904e-01
-1.997807476344756381e-04,4.479026019669683778e-02,0.000000000000000000e+00,3.818326419183162986e-05,1.877477738912537220e+00,5.462586372915836375e-01,8.131418511064327781e-01,1.206866415480542187e+00,1.179606655117541703e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
Index: core/acquisition/RESULTS/LunarLander_TS/X_0.csv
===================================================================
diff --git a/core/acquisition/RESULTS/LunarLander_TS/X_0.csv b/core/acquisition/RESULTS/LunarLander_TS/X_0.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/LunarLander_TS/X_0.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,34 +0,0 @@
-1.800000000000000044e+00,1.000000000000000000e+00,1.400000000000000133e+00,1.400000000000000133e+00,1.400000000000000133e+00,1.800000000000000044e+00,2.000000000000000111e-01,1.800000000000000044e+00,6.000000000000000888e-01,1.000000000000000000e+00,1.800000000000000044e+00,1.800000000000000044e+00
-1.000000000000000000e+00,1.800000000000000044e+00,1.800000000000000044e+00,1.800000000000000044e+00,2.000000000000000111e-01,1.000000000000000000e+00,6.000000000000000888e-01,2.000000000000000111e-01,2.000000000000000111e-01,1.800000000000000044e+00,2.000000000000000111e-01,1.400000000000000133e+00
-1.400000000000000133e+00,6.000000000000000888e-01,1.000000000000000000e+00,6.000000000000000888e-01,6.000000000000000888e-01,2.000000000000000111e-01,1.800000000000000044e+00,6.000000000000000888e-01,1.800000000000000044e+00,6.000000000000000888e-01,6.000000000000000888e-01,1.000000000000000000e+00
-6.000000000000000888e-01,2.000000000000000111e-01,6.000000000000000888e-01,2.000000000000000111e-01,1.800000000000000044e+00,1.400000000000000133e+00,1.400000000000000133e+00,1.000000000000000000e+00,1.000000000000000000e+00,2.000000000000000111e-01,1.000000000000000000e+00,2.000000000000000111e-01
-2.000000000000000111e-01,1.400000000000000133e+00,2.000000000000000111e-01,1.000000000000000000e+00,1.000000000000000000e+00,6.000000000000000888e-01,1.000000000000000000e+00,1.400000000000000133e+00,1.400000000000000133e+00,1.400000000000000133e+00,1.400000000000000133e+00,6.000000000000000888e-01
-2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00
-2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00
-0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00
-2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
-2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
-2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
-2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00
-0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,1.202512268880682633e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00
-0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,1.222510502004510391e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00
-2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,1.054889841810683793e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
-2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,1.110725930736145450e+00,0.000000000000000000e+00
-0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,1.022156564790798416e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00
-1.134482256749788087e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00
-4.168156472420481151e-02,1.916114544927443042e+00,8.563917402213243601e-01,1.582029885089210497e+00,1.580461268661530694e+00,1.598971574406475638e+00,1.099787860594241273e-01,3.609696891383291639e-01,3.108007448259275662e-02,1.817706318170674518e+00,7.665887551343699702e-01,1.906946388131910197e+00
-1.927627587476894222e+00,1.783817104955275790e+00,1.113547563704752275e+00,1.993538391088461648e+00,2.522713151012379029e-02,1.999803971217224197e+00,7.031170538537012682e-01,1.069682247182910384e+00,7.053053207654258472e-03,4.030349282393737020e-01,7.213119370166414246e-01,3.531289135745008245e-02
-2.000000000000000000e+00,0.000000000000000000e+00,7.392003090349110739e-01,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00
-1.861927537454907355e+00,2.437947859327525002e-01,4.021161575016263257e-02,1.599286447899202379e+00,1.751264676691872690e-01,7.692344614370627554e-03,1.550635366464727660e-01,8.447545463348469230e-01,6.760985010106221882e-01,1.363088285221828233e+00,1.664048789613707280e+00,3.331580529992939077e-03
-1.669801318489226860e+00,1.499822234279225786e+00,8.971712667395366214e-01,3.294760939644889586e-01,1.897725890027497142e+00,1.446963998319171107e+00,1.614433415209667322e+00,1.885713080603523828e+00,2.281746416912986894e-02,1.039831996396468616e+00,1.145758264200613941e-01,2.871057869446161370e-02
-0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,9.977862163624383607e-01,2.000000000000000000e+00,0.000000000000000000e+00
-1.930727714105819004e+00,9.423098551933586364e-01,3.749294539646943480e-01,5.807344298555894291e-02,1.472422724622735712e+00,1.949324542470546762e+00,1.090493949308710686e+00,7.487129330407960026e-04,3.574454447491972608e-01,1.316618560638351809e-01,2.005718430087757298e-01,1.988574279862897587e+00
-1.387840160093548381e+00,7.636207002701800306e-01,1.538000401007286078e+00,1.959469492376078037e+00,5.427769809037457094e-01,1.506909182208486797e-01,2.553315634160797654e-01,1.931908503854758985e+00,7.184499601363913968e-02,1.817602635650251708e+00,1.604121341421866465e+00,6.515984656691919952e-02
-2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00
-2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,8.563654936357445457e-01,2.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00
-2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,2.000000000000000000e+00,0.000000000000000000e+00,9.726630488781363715e-01,2.000000000000000000e+00,0.000000000000000000e+00
Index: core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_4.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_4.csv b/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_4.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_4.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,101 +0,0 @@
-3.025000000000000355e+00,4.575000000000000178e+00
--1.174999999999999822e+00,1.125000000000000222e+00
-5.275000000000000355e+00,1.575000000000000178e+00
--2.824999999999999734e+00,1.724999999999999867e+00
--4.325000000000000178e+00,5.250000000000000222e-01
-4.375000000000000000e+00,8.025000000000000355e+00
--1.024999999999999911e+00,1.462500000000000000e+01
-9.250000000000007105e-01,1.027500000000000036e+01
-4.749999999999996447e-01,1.312500000000000000e+01
-5.724999999999999645e+00,1.132499999999999929e+01
--5.750000000000001776e-01,1.432500000000000107e+01
-6.775000000000000355e+00,1.402500000000000036e+01
-3.325000000000001066e+00,7.575000000000000178e+00
-1.674999999999999822e+00,4.724999999999999645e+00
-5.125000000000000000e+00,3.750000000000000000e-01
--3.275000000000000355e+00,1.417500000000000071e+01
-8.725000000000001421e+00,7.424999999999999822e+00
-9.325000000000001066e+00,1.327500000000000036e+01
-7.524999999999998579e+00,7.125000000000000000e+00
-2.725000000000000533e+00,1.274999999999999911e+00
--1.325000000000000178e+00,1.297499999999999964e+01
-8.125000000000000000e+00,7.875000000000000000e+00
-7.375000000000001776e+00,1.357500000000000107e+01
-4.975000000000001421e+00,5.474999999999999645e+00
-2.875000000000000000e+00,1.875000000000000000e+00
--2.375000000000000000e+00,3.825000000000000178e+00
-7.674999999999998934e+00,1.492500000000000071e+01
-9.775000000000000355e+00,1.447499999999999964e+01
--1.924999999999999822e+00,2.625000000000000000e+00
-2.575000000000000178e+00,8.175000000000000711e+00
--4.249999999999998224e-01,2.325000000000000178e+00
-9.175000000000000711e+00,8.325000000000001066e+00
-9.474999999999999645e+00,1.387500000000000000e+01
-9.925000000000000711e+00,7.274999999999999467e+00
--3.725000000000000089e+00,1.342500000000000071e+01
-1.750000000000007105e-01,2.774999999999999911e+00
-2.125000000000000000e+00,2.925000000000000266e+00
-7.225000000000001421e+00,7.725000000000000533e+00
--4.025000000000000355e+00,8.249999999999999556e-01
-7.974999999999999645e+00,1.057500000000000107e+01
-8.875000000000000000e+00,3.674999999999999822e+00
-3.249999999999992895e-01,8.774999999999998579e+00
-8.575000000000001066e+00,1.207500000000000107e+01
--4.174999999999999822e+00,5.175000000000000711e+00
-6.925000000000000711e+00,1.252499999999999858e+01
--2.974999999999999645e+00,1.425000000000000044e+00
-4.224999999999999645e+00,5.775000000000000355e+00
-6.250000000000000000e-01,9.675000000000000711e+00
-4.675000000000000711e+00,8.924999999999998934e+00
-1.375000000000000000e+00,9.750000000000000888e-01
-5.875000000000000000e+00,9.525000000000000355e+00
-3.625000000000000000e+00,1.042500000000000071e+01
-7.824999999999999289e+00,4.125000000000000000e+00
-5.575000000000001066e+00,6.674999999999999822e+00
-9.025000000000000355e+00,9.975000000000001421e+00
--2.674999999999999822e+00,9.825000000000001066e+00
-3.475000000000001421e+00,9.375000000000000000e+00
--2.225000000000000089e+00,3.975000000000000089e+00
-3.924999999999998934e+00,6.375000000000000000e+00
-2.274999999999999467e+00,6.825000000000000178e+00
--8.750000000000000000e-01,1.072499999999999964e+01
-3.175000000000000711e+00,1.102500000000000036e+01
-1.525000000000000355e+00,2.175000000000000266e+00
--1.250000000000000000e-01,1.222500000000000142e+01
--4.775000000000000355e+00,5.925000000000000711e+00
-6.175000000000000711e+00,1.087500000000000000e+01
-6.625000000000000000e+00,4.875000000000000000e+00
-3.774999999999998579e+00,6.075000000000000178e+00
-4.525000000000000355e+00,6.225000000000000533e+00
-6.474999999999999645e+00,1.372500000000000142e+01
--3.575000000000000178e+00,6.749999999999999334e-01
-4.074999999999999289e+00,4.275000000000000355e+00
-4.825000000000001066e+00,7.499999999999999722e-02
--3.125000000000000000e+00,1.477500000000000036e+01
-9.625000000000000000e+00,4.424999999999999822e+00
--2.750000000000003553e-01,6.975000000000000533e+00
--3.424999999999999822e+00,3.375000000000000000e+00
--7.249999999999996447e-01,9.074999999999999289e+00
-7.075000000000001066e+00,1.267499999999999893e+01
--2.074999999999999734e+00,2.025000000000000355e+00
--1.774999999999999911e+00,8.475000000000001421e+00
-8.425000000000000711e+00,1.237500000000000178e+01
--4.924999999999999822e+00,3.524999999999999911e+00
-1.825000000000000178e+00,5.625000000000000000e+00
-7.750000000000003553e-01,2.249999999999999778e-01
--2.524999999999999911e+00,1.012500000000000000e+01
--4.474999999999999645e+00,8.625000000000000000e+00
-2.500000000000035527e-02,9.224999999999999645e+00
-1.075000000000000178e+00,1.147499999999999964e+01
-5.425000000000000711e+00,1.192500000000000071e+01
--1.475000000000000089e+00,5.324999999999999289e+00
-8.275000000000000355e+00,3.225000000000000089e+00
--1.625000000000000000e+00,6.525000000000000355e+00
-6.025000000000000355e+00,1.282499999999999929e+01
--4.625000000000000000e+00,5.025000000000000355e+00
-2.424999999999999822e+00,3.075000000000000178e+00
-1.975000000000000533e+00,1.117500000000000071e+01
-1.225000000000000533e+00,1.162500000000000000e+01
-6.324999999999999289e+00,2.475000000000000089e+00
--3.875000000000000000e+00,1.177500000000000036e+01
-2.656181130409240865e+00,1.346812498569488703e+00
Index: core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv b/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,28 +0,0 @@
--1.250000000000000000e+00,9.750000000000001776e+00
-1.750000000000000000e+00,6.750000000000000000e+00
-2.500000000000008882e-01,1.125000000000000000e+01
--4.250000000000000000e+00,7.500000000000000000e-01
-4.750000000000001776e+00,2.250000000000000444e+00
--2.749999999999999556e+00,3.750000000000000000e+00
-3.250000000000000000e+00,5.250000000000000888e+00
-7.750000000000001776e+00,8.250000000000000000e+00
-6.250000000000000000e+00,1.425000000000000000e+01
-9.250000000000000000e+00,1.275000000000000178e+01
--3.805172383643671274e+00,6.646955063546240439e+00
-5.844080333713625564e+00,3.323773744008924780e+00
-4.372943778038121287e+00,7.908721941811708289e-01
-5.124422110971712740e+00,0.000000000000000000e+00
-3.862663784370130138e+00,1.250727149550963091e+00
-3.212475956456649850e+00,1.165841245676490834e+00
-1.592574869832874107e+00,2.588432421907426173e-01
-2.969315575919393879e+00,5.767890838535270071e-01
-2.066299810572918894e+00,2.332529297431424453e+00
-3.006344074785669562e+00,3.183334719939675539e-01
-3.576175882065122380e-01,7.614718357106740054e-01
-4.758905706414910952e+00,4.752154475420369284e-01
-3.237766390508532766e+00,7.853215488042508685e-02
-3.262332800792180798e+00,5.738276949788184700e-02
-3.262332800792180798e+00,5.738276949788184700e-02
-7.750000000000001776e+00,8.250000000000000000e+00
-3.202465595869149695e+00,9.984189400899358413e-02
--2.749896866083144431e+00,3.750014483928680420e+00
Index: core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/X_None.csv b/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-1.750000000000000000e+00,1.275000000000000178e+01
-9.250000000000000000e+00,1.425000000000000000e+01
-4.750000000000001776e+00,1.125000000000000000e+01
-2.500000000000008882e-01,3.750000000000000000e+00
-3.250000000000000000e+00,5.250000000000000888e+00
--4.250000000000000000e+00,6.750000000000000000e+00
-6.250000000000000000e+00,8.250000000000000000e+00
--1.250000000000000000e+00,9.750000000000001776e+00
--2.749999999999999556e+00,7.500000000000000000e-01
-7.750000000000001776e+00,2.250000000000000444e+00
-1.629093993130394491e+00,4.225577842454352862e+00
-2.925983651247483053e+00,3.168996847337017364e+00
-3.320520383704691270e+00,1.055468593853045256e+00
Index: core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/X_None.csv b/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-2.250000000000000000e+00,3.750000000000000000e+00
-3.750000000000000000e+00,2.500000000000000000e-01
-2.750000000000000000e+00,2.750000000000000000e+00
-2.500000000000000000e-01,3.250000000000000888e+00
-1.750000000000000222e+00,1.250000000000000000e+00
-1.250000000000000000e+00,4.250000000000000000e+00
-4.250000000000000000e+00,2.250000000000000000e+00
-4.750000000000000000e+00,1.750000000000000222e+00
-7.500000000000001110e-01,4.750000000000000000e+00
-3.250000000000000888e+00,7.500000000000001110e-01
-1.114656884000639891e+00,3.979548681552230960e+00
-1.354421510842198195e+00,3.360310096595365614e+00
Index: core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/X_None.csv b/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,11 +0,0 @@
--1.250000000000000000e+00,8.250000000000000000e+00
-2.500000000000008882e-01,1.125000000000000000e+01
--4.250000000000000000e+00,5.250000000000000888e+00
-3.250000000000000000e+00,9.750000000000001776e+00
--2.749999999999999556e+00,3.750000000000000000e+00
-4.750000000000001776e+00,1.275000000000000178e+01
-7.750000000000001776e+00,2.250000000000000444e+00
-9.250000000000000000e+00,7.500000000000000000e-01
-6.250000000000000000e+00,6.750000000000000000e+00
-1.750000000000000000e+00,1.425000000000000000e+01
--4.699069736390908858e+00,3.216945426867244828e-01
Index: core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv b/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,15 +0,0 @@
-1.250000000000000000e+00,3.250000000000000888e+00
-2.250000000000000000e+00,2.250000000000000000e+00
-1.750000000000000222e+00,3.750000000000000000e+00
-2.500000000000000000e-01,2.500000000000000000e-01
-3.250000000000000888e+00,7.500000000000001110e-01
-7.500000000000001110e-01,1.250000000000000000e+00
-2.750000000000000000e+00,1.750000000000000222e+00
-4.250000000000000000e+00,2.750000000000000000e+00
-3.750000000000000000e+00,4.750000000000000000e+00
-4.750000000000000000e+00,4.250000000000000000e+00
-8.145878444631498017e-01,4.840562677983616169e+00
-5.000000000000000000e+00,2.246007380751783078e+00
-2.893046128465237565e+00,2.425259328664997938e+00
-1.660595558807020478e+00,3.990525141888492389e-01
-3.455014040768886185e-02,3.068899330068824760e+00
Index: core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_None.csv b/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-2.250000000000000000e+00,4.250000000000000000e+00
-4.750000000000000000e+00,4.750000000000000000e+00
-3.250000000000000888e+00,3.750000000000000000e+00
-1.750000000000000222e+00,1.250000000000000000e+00
-2.750000000000000000e+00,1.750000000000000222e+00
-2.500000000000000000e-01,2.250000000000000000e+00
-3.750000000000000000e+00,2.750000000000000000e+00
-1.250000000000000000e+00,3.250000000000000888e+00
-7.500000000000001110e-01,2.500000000000000000e-01
-4.250000000000000000e+00,7.500000000000001110e-01
-2.296231971605370070e+00,0.000000000000000000e+00
-0.000000000000000000e+00,4.428586950875917694e+00
Index: core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/X_None.csv b/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,30 +0,0 @@
-4.250000000000000000e+00,4.750000000000000000e+00
-2.500000000000000000e-01,3.250000000000000888e+00
-7.500000000000001110e-01,1.250000000000000000e+00
-2.750000000000000000e+00,7.500000000000001110e-01
-1.250000000000000000e+00,3.750000000000000000e+00
-4.750000000000000000e+00,2.250000000000000000e+00
-1.750000000000000222e+00,2.750000000000000000e+00
-3.750000000000000000e+00,4.250000000000000000e+00
-3.250000000000000888e+00,2.500000000000000000e-01
-2.250000000000000000e+00,1.750000000000000222e+00
-1.805723173895410927e+00,1.493629212925623173e-01
-2.159380586257305445e+00,3.683240815713040739e+00
-3.248926744413833667e+00,5.000000000000000000e+00
-0.000000000000000000e+00,4.539477230587268153e+00
-0.000000000000000000e+00,2.775259690222821263e+00
-5.000000000000000000e+00,2.943206926347741614e+00
-0.000000000000000000e+00,3.238281250000000000e+00
-0.000000000000000000e+00,3.480266189575271341e+00
-2.661909312246084180e+00,2.485987230641645063e+00
-3.161586265441266086e+00,2.151004812618582118e+00
-2.976755831339906067e+00,2.722609544454667851e+00
-2.614620226888954235e+00,2.096189290457364240e+00
-2.745930508559499827e+00,2.399003068230046942e+00
-1.220082504214473063e-03,5.000000000000000000e+00
-2.690047581762191165e+00,2.337201339194538541e+00
-2.731584225632182505e+00,2.330408984749735346e+00
-0.000000000000000000e+00,4.595030672443288777e-01
-5.000000000000000000e+00,9.091419100784193796e-01
-2.932311563900364959e+00,2.328074056830915062e+00
-3.079756419501577636e+00,2.381294233710764541e+00
Index: core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/X_None.csv b/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,18 +0,0 @@
-2.250000000000000000e+00,4.250000000000000000e+00
-4.750000000000000000e+00,4.750000000000000000e+00
-3.250000000000000888e+00,3.750000000000000000e+00
-1.750000000000000222e+00,1.250000000000000000e+00
-2.750000000000000000e+00,1.750000000000000222e+00
-2.500000000000000000e-01,2.250000000000000000e+00
-3.750000000000000000e+00,2.750000000000000000e+00
-1.250000000000000000e+00,3.250000000000000888e+00
-7.500000000000001110e-01,2.500000000000000000e-01
-4.250000000000000000e+00,7.500000000000001110e-01
-0.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,5.000000000000000000e+00
-2.564966978474340742e+00,9.691775713751472898e-02
-1.005090758089385305e-01,3.950660308159836376e+00
-2.866595735587153637e+00,2.340522832532266673e+00
-2.827313072586608911e+00,1.660066559761974592e+00
-5.000000000000000000e+00,2.154125307094832742e+00
-2.944115661666778294e+00,2.574453176735813642e+00
Index: core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv b/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,13 +0,0 @@
-2.250000000000000000e+00,4.250000000000000000e+00
-4.750000000000000000e+00,4.750000000000000000e+00
-3.250000000000000888e+00,3.750000000000000000e+00
-1.750000000000000222e+00,1.250000000000000000e+00
-2.750000000000000000e+00,1.750000000000000222e+00
-2.500000000000000000e-01,2.250000000000000000e+00
-3.750000000000000000e+00,2.750000000000000000e+00
-1.250000000000000000e+00,3.250000000000000888e+00
-7.500000000000001110e-01,2.500000000000000000e-01
-4.250000000000000000e+00,7.500000000000001110e-01
-0.000000000000000000e+00,5.000000000000000000e+00
-2.380238377277724027e+00,2.223121022072170216e+00
-3.139745686762042354e+00,2.494983460191113611e+00
Index: core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/X_None.csv b/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,16 +0,0 @@
-1.750000000000000000e+00,1.425000000000000000e+01
-6.250000000000000000e+00,2.250000000000000444e+00
-4.750000000000001776e+00,8.250000000000000000e+00
-9.250000000000000000e+00,5.250000000000000888e+00
--4.250000000000000000e+00,6.750000000000000000e+00
--2.749999999999999556e+00,1.125000000000000000e+01
-7.750000000000001776e+00,7.500000000000000000e-01
-2.500000000000008882e-01,9.750000000000001776e+00
--1.250000000000000000e+00,1.275000000000000178e+01
-3.250000000000000000e+00,3.750000000000000000e+00
--3.706249999999999822e+00,4.571249999999999147e+00
-3.062500000000003553e-01,3.476250000000000284e+00
-1.566249999999999254e+00,2.013749999999999929e+00
-2.803749999999999964e+00,1.151249999999999885e+00
-3.111250000000001847e+00,7.125000000000000777e-02
-3.441250000000001918e+00,1.537499999999999978e-01
Index: core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/X_None.csv b/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-1.500000000000000222e-01,5.500000000000000444e-01
-3.500000000000000333e-01,3.500000000000000333e-01
-4.500000000000000111e-01,9.499999999999999556e-01
-9.499999999999999556e-01,8.500000000000000888e-01
-7.500000000000000000e-01,7.500000000000000000e-01
-6.500000000000001332e-01,4.500000000000000111e-01
-5.500000000000000444e-01,6.500000000000001332e-01
-5.000000000000000278e-02,2.500000000000000000e-01
-2.500000000000000000e-01,5.000000000000000278e-02
-8.500000000000000888e-01,1.500000000000000222e-01
-5.857499999999999929e-01,2.882500000000000062e-01
-5.407500000000000639e-01,1.237499999999999989e-01
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/X_None.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,12 +0,0 @@
-4.500000000000000111e-01,8.500000000000000888e-01
-9.499999999999999556e-01,9.499999999999999556e-01
-6.500000000000001332e-01,7.500000000000000000e-01
-3.500000000000000333e-01,2.500000000000000000e-01
-5.500000000000000444e-01,3.500000000000000333e-01
-5.000000000000000278e-02,4.500000000000000111e-01
-7.500000000000000000e-01,5.500000000000000444e-01
-2.500000000000000000e-01,6.500000000000001332e-01
-1.500000000000000222e-01,5.000000000000000278e-02
-8.500000000000000888e-01,1.500000000000000222e-01
-2.122391170885922773e-01,8.234035535893271529e-01
-2.124312260280171172e-01,8.223050440262780203e-01
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,16 +0,0 @@
-4.500000000000000111e-01,8.500000000000000888e-01
-9.499999999999999556e-01,9.499999999999999556e-01
-6.500000000000001332e-01,7.500000000000000000e-01
-3.500000000000000333e-01,2.500000000000000000e-01
-5.500000000000000444e-01,3.500000000000000333e-01
-5.000000000000000278e-02,4.500000000000000111e-01
-7.500000000000000000e-01,5.500000000000000444e-01
-2.500000000000000000e-01,6.500000000000001332e-01
-1.500000000000000222e-01,5.000000000000000278e-02
-8.500000000000000888e-01,1.500000000000000222e-01
-5.370883674429528520e-01,0.000000000000000000e+00
-4.535351112519265260e-01,0.000000000000000000e+00
-5.857496582704799781e-01,3.808608309957950411e-01
-5.214316576637778589e-01,4.219159517592962483e-01
-5.607596400100737233e-01,3.189329461939633958e-01
-5.892852160354529190e-01,3.087718136705320804e-01
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/X_None.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,16 +0,0 @@
-4.500000000000000111e-01,8.500000000000000888e-01
-9.499999999999999556e-01,9.499999999999999556e-01
-6.500000000000001332e-01,7.500000000000000000e-01
-3.500000000000000333e-01,2.500000000000000000e-01
-5.500000000000000444e-01,3.500000000000000333e-01
-5.000000000000000278e-02,4.500000000000000111e-01
-7.500000000000000000e-01,5.500000000000000444e-01
-2.500000000000000000e-01,6.500000000000001332e-01
-1.500000000000000222e-01,5.000000000000000278e-02
-8.500000000000000888e-01,1.500000000000000222e-01
-3.856920446493062316e-01,1.129159892002699339e-01
-0.000000000000000000e+00,1.000000000000000000e+00
-3.973275481754499072e-01,9.812993274717803083e-02
-0.000000000000000000e+00,4.274989030649076205e-02
-0.000000000000000000e+00,0.000000000000000000e+00
-0.000000000000000000e+00,1.901188525552605091e-01
Index: core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/X_None.csv b/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,11 +0,0 @@
-4.500000000000000111e-01,8.500000000000000888e-01
-9.499999999999999556e-01,9.499999999999999556e-01
-6.500000000000001332e-01,7.500000000000000000e-01
-3.500000000000000333e-01,2.500000000000000000e-01
-5.500000000000000444e-01,3.500000000000000333e-01
-5.000000000000000278e-02,4.500000000000000111e-01
-7.500000000000000000e-01,5.500000000000000444e-01
-2.500000000000000000e-01,6.500000000000001332e-01
-1.500000000000000222e-01,5.000000000000000278e-02
-8.500000000000000888e-01,1.500000000000000222e-01
-0.000000000000000000e+00,1.000000000000000000e+00
Index: core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
===================================================================
diff --git a/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/X_None.csv b/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/X_None.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,11 +0,0 @@
-4.500000000000000111e-01,8.500000000000000888e-01
-9.499999999999999556e-01,9.499999999999999556e-01
-6.500000000000001332e-01,7.500000000000000000e-01
-3.500000000000000333e-01,2.500000000000000000e-01
-5.500000000000000444e-01,3.500000000000000333e-01
-5.000000000000000278e-02,4.500000000000000111e-01
-7.500000000000000000e-01,5.500000000000000444e-01
-2.500000000000000000e-01,6.500000000000001332e-01
-1.500000000000000222e-01,5.000000000000000278e-02
-8.500000000000000888e-01,1.500000000000000222e-01
-4.914754669475960291e-01,1.000000000000000000e+00
Index: core/acquisition/RESULTS/exploratory_NN_YC/YC.csv
===================================================================
diff --git a/core/acquisition/RESULTS/exploratory_NN_YC/YC.csv b/core/acquisition/RESULTS/exploratory_NN_YC/YC.csv
deleted file mode 100644
--- a/core/acquisition/RESULTS/exploratory_NN_YC/YC.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ /dev/null	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
@@ -1,101 +0,0 @@
-,Y,C
-0,0.9599999785423279,-3.7703403428597864
-1,0.9757999777793884,-2.711979646557514
-2,0.961899995803833,-3.571717728916823
-3,0.9659000039100647,-4.3300357992008625
-4,0.9753000140190125,-1.6999096861448564
-5,0.9764999747276306,-2.739480299898577
-6,0.9617000222206116,-4.282239022400207
-7,0.902999997138977,-2.944170942009639
-8,0.9736999869346619,-3.522005321976892
-9,0.9362999796867371,-4.412287576210321
-10,0.9620000123977661,-2.04180916839225
-11,0.7961000204086304,-3.698699431906427
-12,0.9520000219345093,-2.389689292811867
-13,0.958299994468689,-4.4920885669071815
-14,0.9168000221252441,-1.6779694950334003
-15,0.9537000060081482,-2.1958839379656463
-16,0.9735999703407288,-0.9628539198013372
-17,0.9298999905586243,-1.371714514289491
-18,0.9430999755859375,-3.018531447630343
-19,0.9747999906539917,-2.733491444168708
-20,0.9718000292778015,-2.9684465198039165
-21,0.9503999948501587,-3.4995741851188606
-22,0.9769999980926514,-2.7211170093978017
-23,0.9243999719619751,-3.6294805048587144
-24,0.6337000131607056,-4.678539956640669
-25,0.9695000052452087,-2.453425625859122
-26,0.9713000059127808,-1.9922531815784303
-27,0.9375,-4.242775328659263
-28,0.9498000144958496,-4.175907986412997
-29,0.9696000218391418,-3.2101833621015747
-30,0.9764999747276306,-1.768002616225055
-31,0.9757000207901001,-2.8192043896252637
-32,0.9315999746322632,-3.6948485429350875
-33,0.9434999823570251,-4.074272389966575
-34,0.9632999897003174,-1.2548848940626265
-35,0.9746000170707703,0.019103021463714908
-36,0.9715999960899353,-0.8608538659130407
-37,0.933899998664856,-4.2684806033636855
-38,0.9732000231742859,-1.0067783480813692
-39,0.8894000053405762,-2.354087238768129
-40,0.9771999716758728,-1.3563262293551768
-41,0.9697999954223633,-3.0878467907387988
-42,0.9480999708175659,-3.6671784991552037
-43,0.9580000042915344,-2.5834772516444477
-44,0.7602999806404114,-4.816227779683116
-45,0.9767000079154968,-1.566365583165096
-46,0.965399980545044,-1.8272876030628777
-47,0.9679999947547913,-0.9177814996801288
-48,0.97079998254776,-1.9002911269036407
-49,0.7825000286102295,-4.68932038890798
-50,0.972000002861023,-1.8906732291476673
-51,0.9348000288009644,-4.108467943907541
-52,0.9771999716758728,-0.8951286010223215
-53,0.9628000259399414,-1.7934003191189165
-54,0.9768000245094299,-1.4680684453457136
-55,0.9757999777793884,-1.3665181565612017
-56,0.9700000286102295,-1.8831428269210226
-57,0.9729999899864197,-2.052129562869354
-58,0.9556000232696533,0.08835429873646203
-59,0.9452999830245972,-2.429564862343033
-60,0.9628999829292297,-2.035439823906452
-61,0.967199981212616,0.17059561333073267
-62,0.9768999814987183,-0.5702146995760247
-63,0.9462000131607056,-2.99628889740393
-64,0.9513000249862671,-3.145859012711161
-65,0.9611999988555908,-3.227574942060154
-66,0.9315999746322632,-3.5203188557577043
-67,0.970300018787384,-1.8128197026990895
-68,0.9642999768257141,-1.6463465422125199
-69,0.9711999893188477,-0.6025448288538503
-70,0.9377999901771545,-2.039872156298119
-71,0.9771000146865845,-1.7219441497130454
-72,0.8986999988555908,-4.6372307536666435
-73,0.9764000177383423,-2.330687198783402
-74,0.9513999819755554,-2.249497134602479
-75,0.9685999751091003,-2.970014544738075
-76,0.9692999720573425,-1.9187691512678555
-77,0.9495000243186951,-2.0111221884796646
-78,0.9157000184059143,-3.543380688988776
-79,0.9710999727249146,-3.0745299440330722
-80,0.9415000081062317,-0.8961504264870016
-81,0.9675999879837036,-2.449343548761692
-82,0.9772999882698059,-1.8440793184237294
-83,0.954800009727478,-2.289207965158838
-84,0.9546999931335449,-4.145221037234493
-85,0.9646999835968018,-2.2901138779221912
-86,0.9764000177383423,-2.1172415223031664
-87,0.9269000291824341,-3.011372565382335
-88,0.6198999881744385,-4.094830863613962
-89,0.9710000157356262,-2.61785468380809
-90,0.9772999882698059,-1.2597791576640063
-91,0.953499972820282,-1.7507020211669535
-92,0.9745000004768372,-1.455150886910971
-93,0.9449999928474426,-4.0292779790729805
-94,0.7056999802589417,-2.2030196898252745
-95,0.9747999906539917,-0.46023551022124
-96,0.8159999847412109,-2.5988104256598206
-97,0.9779000282287598,-2.422628812980739
-98,0.9776999950408936,-1.3293413903594993
-99,0.9491999745368958,-4.258554382571169
Index: core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tensorflow as tf\nimport tensorflow.keras as keras\nfrom tensorflow.keras.datasets import mnist\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom sklearn.model_selection import train_test_split\nimport time\nimport numpy as np\nimport os\nfrom itertools import product\n# import matplotlib.pyplot as plt\nfrom scipy.stats import norm\nimport pathlib\n#\ncheckpoint_dir = pathlib.Path(__file__).parent.absolute()\ncheckpoint_dir = str(checkpoint_dir) + \"/checkpoints/\"\n\nclass FC_NN_test_function():\n    '''\n    Six hump camel function\n\n    :param bounds: the box constraints to define the domain in which the function is optimized.\n    :param sd: standard deviation, to generate noisy evaluations of the function.\n    '''\n\n    def __init__(self, max_time=0.003, seed=0, output_scaling=None):\n        self.batch_size = 250\n        self.rho = 0.9\n        self.seed=seed\n        self.epsilon = 1e-07\n        self.epochs = 5\n        self.samples = 1000\n        self.num_classes = 10\n        self.max_time = max_time\n        self.output_scaling = output_scaling\n        try:\n            path = checkpoint_dir + \"avg_time.txt\"\n            self.time_data = np.genfromtxt(path)\n        except:\n            print(\"warning: no time file found. Computing with current time estimates\")\n            self.time_data = None\n\n        self.checkpoints = {\"x\":[], \"model\":[]}\n        (self.master_x_train, self.master_y_train), (self.master_x_test, self.master_y_test) = mnist.load_data()\n\n    def encode_input(self, x, discrete):\n        encode = \"_\"\n        for i in range(len(x)):\n            if np.isin(i, discrete):\n                encode = encode + str(int(x[i])) + \"_\"\n            else:\n                val = '%.5f' % (x[i])\n                encode = encode + str(val) + \"_\"\n        return encode\n\n    def check_available_models(self, x):\n        files = self.checkpoints[\"x\"]\n        available = False\n        if len(files)==0:\n            return available, None\n\n        for f in range(len(files)):\n            if np.all(x.reshape(-1)==files[f].reshape(-1)):\n                model = self.checkpoints[\"model\"][f]\n                available=True\n                return available, model\n        return available, None\n\n    def cube_to_hypers(self,x):\n        # the GP is over the unit cube [0, 1]^7,\n        # dropout rates are same [0, 1]^3\n        # other hypers vary on exponential scales\n\n        # learning rate [0, 1] -> [0.0001, 0.01], exponentially\n        # batch_size [0, 1] -> [16, 256], exponentially\n        # beta_2 [0, 1] -> [0.7, 0.99], exponentially\n        # beta_2 [0, 1] -> [0.9, 0.999], exponentially\n        hypers = x.copy()\n        hypers[0] = 0.0001 * np.exp(x[0] * np.log(100)) #learning rate\n        hypers[1] = 0.8 * x[1] #drop out\n        hypers[2] = 0.8 * x[2] #drop out\n        hypers[3] = 0.8 * x[3]  # drop out\n        hypers[4] = x[4]#number of neu #1 - 0.01 * np.exp((1 - x[4]) * np.log(30))\n        hypers[5] = x[5]#number of neur #1 - 0.0001 * np.exp((1 - x[5]) * np.log(100))\n        hypers[6] = x[6]  # number of neur #1 - 0.0001 * np.exp((1 - x[5]) * np.log(100))\n        hypers[7] = 1 - 0.01 * np.exp((1-x[7]) * np.log(30)) #beta1\n        hypers[8] = 1 - 0.0001 * np.exp((1-x[8]) * np.log(100)) #beta2\n        return hypers\n\n    @staticmethod\n    def hypers_to_cube(self, hypers):\n        # the GP is over the unit cube [0, 1]^7,\n        # dropout rates are same [0, 1]^3\n        # other hypers vary on exponential scales\n        x = np.copy(hypers)\n        x[0] = 1.25 * hypers[0]\n        x[1] = 1.25 * hypers[1]\n        x[2] = 1.25 * hypers[2]\n        x[3] = np.log(hypers[3] * 10000.0) / np.log(100.0)\n        x[4] = 1 - np.log((1 - hypers[4]) * 100.0) / np.log(30.0)\n        x[5] = 1 - np.log((1 - hypers[5]) * 10000.0) / np.log(100.0)\n        x[6] = np.log(hypers[6] / 16.0) / np.log(16)\n        return x\n\n    def _save_times(self, seed=0):\n\n\n        perm = product(range(3, 11), repeat=3)\n        X = np.array(list(perm))\n\n        samples =1000\n        average_time = np.zeros(samples)\n        X_mean_average = np.zeros((X.shape[0], 4))\n        for index in range(X.shape[0]):\n            x = X[index]\n            model = self.model_compile(x)\n            for i in range(samples):\n                start = time.time()\n                model(self.master_x_test.reshape(10000, 784), training=False)\n                stop = time.time()\n                average_time[i] = stop - start\n\n            print(\"x\", x, \"cval\", np.log(np.mean(average_time)))\n            X_mean_average[index, :3] = x\n            X_mean_average[index, -1] = np.mean(average_time)\n\n            if os.path.isdir(checkpoint_dir ) == False:\n                os.makedirs(checkpoint_dir)\n            np.savetxt(fname=checkpoint_dir+\"/\"+\"times_\"+str(seed)+\".txt\", X=X_mean_average)\n\n\n    def model_compile(self, neur):\n\n        if len(neur.shape) == 1:\n            neur = np.array(neur).reshape(1, -1)\n        x = np.copy(neur)\n\n        assert len(x.reshape(-1))==3 ;\"wrong size for layers\"\n        model = Sequential()\n        model.add(Dense(int(np.power(2, x[:, 0][0])), activation='relu', input_shape=(784,)))\n        model.add(Dense(int(np.power(2, x[:, 1][0])), activation='relu'))\n        model.add(Dense(int(np.power(2, x[:, 2][0])), activation='relu'))\n        model.add(Dense(self.num_classes, activation='softmax'))\n\n        # Part 3: Make optimizer\n        # print(\"hypers\", learning_rate,beta_1,beta_2)\n        adam = keras.optimizers.Adam(\n            learning_rate=1e-04,\n            beta_1=0.99,\n            beta_2=0.999\n        )\n\n        # Part 4: compile\n        model.compile(loss='categorical_crossentropy',\n                      optimizer=adam,\n                      metrics=['accuracy'])\n\n        return model\n\n    def f(self, X, true_val = False, verbose=0):\n        \"\"\"\n        Load Mnist data, creates a nueral network, create an\n        optimizer, put all three together and train. Finally\n        perform test and return test error.\n        \"\"\"\n\n        batch_size = self.batch_size\n        #self.learning_rate\n        rho = self.rho\n        epsilon = self.epsilon\n        epochs = self.epochs\n        num_classes = self.num_classes\n\n        if len(X.shape) == 1:\n            X = np.array(X).reshape(1, -1)\n\n        validation_score = np.zeros((X.shape[0], 1))\n\n        # print(\"self.master_x_train\",self.master_x_train.shape)\n        # print(\"self.master_y_train\",self.master_x_test.shape)\n\n        x_concat = np.concatenate((self.master_x_train, self.master_x_test))\n        y_concat = np.concatenate((self.master_y_train, self.master_y_test))\n\n        for index in range(X.shape[0]):\n\n            if true_val:\n                num_replications = 10\n            else:\n                num_replications = 1\n\n            for _ in range(num_replications):\n                train_size = 6.0 / 7\n                self.x_train, self.x_test, self.y_train, self.y_test = train_test_split(x_concat, y_concat,\n                                                                                        train_size=train_size)\n\n                print(\"index\", index, X.shape[0])\n                x_val_stand = X[index]\n\n                x = self.cube_to_hypers(x_val_stand)\n\n                available, model = self.check_available_models(x)\n                x = x.reshape(1, -1)\n\n                learning_rate = x[:, 0][0]\n                beta_1 = x[:, 7][0]\n                beta_2 = x[:, 8][0]\n                out_val = []\n                # Part 1: get the dataset\n\n                x_train = self.x_train.reshape(60000, 784)\n                x_test = self.x_test.reshape(10000, 784)\n                self.x_test = x_test\n                x_train = x_train.astype('float32')\n                x_test = x_test.astype('float32')\n\n                x_train /= 255\n                x_test /= 255\n                y_train = keras.utils.to_categorical(self.y_train, num_classes)\n                y_test = keras.utils.to_categorical(self.y_test, num_classes)\n\n                if available:\n                    print(\"available model: \",available)\n                    self.model = model\n                else:\n                    print(\"available model: \", available)\n\n                    # Part 2: Make model\n\n                    model = Sequential()\n                    model.add(Dense(int(np.power(2, x[:, 4][0])), activation='relu', input_shape=(784,)))\n                    model.add(Dropout(x[:, 1][0]))\n                    model.add(Dense(int(np.power(2, x[:, 5][0])), activation='relu'))\n                    model.add(Dropout(x[:, 2][0]))\n                    model.add(Dense(int(np.power(2, x[:, 6][0])), activation='relu'))\n                    model.add(Dropout(x[:, 3][0]))\n                    model.add(Dense(num_classes, activation='softmax'))\n                    if verbose == 1: model.summary()\n\n                    # Part 3: Make optimizer\n                    # print(\"hypers\", learning_rate,beta_1,beta_2)\n                    adam = keras.optimizers.Adam(\n                        learning_rate=learning_rate,\n                        beta_1=beta_1,\n                        beta_2=beta_2\n                    )\n\n                    # Part 4: compile\n                    model.compile(loss='categorical_crossentropy',\n                                  optimizer=adam,\n                                  metrics=['accuracy'])\n\n                    # Part 5: train\n                    history = model.fit(x_train, y_train,\n                                        batch_size=batch_size,\n                                        epochs=self.epochs,\n                                        verbose=verbose,\n                                        validation_data=(x_test, y_test))\n\n                    self.checkpoints[\"x\"].append(x.reshape(-1))\n                    self.checkpoints[\"model\"].append(model)\n                    self.model = model\n\n                    # plt.plot(history.history['accuracy'])\n                    # plt.plot(history.history['val_accuracy'])\n                    # plt.title('model loss')\n                    # plt.ylabel('loss')\n                    # plt.xlabel('epoch')\n                    # plt.legend(['train', 'test'], loc='upper left')\n                    # plt.show()\n                # Part 6: get test measurements\n                score = model.evaluate(x_test, y_test, verbose=0)\n                if true_val:\n                    transf_score = self._output_scaler(score[1], type=None)\n                else:\n                    transf_score = self._output_scaler(score[1], type=self.output_scaling)\n                out_val.append(transf_score)\n                print(\"x\", x, \"fval\", np.mean(out_val))\n\n            validation_score[index, 0] = np.mean(out_val)\n\n        return validation_score  # test classification error\n    def _output_scaler(self, x, type=None):\n        print(\"output scaling type:\", type)\n        if type is None:\n            return x\n        elif type==\"inv norm cdf\":\n\n            return norm.ppf(x)\n\n    def c(self, X, true_val=True, verbose=0):\n\n        if len(X.shape) == 1:\n            X = np.array(X).reshape(1, -1)\n\n\n        X_mean_average = np.zeros((X.shape[0], 1))\n\n        for index in range(X.shape[0]):\n            x = X[index]\n            if self.time_data is not None:\n                idx = np.all(self.time_data[:,:3]==np.round(x[4:7]), axis=1)\n                if np.sum(idx)==0:\n                    avg_time = self.time_data[-1, -1]\n                else:\n                    avg_time = self.time_data[idx, -1]\n                X_mean_average[index, 0] = avg_time\n\n            else:\n                start = time.time()\n                available, model = self.check_available_models(x)\n                if available:\n                    self.model =model\n                else:\n                    self.f(x)\n                stop = time.time()\n                # print(\"training time\", stop-start)\n                if verbose == 1: self.model.summary()\n                samples = self.samples\n                average_time = np.zeros(samples)\n\n                for i in range(samples):\n                    start = time.time()\n                    self.model(self.x_test, training=False) #.predict(x_test.astype('float32'))#\n                    stop = time.time()\n                    average_time[i] = stop - start\n\n                print(\"x\", x, \"cval\", np.log(np.mean(average_time))-np.log(self.max_time))\n                # print(\"std\", np.std(average_time))\n                # print(\"mse\", np.std(average_time) / np.sqrt(len(average_time)))\n                X_mean_average[index, 0] = np.mean(average_time)\n\n        return np.log(X_mean_average) - np.log(self.max_time)\n\n# import tensorflow as tf\n# #ALWAYS check cost in\n# # --- Function to optimize\n# print(\"NN TS activate\")\n# print(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))\n#\n# objective_function = FC_NN_test_function()\n# print(\"Verbose execution\")\n#\n# x = np.array([[0.1, 0.5, 0.5, 0.5, 5, 5, 5],\n#               [0.1, 0.5, 0.5, 0.5, 7, 7, 7],\n#               [0.1, 0.5, 0.5, 0.5, 9, 9, 9]])\n#\n# start = time.time()\n# cval = objective_function.c(x)\n\n#test_error = objective_function.f(X = np.array([[0.2,0.2,3,3]]), verbose=1)\n                                                               \n# print(\"FINISHED\")\n                                          \n# test_error = objective_function.c(X = np.array([[0.0,0.0,13,13]]), true_val=True, verbose=0)\n\n# print(\"Test error:\", test_error)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py b/core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py
--- a/core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py	(date 1642015388945)
@@ -282,11 +282,11 @@
         return validation_score  # test classification error
     def _output_scaler(self, x, type=None):
         print("output scaling type:", type)
-        if type is None:
-            return x
-        elif type=="inv norm cdf":
-
-            return norm.ppf(x)
+        # if type is None:
+        return x
+        # elif type=="inv norm cdf":
+        #
+        #     return norm.ppf(x)
 
     def c(self, X, true_val=True, verbose=0):
 
Index: KG plots.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import numpy as np\\n\",\n    \"import matplotlib.pyplot as plt\\n\",\n    \"import scipy\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"[[97.0200688 ]\\n\",\n      \" [69.52875623]\\n\",\n      \" [48.18704536]\\n\",\n      \" [63.38946701]\\n\",\n      \" [65.8882988 ]\\n\",\n      \" [29.12812929]\\n\",\n      \" [ 7.77809364]\\n\",\n      \" [78.39163273]\\n\",\n      \" [41.86292971]\\n\",\n      \" [29.96000363]] [[ 1.54374658]\\n\",\n      \" [ 0.74614551]\\n\",\n      \" [-0.265392  ]\\n\",\n      \" [ 0.80383176]\\n\",\n      \" [ 0.80501626]\\n\",\n      \" [ 0.53754161]\\n\",\n      \" [ 2.71045136]\\n\",\n      \" [ 0.62218487]\\n\",\n      \" [ 1.11368932]\\n\",\n      \" [-0.60990655]]\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"def test_f(X):\\n\",\n    \"    return np.sin(X)+ np.sin(10*X/3)+1\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"X = np.random.random((10,1))*100\\n\",\n    \"Y = test_f(X)\\n\",\n    \"\\n\",\n    \"print(X,Y)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"class continuous_kg():\\n\",\n    \"    \\n\",\n    \"    def __init__(self, model, space, optimizer):\\n\",\n    \"        self.model = model\\n\",\n    \"        self.space = space\\n\",\n    \"        self.optimizer = optimizer\\n\",\n    \"    def _compute_acq(self, X ):\\n\",\n    \"        \\\"\\\"\\\"\\n\",\n    \"        Computes the aquisition function\\n\",\n    \"        \\n\",\n    \"        :param X: set of points at which the acquisition function is evaluated. Should be a 2d array.\\n\",\n    \"        \\\"\\\"\\\"\\n\",\n    \"        # print(\\\"_compute_acq\\\")\\n\",\n    \"        self.update_current_best()\\n\",\n    \"        X =np.atleast_2d(X)\\n\",\n    \"\\n\",\n    \"        marginal_acqX = self._unconstrained_marginal_acq(X)\\n\",\n    \"        KG = np.reshape(marginal_acqX, (X.shape[0],1))\\n\",\n    \"\\n\",\n    \"        return KG\\n\",\n    \"    \\n\",\n    \"    \\n\",\n    \"    def _unconstrained_marginal_acq(self, X):\\n\",\n    \"\\n\",\n    \"        varX_obj = self.model.posterior_variance(X, noise=True)\\n\",\n    \"\\n\",\n    \"        acqX = np.zeros((X.shape[0], 1))\\n\",\n    \"\\n\",\n    \"        for i in range(0, len(X)):\\n\",\n    \"            x = np.atleast_2d(X[i])\\n\",\n    \"\\n\",\n    \"            #For each x new precompute covariance matrices for\\n\",\n    \"            self.model.partial_precomputation_for_covariance(x)\\n\",\n    \"            self.model.partial_precomputation_for_covariance_gradient(x)\\n\",\n    \"\\n\",\n    \"            aux_obj = np.reciprocal(varX_obj[:, i])\\n\",\n    \"            #Create discretisation for discrete KG.\\n\",\n    \"            if self.fixed_discretisation is False:\\n\",\n    \"                if self.optimise_discretisation:\\n\",\n    \"                    self.X_Discretisation = self._unconstrained_discretisation_X(index=i, X=X, aux_obj =aux_obj )\\n\",\n    \"                    # print(\\\"updated discretisation\\\")\\n\",\n    \"                    # print(\\\"quantiles\\\", quantiles)\\n\",\n    \"                    self.optimise_discretisation = False\\n\",\n    \"            # print(\\\"X discretisation\\\", self.X_Discretisation)\\n\",\n    \"\\n\",\n    \"            kg_val = self.unconstrained_discrete_KG(Xd = self.X_Discretisation ,\\n\",\n    \"                                      xnew = x,\\n\",\n    \"                                      Zc=self.Z_cdKG,\\n\",\n    \"                                      aux_obj =aux_obj)\\n\",\n    \"            acqX[i,:] = kg_val\\n\",\n    \"\\n\",\n    \"        return acqX.reshape(-1)\\n\",\n    \"\\n\",\n    \"    def unconstrained_discrete_KG(self, Xd, xnew, Zc, aux_obj, grad=False, verbose=False):\\n\",\n    \"        xnew = np.atleast_2d(xnew)\\n\",\n    \"        # Xd = np.concatenate((Xd, self.fixed_discretisation_values))\\n\",\n    \"        Xd = np.concatenate((Xd, xnew))\\n\",\n    \"        Xd = np.concatenate((Xd, self.current_max_xopt))\\n\",\n    \"        self.grad = grad\\n\",\n    \"        out = []\\n\",\n    \"\\n\",\n    \"        MM = self.model.predict(Xd)[0].reshape(-1)  # move up\\n\",\n    \"        SS_Xd = np.array(self.model.posterior_covariance_between_points_partially_precomputed(Xd, xnew)[:, :, :]).reshape(-1)\\n\",\n    \"        inv_sd = np.asarray(np.sqrt(aux_obj)).reshape(())\\n\",\n    \"\\n\",\n    \"        SS = SS_Xd * inv_sd\\n\",\n    \"        MM = MM.reshape(-1)\\n\",\n    \"        SS = SS.reshape(-1)\\n\",\n    \"\\n\",\n    \"        marginal_KG = []\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"        KG = self._unconstrained_parallel_KG(MM=MM,SS=SS,verbose=verbose)\\n\",\n    \"\\n\",\n    \"        KG = np.clip(KG, 0, np.inf)\\n\",\n    \"        marginal_KG.append(KG)\\n\",\n    \"        out.append(marginal_KG)\\n\",\n    \"\\n\",\n    \"        KG_value = np.mean(out)\\n\",\n    \"        # gradKG_value = np.mean(gradout, axis=?)\\n\",\n    \"        assert ~np.isnan(KG_value);\\n\",\n    \"        \\\"KG cant be nan\\\"\\n\",\n    \"        return KG_value#, gradKG_value\\n\",\n    \"\\n\",\n    \"    def _unconstrained_parallel_KG(self, MM, SS, Xd=None,verbose=False):\\n\",\n    \"        \\\"\\\"\\\"\\n\",\n    \"        Calculates the linear epigraph, i.e. the boundary of the set of points\\n\",\n    \"        in 2D lying above a collection of straight lines y=a+bx.\\n\",\n    \"        Parameters\\n\",\n    \"        ----------\\n\",\n    \"        a\\n\",\n    \"            Vector of intercepts describing a set of straight lines\\n\",\n    \"        b\\n\",\n    \"            Vector of slopes describing a set of straight lines\\n\",\n    \"        tol\\n\",\n    \"            Minimum slope (in absolute value) different from zero\\n\",\n    \"        Returns\\n\",\n    \"        -------\\n\",\n    \"        KGCB\\n\",\n    \"            average hieght of the epigraph\\n\",\n    \"        grad_a\\n\",\n    \"            dKGCB/db, vector\\n\",\n    \"        grad_b\\n\",\n    \"            dKGCB/db, vector\\n\",\n    \"        \\\"\\\"\\\"\\n\",\n    \"        a = MM #np.array(self.c_MM[:, index]).reshape(-1)\\n\",\n    \"        b = SS #np.array(self.c_SS[:, index]).reshape(-1)\\n\",\n    \"\\n\",\n    \"        assert len(b) > 0, \\\"must provide slopes\\\"\\n\",\n    \"        assert len(a) == len(b), f\\\"#intercepts != #slopes, {len(a)}, {len(b)}\\\"\\n\",\n    \"        # ensure 1D\\n\",\n    \"        a = np.array(a).reshape(-1)\\n\",\n    \"        b = np.array(b).reshape(-1)\\n\",\n    \"        assert len(a) > 0, \\\"must provide slopes\\\"\\n\",\n    \"        assert len(a) == len(b), f\\\"#intercepts != #slopes, {len(a)}, {len(b)}\\\"\\n\",\n    \"\\n\",\n    \"        # ensure 1D\\n\",\n    \"        a = np.atleast_1d(a.squeeze())\\n\",\n    \"        b = np.atleast_1d(b.squeeze()) #- np.mean(b)\\n\",\n    \"        max_a_index = np.argmax(a)\\n\",\n    \"        maxa = np.max(a)\\n\",\n    \"        n_elems = len(a)\\n\",\n    \"\\n\",\n    \"        if np.all(np.abs(b) < 0.000000001):\\n\",\n    \"            return np.array([0])#, np.zeros(a.shape), np.zeros(b.shape)\\n\",\n    \"\\n\",\n    \"        # order by ascending b and descending a\\n\",\n    \"        order = np.lexsort((-a, b))\\n\",\n    \"        a = a[order]\\n\",\n    \"        b = b[order]\\n\",\n    \"\\n\",\n    \"        # exclude duplicated b (or super duper similar b)\\n\",\n    \"        threshold = (b[-1] - b[0]) * 0.00001\\n\",\n    \"        diff_b = b[1:] - b[:-1]\\n\",\n    \"        keep = diff_b > threshold\\n\",\n    \"        keep = np.concatenate([[True], keep])\\n\",\n    \"        keep[np.argmax(a)] = True\\n\",\n    \"        order = order[keep]\\n\",\n    \"        a = a[keep]\\n\",\n    \"        b = b[keep]\\n\",\n    \"\\n\",\n    \"        # initialize\\n\",\n    \"        idz = [0]\\n\",\n    \"        i_last = 0\\n\",\n    \"        x = [-np.inf]\\n\",\n    \"\\n\",\n    \"        n_lines = len(a)\\n\",\n    \"        # main loop TODO describe logic\\n\",\n    \"        # TODO not pruning properly, e.g. a=[0,1,2], b=[-1,0,1]\\n\",\n    \"        # returns x=[-inf, -1, -1, inf], shouldn't affect kgcb\\n\",\n    \"        while i_last < n_lines - 1:\\n\",\n    \"            i_mask = np.arange(i_last + 1, n_lines)\\n\",\n    \"            x_mask = -(a[i_last] - a[i_mask]) / (b[i_last] - b[i_mask])\\n\",\n    \"\\n\",\n    \"            best_pos = np.argmin(x_mask)\\n\",\n    \"            idz.append(i_mask[best_pos])\\n\",\n    \"            x.append(x_mask[best_pos])\\n\",\n    \"\\n\",\n    \"            i_last = idz[-1]\\n\",\n    \"\\n\",\n    \"        x.append(np.inf)\\n\",\n    \"\\n\",\n    \"        x = np.array(x)\\n\",\n    \"        idz = np.array(idz)\\n\",\n    \"\\n\",\n    \"        # found the epigraph, now compute the expectation\\n\",\n    \"        a = a[idz]\\n\",\n    \"        b = b[idz]\\n\",\n    \"        order = order[idz]\\n\",\n    \"\\n\",\n    \"        pdf = norm.pdf(x)\\n\",\n    \"        cdf = norm.cdf(x)\\n\",\n    \"\\n\",\n    \"        KG = np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:]))\\n\",\n    \"        KG -= np.max(a)\\n\",\n    \"\\n\",\n    \"        if KG - maxa <- 1e-5 :\\n\",\n    \"            print(\\\"x\\\",x)\\n\",\n    \"            print(\\\"a\\\",a )\\n\",\n    \"            print(\\\"b\\\",b)\\n\",\n    \"            print(\\\"maxa\\\",maxa)\\n\",\n    \"            print(\\\"KG\\\", KG)\\n\",\n    \"            z_all = np.linspace(x[1], x[-2], 100)\\n\",\n    \"            for j in range(len(a)):\\n\",\n    \"\\n\",\n    \"                print(x[1], x[-2])\\n\",\n    \"                if x[j] <-30:\\n\",\n    \"                    z = np.linspace(-3, x[j+1], 3)\\n\",\n    \"                elif x[j+1] > 30:\\n\",\n    \"                    z = np.linspace(x[j], 3, 3)\\n\",\n    \"                else:\\n\",\n    \"                    z = np.linspace(x[j], x[j+1], 3)\\n\",\n    \"                mu_star = a.reshape(-1)[j] + b.reshape(-1)[j]*z\\n\",\n    \"                mu_star_all = a.reshape(-1)[j] + b.reshape(-1)[j]*z_all\\n\",\n    \"                plt.plot(z_all , mu_star_all, color=\\\"grey\\\")\\n\",\n    \"                plt.plot(z, mu_star)\\n\",\n    \"            plt.show()\\n\",\n    \"            raise\\n\",\n    \"        # if verbose:\\n\",\n    \"        #     print(\\\"a_sorted \\\",a_sorted )\\n\",\n    \"        #     print(\\\"b_sorted\\\", b_sorted)\\n\",\n    \"        #\\n\",\n    \"        #     print(\\\"current max\\\",np.max(a) )\\n\",\n    \"        #     print(\\\"idz\\\", idz)\\n\",\n    \"        #     print(\\\"a\\\", a)\\n\",\n    \"        #     print(\\\"b\\\", b)\\n\",\n    \"        #     plt.scatter(Xd.reshape(-1), np.array(self.c_MM[:, index]).reshape(-1))\\n\",\n    \"        #     plt.plot(np.linspace(0,5,2), np.repeat(np.max(a), 2), color=\\\"red\\\")\\n\",\n    \"        #     plt.show()\\n\",\n    \"        #     # raise\\n\",\n    \"        # if KG < -1e-5:\\n\",\n    \"        #     print(\\\"KG cant be negative\\\")\\n\",\n    \"        #     print(\\\"np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:]))\\\",\\n\",\n    \"        #           np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:])))\\n\",\n    \"        #     print(\\\"self.bases_value[index]\\\", np.max(a))\\n\",\n    \"        #     print(\\\"KG\\\", KG)\\n\",\n    \"        #     raise\\n\",\n    \"        #\\n\",\n    \"        # KG = np.clip(KG, 0, np.inf)\\n\",\n    \"\\n\",\n    \"        if np.isnan(KG):\\n\",\n    \"            print(\\\"KG\\\", KG)\\n\",\n    \"            print(\\\"self.bases_value[index]\\\", max_a_index)\\n\",\n    \"            print(\\\"a\\\", a)\\n\",\n    \"            print(\\\"b\\\", b)\\n\",\n    \"            raise\\n\",\n    \"\\n\",\n    \"        return KG\\n\",\n    \"    \\n\",\n    \"    def update_current_best(self):\\n\",\n    \"        n_observations = self.model.get_X_values().shape[0]\\n\",\n    \"       \\n\",\n    \"        print(\\\"updating current best..........\\\")\\n\",\n    \"        self.counter = n_observations\\n\",\n    \"        self.current_max_xopt, self.current_max_value = self._compute_current_max()\\n\",\n    \"        assert self.current_max_value.reshape(-1) is not np.inf; \\\"error ocurred updating current best\\\"\\n\",\n    \"    \\n\",\n    \"    def _compute_current_max(self):\\n\",\n    \"\\n\",\n    \"        inner_opt_x, inner_opt_val = self.optimizer.optimize_inner_func(f=self.current_func,\\n\",\n    \"                                                                        f_df=None,\\n\",\n    \"                                                                        num_samples=5000)\\n\",\n    \"        inner_opt_x = np.array(inner_opt_x).reshape(-1)\\n\",\n    \"        inner_opt_x = np.atleast_2d(inner_opt_x)\\n\",\n    \"        return inner_opt_x,-inner_opt_val\\n\",\n    \"    \\n\",\n    \"    def current_func(self,X_inner):\\n\",\n    \"        X_inner = np.atleast_2d(X_inner)\\n\",\n    \"        mu = self.model.posterior_mean(X_inner)[0]\\n\",\n    \"        mu = np.array(mu).reshape(-1)\\n\",\n    \"        return -(mu ).reshape(-1)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 70,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"reconstraining parameters GP_regression.rbf\\n\",\n      \"reconstraining parameters GP_regression.Gaussian_noise.variance\\n\"\n     ]\n    },\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"create model\\n\",\n      \"noise_var 0.001\\n\",\n      \"Optimization restart 1/1, f = 24.047509205227165\\n\",\n      \"self.model \\n\",\n      \"Name : GP regression\\n\",\n      \"Objective : 24.047509205227165\\n\",\n      \"Number of Parameters : 3\\n\",\n      \"Number of Optimization Parameters : 2\\n\",\n      \"Updates : True\\n\",\n      \"Parameters:\\n\",\n      \"  \\u001b[1mGP_regression.         \\u001b[0;0m  |               value  |  constraints  |      priors    \\n\",\n      \"  \\u001b[1mrbf.variance           \\u001b[0;0m  |   1.412667169866644  |      +ve      |    Ga(1, 0.5)  \\n\",\n      \"  \\u001b[1mrbf.lengthscale        \\u001b[0;0m  |  0.8014207602015717  |      +ve      |    Ga(1, 0.5)  \\n\",\n      \"  \\u001b[1mGaussian_noise.variance\\u001b[0;0m  |               0.001  |   +ve fixed   |  Ga(0.01, 0.01)\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"import os\\n\",\n    \"import sys\\n\",\n    \"\\n\",\n    \"sys.path.append(os.getcwd())\\n\",\n    \"\\n\",\n    \"import core.acquisition.GPyOpt\\n\",\n    \"from core.acquisition.Hybrid_continuous_KG_v2 import KG\\n\",\n    \"from core.acquisition.multi_outputGP import multi_outputGP\\n\",\n    \"import core.acquisition.GPy as GPy\\n\",\n    \"import core.acquisition.GPy as GPy\\n\",\n    \"\\n\",\n    \"space =  GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)},\\n\",\n    \"                                     {'name': 'var_2', 'type': 'continuous', 'domain': (0,100)}])#GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)}])#\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"n_f = 1\\n\",\n    \"model = multi_outputGP(output_dim=n_f, noise_var=[1e-3] * n_f, exact_feval=[True] * n_f)  # , normalizer=True)\\n\",\n    \"\\n\",\n    \"model.trainModel(X, [Y])\\n\",\n    \"acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer='lbfgs', \\n\",\n    \"                                                   space=space, \\n\",\n    \"                                                   model=model,\\n\",\n    \"                                                   model_c=None)\\n\",\n    \"acquisition = continuous_kg(model=model, \\n\",\n    \"                             space=space,\\n\",\n    \"                            optimizer=acq_opt)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 71,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"updating current best..........\\n\"\n     ]\n    },\n    {\n     \"ename\": \"AttributeError\",\n     \"evalue\": \"'GPRegression' object has no attribute 'posterior_mean'\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-71-9a7c3c05e785>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[1;32m      1\\u001b[0m \\u001b[0mX_plot\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mlinspace\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m100\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m40\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      2\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m----> 3\\u001b[0;31m \\u001b[0macq_vals\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0macquisition\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_compute_acq\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX_plot\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m      4\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      5\\u001b[0m \\u001b[0mplt\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mplot\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX_plot\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0macq_vals\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m<ipython-input-5-9ba6f90bc848>\\u001b[0m in \\u001b[0;36m_compute_acq\\u001b[0;34m(self, X)\\u001b[0m\\n\\u001b[1;32m     12\\u001b[0m         \\\"\\\"\\\"\\n\\u001b[1;32m     13\\u001b[0m         \\u001b[0;31m# print(\\\"_compute_acq\\\")\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 14\\u001b[0;31m         \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mupdate_current_best\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m     15\\u001b[0m         \\u001b[0mX\\u001b[0m \\u001b[0;34m=\\u001b[0m\\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0matleast_2d\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     16\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m<ipython-input-5-9ba6f90bc848>\\u001b[0m in \\u001b[0;36mupdate_current_best\\u001b[0;34m(self)\\u001b[0m\\n\\u001b[1;32m    233\\u001b[0m         \\u001b[0mprint\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m\\\"updating current best..........\\\"\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    234\\u001b[0m         \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcounter\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mn_observations\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 235\\u001b[0;31m         \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcurrent_max_xopt\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcurrent_max_value\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_compute_current_max\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    236\\u001b[0m         \\u001b[0;32massert\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcurrent_max_value\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mreshape\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m-\\u001b[0m\\u001b[0;36m1\\u001b[0m\\u001b[0;34m)\\u001b[0m \\u001b[0;32mis\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0minf\\u001b[0m\\u001b[0;34m;\\u001b[0m \\u001b[0;34m\\\"error ocurred updating current best\\\"\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    237\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m<ipython-input-5-9ba6f90bc848>\\u001b[0m in \\u001b[0;36m_compute_current_max\\u001b[0;34m(self)\\u001b[0m\\n\\u001b[1;32m    238\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m_compute_current_max\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    239\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 240\\u001b[0;31m         inner_opt_x, inner_opt_val = self.optimizer.optimize_inner_func(f=self.current_func,\\n\\u001b[0m\\u001b[1;32m    241\\u001b[0m                                                                         \\u001b[0mf_df\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0;32mNone\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    242\\u001b[0m                                                                         num_samples=5000)\\n\",\n      \"\\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/optimization/acquisition_optimizer.py\\u001b[0m in \\u001b[0;36moptimize_inner_func\\u001b[0;34m(self, f, df, f_df, duplicate_manager, extra_point, reuse, num_samples)\\u001b[0m\\n\\u001b[1;32m    218\\u001b[0m         \\u001b[0;31m## -- Select the anchor points (with context)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    219\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 220\\u001b[0;31m         \\u001b[0manchor_points\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0manchor_points_generator\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mnum_anchor\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0;36m1\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0mduplicate_manager\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mduplicate_manager\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mcontext_manager\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mcontext_manager\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    221\\u001b[0m         \\u001b[0;32mif\\u001b[0m \\u001b[0mextra_point\\u001b[0m \\u001b[0;32mis\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0;32mNone\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    222\\u001b[0m             \\u001b[0manchor_points\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mconcatenate\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0manchor_points\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mextra_point\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/optimization/anchor_points_generator.py\\u001b[0m in \\u001b[0;36mget\\u001b[0;34m(self, num_anchor, X_sampled_values, duplicate_manager, unique, context_manager, verbose)\\u001b[0m\\n\\u001b[1;32m     64\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     65\\u001b[0m         \\u001b[0;31m# print(\\\"X\\\", X.shape)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 66\\u001b[0;31m         \\u001b[0mscores\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mget_anchor_point_scores\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m     67\\u001b[0m         \\u001b[0;31m# print(\\\"scores\\\", scores.shape)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     68\\u001b[0m         \\u001b[0;31m# print(\\\"num_anchor\\\", num_anchor)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/optimization/anchor_points_generator.py\\u001b[0m in \\u001b[0;36mget_anchor_point_scores\\u001b[0;34m(self, X)\\u001b[0m\\n\\u001b[1;32m    133\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0mget_anchor_point_scores\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mX\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    134\\u001b[0m         \\u001b[0;31m# print(\\\"X\\\", X.shape)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 135\\u001b[0;31m         \\u001b[0mout\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0marray\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mobjective\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mflatten\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    136\\u001b[0m         \\u001b[0;31m# print(\\\"out\\\", out.shape)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    137\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0mout\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m<ipython-input-5-9ba6f90bc848>\\u001b[0m in \\u001b[0;36mcurrent_func\\u001b[0;34m(self, X_inner)\\u001b[0m\\n\\u001b[1;32m    247\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0mcurrent_func\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0mX_inner\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    248\\u001b[0m         \\u001b[0mX_inner\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0matleast_2d\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX_inner\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 249\\u001b[0;31m         \\u001b[0mmu\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mmodel\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mposterior_mean\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX_inner\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    250\\u001b[0m         \\u001b[0mmu\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0marray\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mmu\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mreshape\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m-\\u001b[0m\\u001b[0;36m1\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    251\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0;34m-\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mmu\\u001b[0m \\u001b[0;34m)\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mreshape\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m-\\u001b[0m\\u001b[0;36m1\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/multi_outputGP.py\\u001b[0m in \\u001b[0;36mposterior_mean\\u001b[0;34m(self, X)\\u001b[0m\\n\\u001b[1;32m    136\\u001b[0m         \\u001b[0mm\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mempty\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0moutput_dim\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0mX\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mshape\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    137\\u001b[0m         \\u001b[0;32mfor\\u001b[0m \\u001b[0mj\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0mrange\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0moutput_dim\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 138\\u001b[0;31m           \\u001b[0mm\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0mj\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m]\\u001b[0m  \\u001b[0;34m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0moutput\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0mj\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mposterior_mean\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    139\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0mm\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    140\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/models/gpmodel.py\\u001b[0m in \\u001b[0;36mposterior_mean\\u001b[0;34m(self, X)\\u001b[0m\\n\\u001b[1;32m    178\\u001b[0m         \\\"\\\"\\\"\\n\\u001b[1;32m    179\\u001b[0m         \\u001b[0;32mif\\u001b[0m \\u001b[0mX\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mndim\\u001b[0m\\u001b[0;34m==\\u001b[0m\\u001b[0;36m1\\u001b[0m\\u001b[0;34m:\\u001b[0m \\u001b[0mX\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mX\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;32mNone\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 180\\u001b[0;31m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mmodel\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mposterior_mean\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mX\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    181\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    182\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0mposterior_variance\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mX\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mnoise\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mAttributeError\\u001b[0m: 'GPRegression' object has no attribute 'posterior_mean'\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"X_plot = np.linspace(0,100,40)\\n\",\n    \"\\n\",\n    \"acq_vals = acquisition._compute_acq(X_plot)\\n\",\n    \"\\n\",\n    \"plt.plot(X_plot, acq_vals)\\n\",\n    \"plt.show()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 57,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"'/home/juan/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/models/gpmodel.py'\"\n      ]\n     },\n     \"execution_count\": 57,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"import inspect\\n\",\n    \"inspect.getmodule(GPyOpt.models.GPModel).__file__\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 69,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"'/home/juan/Documents/Github_repos/Constrained-KG/core/acquisition/GPy/models/gp_regression.py'\"\n      ]\n     },\n     \"execution_count\": 69,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"\\n\",\n    \"inspect.getmodule(GPy.models.GPRegression).__file__\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Constrained-KG-botorch\",\n   \"language\": \"python\",\n   \"name\": \"constrained-kg-botorch\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.8.10\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KG plots.ipynb b/KG plots.ipynb
--- a/KG plots.ipynb	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/KG plots.ipynb	(date 1684581327423)
@@ -13,32 +13,2034 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 25,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "array([4])"
+      ]
+     },
+     "execution_count": 25,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "a = np.array([4, 5])\n",
+    "tf = np.array([True, False])\n",
+    "a[tf]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "[[97.0200688 ]\n",
-      " [69.52875623]\n",
-      " [48.18704536]\n",
-      " [63.38946701]\n",
-      " [65.8882988 ]\n",
-      " [29.12812929]\n",
-      " [ 7.77809364]\n",
-      " [78.39163273]\n",
-      " [41.86292971]\n",
-      " [29.96000363]] [[ 1.54374658]\n",
-      " [ 0.74614551]\n",
-      " [-0.265392  ]\n",
-      " [ 0.80383176]\n",
-      " [ 0.80501626]\n",
-      " [ 0.53754161]\n",
-      " [ 2.71045136]\n",
-      " [ 0.62218487]\n",
-      " [ 1.11368932]\n",
-      " [-0.60990655]]\n"
+      "[[5.48813504e+01]\n",
+      " [7.15189366e+01]\n",
+      " [6.02763376e+01]\n",
+      " [5.44883183e+01]\n",
+      " [4.23654799e+01]\n",
+      " [6.45894113e+01]\n",
+      " [4.37587211e+01]\n",
+      " [8.91773001e+01]\n",
+      " [9.63662761e+01]\n",
+      " [3.83441519e+01]\n",
+      " [7.91725038e+01]\n",
+      " [5.28894920e+01]\n",
+      " [5.68044561e+01]\n",
+      " [9.25596638e+01]\n",
+      " [7.10360582e+00]\n",
+      " [8.71292997e+00]\n",
+      " [2.02183974e+00]\n",
+      " [8.32619846e+01]\n",
+      " [7.78156751e+01]\n",
+      " [8.70012148e+01]\n",
+      " [9.78618342e+01]\n",
+      " [7.99158564e+01]\n",
+      " [4.61479362e+01]\n",
+      " [7.80529176e+01]\n",
+      " [1.18274426e+01]\n",
+      " [6.39921021e+01]\n",
+      " [1.43353287e+01]\n",
+      " [9.44668917e+01]\n",
+      " [5.21848322e+01]\n",
+      " [4.14661940e+01]\n",
+      " [2.64555612e+01]\n",
+      " [7.74233689e+01]\n",
+      " [4.56150332e+01]\n",
+      " [5.68433949e+01]\n",
+      " [1.87898004e+00]\n",
+      " [6.17635497e+01]\n",
+      " [6.12095723e+01]\n",
+      " [6.16933997e+01]\n",
+      " [9.43748079e+01]\n",
+      " [6.81820299e+01]\n",
+      " [3.59507901e+01]\n",
+      " [4.37031954e+01]\n",
+      " [6.97631196e+01]\n",
+      " [6.02254716e+00]\n",
+      " [6.66766715e+01]\n",
+      " [6.70637870e+01]\n",
+      " [2.10382561e+01]\n",
+      " [1.28926298e+01]\n",
+      " [3.15428351e+01]\n",
+      " [3.63710771e+01]\n",
+      " [5.70196770e+01]\n",
+      " [4.38601513e+01]\n",
+      " [9.88373838e+01]\n",
+      " [1.02044811e+01]\n",
+      " [2.08876756e+01]\n",
+      " [1.61309518e+01]\n",
+      " [6.53108325e+01]\n",
+      " [2.53291603e+01]\n",
+      " [4.66310773e+01]\n",
+      " [2.44425592e+01]\n",
+      " [1.58969584e+01]\n",
+      " [1.10375141e+01]\n",
+      " [6.56329589e+01]\n",
+      " [1.38182951e+01]\n",
+      " [1.96582362e+01]\n",
+      " [3.68725171e+01]\n",
+      " [8.20993230e+01]\n",
+      " [9.71012758e+00]\n",
+      " [8.37944907e+01]\n",
+      " [9.60984079e+00]\n",
+      " [9.76459465e+01]\n",
+      " [4.68651202e+01]\n",
+      " [9.76761088e+01]\n",
+      " [6.04845520e+01]\n",
+      " [7.39263579e+01]\n",
+      " [3.91877923e+00]\n",
+      " [2.82806963e+01]\n",
+      " [1.20196561e+01]\n",
+      " [2.96140198e+01]\n",
+      " [1.18727719e+01]\n",
+      " [3.17983179e+01]\n",
+      " [4.14262995e+01]\n",
+      " [6.41474963e+00]\n",
+      " [6.92472119e+01]\n",
+      " [5.66601454e+01]\n",
+      " [2.65389491e+01]\n",
+      " [5.23248053e+01]\n",
+      " [9.39405108e+00]\n",
+      " [5.75946496e+01]\n",
+      " [9.29296198e+01]\n",
+      " [3.18568952e+01]\n",
+      " [6.67410380e+01]\n",
+      " [1.31797862e+01]\n",
+      " [7.16327204e+01]\n",
+      " [2.89406093e+01]\n",
+      " [1.83191362e+01]\n",
+      " [5.86512935e+01]\n",
+      " [2.01075462e+00]\n",
+      " [8.28940029e+01]\n",
+      " [4.69547619e-01]\n",
+      " [6.77816537e+01]\n",
+      " [2.70007973e+01]\n",
+      " [7.35194022e+01]\n",
+      " [9.62188545e+01]\n",
+      " [2.48753144e+01]\n",
+      " [5.76157334e+01]\n",
+      " [5.92041931e+01]\n",
+      " [5.72251906e+01]\n",
+      " [2.23081633e+01]\n",
+      " [9.52749012e+01]\n",
+      " [4.47125379e+01]\n",
+      " [8.46408672e+01]\n",
+      " [6.99479275e+01]\n",
+      " [2.97436951e+01]\n",
+      " [8.13797820e+01]\n",
+      " [3.96505741e+01]\n",
+      " [8.81103197e+01]\n",
+      " [5.81272873e+01]\n",
+      " [8.81735362e+01]\n",
+      " [6.92531590e+01]\n",
+      " [7.25254280e+01]\n",
+      " [5.01324382e+01]\n",
+      " [9.56083635e+01]\n",
+      " [6.43990199e+01]\n",
+      " [4.23855049e+01]\n",
+      " [6.06393214e+01]\n",
+      " [1.91931983e+00]\n",
+      " [3.01574817e+01]\n",
+      " [6.60173537e+01]\n",
+      " [2.90077607e+01]\n",
+      " [6.18015429e+01]\n",
+      " [4.28768701e+01]\n",
+      " [1.35474064e+01]\n",
+      " [2.98282326e+01]\n",
+      " [5.69964911e+01]\n",
+      " [5.90872761e+01]\n",
+      " [5.74325249e+01]\n",
+      " [6.53200820e+01]\n",
+      " [6.52103270e+01]\n",
+      " [4.31418435e+01]\n",
+      " [8.96546596e+01]\n",
+      " [3.67561870e+01]\n",
+      " [4.35864925e+01]\n",
+      " [8.91923355e+01]\n",
+      " [8.06193989e+01]\n",
+      " [7.03888584e+01]\n",
+      " [1.00226887e+01]\n",
+      " [9.19482614e+01]\n",
+      " [7.14241300e+01]\n",
+      " [9.98847007e+01]\n",
+      " [1.49448305e+01]\n",
+      " [8.68126057e+01]\n",
+      " [1.62492935e+01]\n",
+      " [6.15559564e+01]\n",
+      " [1.23819983e+01]\n",
+      " [8.48008229e+01]\n",
+      " [8.07318959e+01]\n",
+      " [5.69100739e+01]\n",
+      " [4.07183297e+01]\n",
+      " [6.91669955e+00]\n",
+      " [6.97428773e+01]\n",
+      " [4.53542683e+01]\n",
+      " [7.22055599e+01]\n",
+      " [8.66382326e+01]\n",
+      " [9.75521505e+01]\n",
+      " [8.55803342e+01]\n",
+      " [1.17140842e+00]\n",
+      " [3.59978064e+01]\n",
+      " [7.29990562e+01]\n",
+      " [1.71629677e+01]\n",
+      " [5.21036606e+01]\n",
+      " [5.43379883e+00]\n",
+      " [1.99996525e+01]\n",
+      " [1.85217945e+00]\n",
+      " [7.93697703e+01]\n",
+      " [2.23924688e+01]\n",
+      " [3.45351681e+01]\n",
+      " [9.28081293e+01]\n",
+      " [7.04414402e+01]\n",
+      " [3.18389295e+00]\n",
+      " [1.64694156e+01]\n",
+      " [6.21478401e+01]\n",
+      " [5.77228589e+01]\n",
+      " [2.37892821e+01]\n",
+      " [9.34213998e+01]\n",
+      " [6.13965956e+01]\n",
+      " [5.35632803e+01]\n",
+      " [5.89909976e+01]\n",
+      " [7.30122030e+01]\n",
+      " [3.11944995e+01]\n",
+      " [3.98221062e+01]\n",
+      " [2.09843749e+01]\n",
+      " [1.86193006e+01]\n",
+      " [9.44372390e+01]\n",
+      " [7.39550795e+01]\n",
+      " [4.90458809e+01]\n",
+      " [2.27414628e+01]\n",
+      " [2.54356482e+01]\n",
+      " [5.80291603e+00]\n",
+      " [4.34416626e+01]\n",
+      " [3.11795882e+01]\n",
+      " [6.96343489e+01]\n",
+      " [3.77751839e+01]\n",
+      " [1.79603678e+01]\n",
+      " [2.46787284e+00]\n",
+      " [6.72496315e+00]\n",
+      " [6.79392773e+01]\n",
+      " [4.53696845e+01]\n",
+      " [5.36579211e+01]\n",
+      " [8.96671293e+01]\n",
+      " [9.90338947e+01]\n",
+      " [2.16896984e+01]\n",
+      " [6.63078203e+01]\n",
+      " [2.63322377e+01]\n",
+      " [2.06509995e+00]\n",
+      " [7.58378654e+01]\n",
+      " [3.20017151e+01]\n",
+      " [3.83463894e+01]\n",
+      " [5.88317114e+01]\n",
+      " [8.31048455e+01]\n",
+      " [6.28981844e+01]\n",
+      " [8.72650655e+01]\n",
+      " [2.73542035e+01]\n",
+      " [7.98046834e+01]\n",
+      " [1.85635944e+01]\n",
+      " [9.52791657e+01]\n",
+      " [6.87488276e+01]\n",
+      " [2.15507677e+01]\n",
+      " [9.47370590e+01]\n",
+      " [7.30855807e+01]\n",
+      " [2.53941643e+01]\n",
+      " [2.13311977e+01]\n",
+      " [5.18200714e+01]\n",
+      " [2.56627181e+00]\n",
+      " [2.07470075e+01]\n",
+      " [4.24685469e+01]\n",
+      " [3.74169980e+01]\n",
+      " [4.63575424e+01]\n",
+      " [2.77628706e+01]\n",
+      " [5.86784346e+01]\n",
+      " [8.63855606e+01]\n",
+      " [1.17531856e+01]\n",
+      " [5.17379107e+01]\n",
+      " [1.32068106e+01]\n",
+      " [7.16859681e+01]\n",
+      " [3.96059703e+01]\n",
+      " [5.65421312e+01]\n",
+      " [1.83279836e+01]\n",
+      " [1.44847759e+01]\n",
+      " [4.88056281e+01]\n",
+      " [3.55612738e+01]\n",
+      " [9.40431945e+01]\n",
+      " [7.65325254e+01]\n",
+      " [7.48663620e+01]\n",
+      " [9.03719740e+01]\n",
+      " [8.34224354e+00]\n",
+      " [5.52192470e+01]\n",
+      " [5.84476069e+01]\n",
+      " [9.61936379e+01]\n",
+      " [2.92147527e+01]\n",
+      " [2.40828780e+01]\n",
+      " [1.00293942e+01]\n",
+      " [1.64296296e+00]\n",
+      " [9.29529317e+01]\n",
+      " [6.69916547e+01]\n",
+      " [7.85152912e+01]\n",
+      " [2.81730106e+01]\n",
+      " [5.86410166e+01]\n",
+      " [6.39552661e+00]\n",
+      " [4.85627596e+01]\n",
+      " [9.77495140e+01]\n",
+      " [8.76505245e+01]\n",
+      " [3.38158952e+01]\n",
+      " [9.61570155e+01]\n",
+      " [2.31701626e+01]\n",
+      " [9.49318822e+01]\n",
+      " [9.41377705e+01]\n",
+      " [7.99202587e+01]\n",
+      " [6.30447937e+01]\n",
+      " [8.74287967e+01]\n",
+      " [2.93020285e+01]\n",
+      " [8.48943555e+01]\n",
+      " [6.17876692e+01]\n",
+      " [1.32368578e+00]\n",
+      " [3.47233518e+01]\n",
+      " [1.48140861e+01]\n",
+      " [9.81829390e+01]\n",
+      " [4.78370307e+01]\n",
+      " [4.97391365e+01]\n",
+      " [6.39472516e+01]\n",
+      " [3.68584606e+01]\n",
+      " [1.36900272e+01]\n",
+      " [8.22117733e+01]\n",
+      " [1.89847912e+01]\n",
+      " [5.11318983e+01]\n",
+      " [2.24317029e+01]\n",
+      " [9.78444845e+00]\n",
+      " [8.62191517e+01]\n",
+      " [9.72919489e+01]\n",
+      " [9.60834658e+01]\n",
+      " [9.06555499e+01]\n",
+      " [7.74047333e+01]\n",
+      " [3.33145152e+01]\n",
+      " [8.11013900e+00]\n",
+      " [4.07241171e+01]\n",
+      " [2.32234142e+01]\n",
+      " [1.32487635e+01]\n",
+      " [5.34271818e+00]\n",
+      " [7.25594364e+01]\n",
+      " [1.14274586e+00]\n",
+      " [7.70580749e+01]\n",
+      " [1.46946645e+01]\n",
+      " [7.95220826e+00]\n",
+      " [8.96030342e+00]\n",
+      " [6.72047807e+01]\n",
+      " [2.45367210e+01]\n",
+      " [4.20539467e+01]\n",
+      " [5.57368791e+01]\n",
+      " [8.60551174e+01]\n",
+      " [7.27044263e+01]\n",
+      " [2.70327905e+01]\n",
+      " [1.31482799e+01]\n",
+      " [5.53743204e+00]\n",
+      " [3.01598634e+01]\n",
+      " [2.62118149e+01]\n",
+      " [4.56140567e+01]\n",
+      " [6.83281336e+01]\n",
+      " [6.95625446e+01]\n",
+      " [2.83518847e+01]\n",
+      " [3.79926956e+01]\n",
+      " [1.81150962e+01]\n",
+      " [7.88545512e+01]\n",
+      " [5.68480764e+00]\n",
+      " [6.96997242e+01]\n",
+      " [7.78695396e+01]\n",
+      " [7.77407562e+01]\n",
+      " [2.59422564e+01]\n",
+      " [3.73813138e+01]\n",
+      " [5.87599635e+01]\n",
+      " [2.72821902e+01]\n",
+      " [3.70852799e+01]\n",
+      " [1.97054280e+01]\n",
+      " [4.59855884e+01]\n",
+      " [4.46123013e+00]\n",
+      " [7.99795885e+01]\n",
+      " [7.69564470e+00]\n",
+      " [5.18835149e+01]\n",
+      " [3.06810100e+01]\n",
+      " [5.77542949e+01]\n",
+      " [9.59433341e+01]\n",
+      " [6.45570244e+01]\n",
+      " [3.53624358e+00]\n",
+      " [4.30402440e+01]\n",
+      " [5.10016852e+01]\n",
+      " [5.36177495e+01]\n",
+      " [6.81392511e+01]\n",
+      " [2.77596098e+01]\n",
+      " [1.28860565e+01]\n",
+      " [3.92675677e+01]\n",
+      " [9.56405723e+01]\n",
+      " [1.87130892e+01]\n",
+      " [9.03983955e+01]\n",
+      " [5.43805950e+01]\n",
+      " [4.56911422e+01]\n",
+      " [8.82041410e+01]\n",
+      " [4.58603962e+01]\n",
+      " [7.24167637e+01]\n",
+      " [3.99025322e+01]\n",
+      " [9.04044393e+01]\n",
+      " [6.90025020e+01]\n",
+      " [6.99622054e+01]\n",
+      " [3.27720402e+01]\n",
+      " [7.56778643e+01]\n",
+      " [6.36061055e+01]\n",
+      " [2.40020273e+01]\n",
+      " [1.60538822e+01]\n",
+      " [7.96391475e+01]\n",
+      " [9.59166603e+01]\n",
+      " [4.58138827e+01]\n",
+      " [5.90984165e+01]\n",
+      " [8.57722644e+01]\n",
+      " [4.57223453e+01]\n",
+      " [9.51874477e+01]\n",
+      " [5.75751162e+01]\n",
+      " [8.20767121e+01]\n",
+      " [9.08843718e+01]\n",
+      " [8.15523819e+01]\n",
+      " [1.59414463e+01]\n",
+      " [6.28898439e+01]\n",
+      " [3.98434259e+01]\n",
+      " [6.27129520e+00]\n",
+      " [4.24032252e+01]\n",
+      " [2.58684067e+01]\n",
+      " [8.49038308e+01]\n",
+      " [3.33046265e+00]\n",
+      " [9.58982722e+01]\n",
+      " [3.55368848e+01]\n",
+      " [3.56706890e+01]\n",
+      " [1.63285027e+00]\n",
+      " [1.85232325e+01]\n",
+      " [4.01259501e+01]\n",
+      " [9.29291417e+01]\n",
+      " [9.96149302e+00]\n",
+      " [9.45301533e+01]\n",
+      " [8.69488531e+01]\n",
+      " [4.54162397e+01]\n",
+      " [3.26700882e+01]\n",
+      " [2.32744129e+01]\n",
+      " [6.14464706e+01]\n",
+      " [3.30745915e+00]\n",
+      " [1.56060644e+00]\n",
+      " [4.28795722e+01]\n",
+      " [6.80740740e+00]\n",
+      " [2.51940988e+01]\n",
+      " [2.21160915e+01]\n",
+      " [2.53191194e+01]\n",
+      " [1.31055231e+01]\n",
+      " [1.20362229e+00]\n",
+      " [1.15484297e+01]\n",
+      " [6.18480260e+01]\n",
+      " [9.74256213e+01]\n",
+      " [9.90345002e+01]\n",
+      " [4.09054095e+01]\n",
+      " [1.62954426e+01]\n",
+      " [6.38761757e+01]\n",
+      " [4.90305347e+01]\n",
+      " [9.89409777e+01]\n",
+      " [6.53042072e+00]\n",
+      " [7.83234438e+01]\n",
+      " [2.88398497e+01]\n",
+      " [2.41418620e+01]\n",
+      " [6.62504572e+01]\n",
+      " [2.46063185e+01]\n",
+      " [6.65859118e+01]\n",
+      " [5.17308517e+01]\n",
+      " [4.24088988e+01]\n",
+      " [5.54687809e+01]\n",
+      " [2.87051520e+01]\n",
+      " [7.06574706e+01]\n",
+      " [4.14856869e+01]\n",
+      " [3.60545560e+01]\n",
+      " [8.28656915e+01]\n",
+      " [9.24966912e+01]\n",
+      " [4.60073109e+00]\n",
+      " [2.32626993e+01]\n",
+      " [3.48519369e+01]\n",
+      " [8.14966479e+01]\n",
+      " [9.85491428e+01]\n",
+      " [9.68971705e+01]\n",
+      " [9.04948346e+01]\n",
+      " [2.96556265e+01]\n",
+      " [9.92011243e+01]\n",
+      " [2.49420041e+01]\n",
+      " [1.05906155e+01]\n",
+      " [9.50952611e+01]\n",
+      " [2.33420255e+01]\n",
+      " [6.89768265e+01]\n",
+      " [5.83563590e+00]\n",
+      " [7.30709099e+01]\n",
+      " [8.81720212e+01]\n",
+      " [2.72436895e+01]\n",
+      " [3.79056896e+01]\n",
+      " [3.74296183e+01]\n",
+      " [7.48788258e+01]\n",
+      " [2.37807243e+01]\n",
+      " [1.71853099e+01]\n",
+      " [4.49291649e+01]\n",
+      " [3.04468407e+01]\n",
+      " [8.39189122e+01]\n",
+      " [2.37741826e+01]\n",
+      " [5.02389457e+01]\n",
+      " [9.42583600e+01]\n",
+      " [6.33997698e+01]\n",
+      " [8.67289405e+01]\n",
+      " [9.40209689e+01]\n",
+      " [7.50764862e+01]\n",
+      " [6.99575060e+01]\n",
+      " [9.67965567e+01]\n",
+      " [9.94400790e+01]\n",
+      " [4.51821683e+01]\n",
+      " [7.08697782e+00]\n",
+      " [2.92794031e+01]\n",
+      " [1.52354706e+01]\n",
+      " [4.17486375e+01]\n",
+      " [1.31289328e+01]\n",
+      " [6.04117804e+01]\n",
+      " [3.82808059e+01]\n",
+      " [8.95385884e+01]\n",
+      " [9.67794672e+01]\n",
+      " [5.46884902e+01]\n",
+      " [2.74823570e+01]\n",
+      " [5.92230419e+01]\n",
+      " [8.96761158e+01]\n",
+      " [4.06733346e+01]\n",
+      " [5.52078277e+01]\n",
+      " [2.71652768e+01]\n",
+      " [4.55444149e+01]\n",
+      " [4.01713535e+01]\n",
+      " [2.48413465e+01]\n",
+      " [5.05866384e+01]\n",
+      " [3.10380826e+01]\n",
+      " [3.73034864e+01]\n",
+      " [5.24970442e+01]\n",
+      " [7.50595023e+01]\n",
+      " [3.33507466e+01]\n",
+      " [9.24158767e+01]\n",
+      " [8.62318547e+01]\n",
+      " [4.86902960e+00]\n",
+      " [2.53642524e+01]\n",
+      " [4.46135513e+01]\n",
+      " [1.04627889e+01]\n",
+      " [3.48475989e+01]\n",
+      " [7.40097526e+01]\n",
+      " [6.80514481e+01]\n",
+      " [6.22384429e+01]\n",
+      " [7.10528403e+01]\n",
+      " [2.04923687e+01]\n",
+      " [3.41698115e+01]\n",
+      " [6.76242482e+01]\n",
+      " [8.79234763e+01]\n",
+      " [5.43678054e+01]\n",
+      " [2.82699651e+01]\n",
+      " [3.02352580e+00]\n",
+      " [7.10336829e+01]\n",
+      " [7.88410351e-01]\n",
+      " [3.72679070e+01]\n",
+      " [5.30537215e+01]\n",
+      " [9.22111462e+01]\n",
+      " [8.94945450e+00]\n",
+      " [4.05942322e+01]\n",
+      " [2.43131997e+00]\n",
+      " [3.42610984e+01]\n",
+      " [6.22231059e+01]\n",
+      " [2.79067948e+01]\n",
+      " [2.09749950e+01]\n",
+      " [1.15703233e+01]\n",
+      " [5.77140244e+01]\n",
+      " [6.95270006e+01]\n",
+      " [6.71957141e+01]\n",
+      " [9.48861021e+01]\n",
+      " [2.70321389e-01]\n",
+      " [6.47196654e+01]\n",
+      " [6.00392237e+01]\n",
+      " [5.88739610e+01]\n",
+      " [9.62770320e+01]\n",
+      " [1.68716734e+00]\n",
+      " [6.96482431e+01]\n",
+      " [8.13678650e+01]\n",
+      " [5.09807197e+01]\n",
+      " [3.33964870e+01]\n",
+      " [7.90840163e+01]\n",
+      " [9.72429256e+00]\n",
+      " [4.42035638e+01]\n",
+      " [5.19952375e+01]\n",
+      " [6.93956411e+01]\n",
+      " [9.08857320e+00]\n",
+      " [2.27759502e+01]\n",
+      " [4.10301563e+01]\n",
+      " [6.23294673e+01]\n",
+      " [8.86960781e+01]\n",
+      " [6.18826168e+01]\n",
+      " [1.33461471e+01]\n",
+      " [9.80580133e+01]\n",
+      " [8.71785735e+01]\n",
+      " [5.02720761e+01]\n",
+      " [9.22347982e+01]\n",
+      " [5.41380794e+01]\n",
+      " [9.23306068e+01]\n",
+      " [8.29897369e+01]\n",
+      " [9.68286410e+01]\n",
+      " [9.19782811e+01]\n",
+      " [3.60338174e+00]\n",
+      " [1.74772004e+01]\n",
+      " [3.89134677e+01]\n",
+      " [9.52142697e+01]\n",
+      " [3.00028919e+01]\n",
+      " [1.60467644e+01]\n",
+      " [8.86304666e+01]\n",
+      " [4.46394415e+01]\n",
+      " [9.07875594e+01]\n",
+      " [1.60230466e+01]\n",
+      " [6.61117512e+01]\n",
+      " [4.40263753e+01]\n",
+      " [7.64867690e+00]\n",
+      " [6.96463145e+01]\n",
+      " [2.47398756e+01]\n",
+      " [3.96155226e+00]\n",
+      " [5.99442982e+00]\n",
+      " [6.10785371e+00]\n",
+      " [9.07732957e+01]\n",
+      " [7.39883918e+01]\n",
+      " [8.98062357e+01]\n",
+      " [6.72582311e+01]\n",
+      " [5.28939929e+01]\n",
+      " [3.04446364e+01]\n",
+      " [9.97962251e+01]\n",
+      " [3.62189059e+01]\n",
+      " [4.70648949e+01]\n",
+      " [3.78245175e+01]\n",
+      " [9.79526929e+01]\n",
+      " [1.74658385e+01]\n",
+      " [3.27988001e+01]\n",
+      " [6.80348666e+01]\n",
+      " [6.32076183e+00]\n",
+      " [6.07249374e+01]\n",
+      " [4.77646503e+01]\n",
+      " [2.83999977e+01]\n",
+      " [2.38413281e+01]\n",
+      " [5.14512743e+01]\n",
+      " [3.67927581e+01]\n",
+      " [4.56519891e+01]\n",
+      " [3.37477382e+01]\n",
+      " [9.70493694e+01]\n",
+      " [1.33439432e+01]\n",
+      " [9.68039532e+00]\n",
+      " [3.43391729e+01]\n",
+      " [5.91026901e+01]\n",
+      " [6.59176472e+01]\n",
+      " [3.97256747e+01]\n",
+      " [9.99277994e+01]\n",
+      " [3.51892996e+01]\n",
+      " [7.21406668e+01]\n",
+      " [6.37582695e+01]\n",
+      " [8.13053863e+01]\n",
+      " [9.76225663e+01]\n",
+      " [8.89793656e+01]\n",
+      " [7.64561974e+01]\n",
+      " [6.98248478e+01]\n",
+      " [3.35498170e+01]\n",
+      " [1.47685578e+01]\n",
+      " [6.26360031e+00]\n",
+      " [2.41901704e+01]\n",
+      " [4.32281481e+01]\n",
+      " [5.21996274e+01]\n",
+      " [7.73083554e+01]\n",
+      " [9.58740923e+01]\n",
+      " [1.17320480e+01]\n",
+      " [1.07004140e+01]\n",
+      " [5.89694723e+01]\n",
+      " [7.45398074e+01]\n",
+      " [8.48150380e+01]\n",
+      " [9.35832080e+01]\n",
+      " [9.83426242e+01]\n",
+      " [3.99801692e+01]\n",
+      " [3.80335184e+01]\n",
+      " [1.47808677e+01]\n",
+      " [6.84934439e+01]\n",
+      " [6.56761958e+01]\n",
+      " [8.62062596e+01]\n",
+      " [9.72579948e+00]\n",
+      " [4.97776908e+01]\n",
+      " [5.81081930e+01]\n",
+      " [2.41557040e+01]\n",
+      " [1.69025406e+01]\n",
+      " [8.59580836e+01]\n",
+      " [5.85349222e+00]\n",
+      " [4.70620904e+01]\n",
+      " [1.15834001e+01]\n",
+      " [4.57058761e+01]\n",
+      " [9.79962326e+01]\n",
+      " [4.23706353e+01]\n",
+      " [8.57124918e+01]\n",
+      " [1.17315564e+01]\n",
+      " [2.71252077e+01]\n",
+      " [4.03792741e+01]\n",
+      " [3.99812140e+01]\n",
+      " [6.71383479e+01]\n",
+      " [3.44718127e+01]\n",
+      " [7.13766868e+01]\n",
+      " [6.39186899e+01]\n",
+      " [3.99161145e+01]\n",
+      " [4.31760128e+01]\n",
+      " [6.14527700e+01]\n",
+      " [7.00421901e+00]\n",
+      " [8.22406738e+01]\n",
+      " [6.53421161e+01]\n",
+      " [7.26342464e+01]\n",
+      " [5.36923001e+01]\n",
+      " [1.10477111e+01]\n",
+      " [4.05035613e+01]\n",
+      " [4.05373583e+01]\n",
+      " [3.21042990e+01]\n",
+      " [2.99503249e+00]\n",
+      " [7.37254243e+01]\n",
+      " [1.09784458e+01]\n",
+      " [6.06308133e+01]\n",
+      " [7.03217496e+01]\n",
+      " [6.34786323e+01]\n",
+      " [9.59142252e+01]\n",
+      " [1.03298155e+01]\n",
+      " [8.67167159e+01]\n",
+      " [2.91902348e+00]\n",
+      " [5.34916855e+01]\n",
+      " [4.04243618e+01]\n",
+      " [5.24183860e+01]\n",
+      " [3.65099877e+01]\n",
+      " [1.90566915e+01]\n",
+      " [1.91228974e+00]\n",
+      " [5.18149814e+01]\n",
+      " [8.42776863e+01]\n",
+      " [3.73215956e+01]\n",
+      " [2.22863818e+01]\n",
+      " [8.05320035e+00]\n",
+      " [8.53109231e+00]\n",
+      " [2.21396446e+01]\n",
+      " [1.00014061e+01]\n",
+      " [2.65039698e+01]\n",
+      " [6.61494621e+00]\n",
+      " [6.56048672e+00]\n",
+      " [8.56276180e+01]\n",
+      " [1.62120261e+01]\n",
+      " [5.59682406e+01]\n",
+      " [7.73455544e+01]\n",
+      " [4.56409565e+01]\n",
+      " [1.53368878e+01]\n",
+      " [1.99596142e+01]\n",
+      " [4.32984206e+01]\n",
+      " [5.28234089e+01]\n",
+      " [3.49440292e+01]\n",
+      " [7.81479600e+01]\n",
+      " [7.51021649e+01]\n",
+      " [9.27211807e+01]\n",
+      " [2.89525490e+00]\n",
+      " [8.95691291e+01]\n",
+      " [3.92568788e+01]\n",
+      " [8.78372495e+01]\n",
+      " [6.90784776e+01]\n",
+      " [9.87348757e+01]\n",
+      " [7.59282452e+01]\n",
+      " [3.64544626e+01]\n",
+      " [5.01063173e+01]\n",
+      " [3.76389155e+01]\n",
+      " [3.64911836e+01]\n",
+      " [2.60904499e+01]\n",
+      " [4.95970295e+01]\n",
+      " [6.81739945e+01]\n",
+      " [2.77340271e+01]\n",
+      " [5.24379811e+01]\n",
+      " [1.17380294e+01]\n",
+      " [1.59845287e+01]\n",
+      " [4.68063547e+00]\n",
+      " [9.70731443e+01]\n",
+      " [3.86035151e-01]\n",
+      " [1.78579968e+01]\n",
+      " [6.12866753e+01]\n",
+      " [8.13695989e+00]\n",
+      " [8.81896503e+01]\n",
+      " [7.19620158e+01]\n",
+      " [9.66389971e+01]\n",
+      " [5.07635547e+01]\n",
+      " [3.00403683e+01]\n",
+      " [5.49500573e+01]\n",
+      " [9.30818717e+01]\n",
+      " [5.20761437e+01]\n",
+      " [2.67207032e+01]\n",
+      " [8.77398789e+01]\n",
+      " [3.71918749e+01]\n",
+      " [1.38335000e-01]\n",
+      " [2.47685022e+01]\n",
+      " [3.18233509e+01]\n",
+      " [8.58777468e+01]\n",
+      " [4.58503167e+01]\n",
+      " [4.44587288e+01]\n",
+      " [3.36102266e+01]\n",
+      " [8.80678123e+01]\n",
+      " [9.45026777e+01]\n",
+      " [9.91890329e+01]\n",
+      " [3.76741267e+01]\n",
+      " [9.66147446e+01]\n",
+      " [7.91879570e+01]\n",
+      " [6.75689148e+01]\n",
+      " [2.44889479e+01]\n",
+      " [2.16457261e+01]\n",
+      " [1.66047825e+01]\n",
+      " [9.22756610e+01]\n",
+      " [2.94076662e+01]\n",
+      " [4.53094245e+01]\n",
+      " [4.93957834e+01]\n",
+      " [7.78171595e+01]\n",
+      " [8.44234962e+01]\n",
+      " [1.39072701e+01]\n",
+      " [4.26904360e+01]\n",
+      " [8.42854888e+01]\n",
+      " [8.18033306e+01]\n",
+      " [1.02413758e+01]\n",
+      " [1.56383349e+01]\n",
+      " [3.04198692e+01]\n",
+      " [7.53590691e+00]\n",
+      " [4.24663003e+01]\n",
+      " [1.07617705e+01]\n",
+      " [5.68217594e+01]\n",
+      " [2.46556940e+01]\n",
+      " [5.96433065e+01]\n",
+      " [1.17525643e+01]\n",
+      " [9.75883868e+01]\n",
+      " [9.32561204e+01]\n",
+      " [3.91796939e+01]\n",
+      " [2.42178594e+01]\n",
+      " [2.50398213e+01]\n",
+      " [4.83393535e+01]\n",
+      " [3.99928019e+00]\n",
+      " [6.39705106e+01]\n",
+      " [4.08302908e+01]\n",
+      " [3.77406573e+01]\n",
+      " [8.09364971e+01]\n",
+      " [7.09035460e+01]\n",
+      " [9.54333815e+01]\n",
+      " [3.51936240e+01]\n",
+      " [8.97542765e+01]\n",
+      " [7.69967186e+01]\n",
+      " [3.57424652e+01]\n",
+      " [6.21665436e+01]\n",
+      " [2.88569958e+01]\n",
+      " [8.74399917e+01]\n",
+      " [1.12427317e+01]\n",
+      " [2.12434361e+01]\n",
+      " [1.83033292e+01]\n",
+      " [4.03026002e+01]\n",
+      " [7.45232960e+01]\n",
+      " [5.26907449e+01]\n",
+      " [4.87676324e+01]\n",
+      " [5.45964897e-02]\n",
+      " [4.25401725e+01]\n",
+      " [6.35537748e+00]\n",
+      " [2.08253252e+01]\n",
+      " [9.32393939e+01]\n",
+      " [2.15398204e+01]\n",
+      " [8.58337639e+01]\n",
+      " [8.02893372e+01]\n",
+      " [1.59146237e+01]\n",
+      " [6.05711957e+01]\n",
+      " [1.15661872e+01]\n",
+      " [7.27888158e+01]\n",
+      " [6.37462277e+01]\n",
+      " [8.11938562e+01]\n",
+      " [4.79384549e+01]\n",
+      " [9.14863088e+01]\n",
+      " [4.93489468e+00]\n",
+      " [2.92888565e+01]\n",
+      " [7.15052597e+01]\n",
+      " [4.18109212e+01]\n",
+      " [1.72951354e+01]\n",
+      " [1.07210745e+01]\n",
+      " [8.17339111e+01]\n",
+      " [4.73142978e+01]\n",
+      " [8.82283672e+01]\n",
+      " [7.33289134e+01]\n",
+      " [4.09726206e+01]\n",
+      " [3.73511014e+01]\n",
+      " [5.15638347e+01]\n",
+      " [8.89059953e+01]\n",
+      " [7.37278580e+01]\n",
+      " [5.15296427e-01]\n",
+      " [6.94157851e+01]\n",
+      " [9.19507407e+01]\n",
+      " [7.10455760e+01]\n",
+      " [1.77005782e+01]\n",
+      " [4.83518127e+01]\n",
+      " [1.40316018e+01]\n",
+      " [3.58995278e+01]\n",
+      " [9.37117042e+01]\n",
+      " [9.23305308e+01]\n",
+      " [2.82836852e+01]\n",
+      " [3.39631044e+01]\n",
+      " [6.00212868e+01]\n",
+      " [9.63197295e+01]\n",
+      " [1.47801334e+01]\n",
+      " [2.56916644e+01]\n",
+      " [8.73556827e+01]\n",
+      " [4.91892232e+01]\n",
+      " [8.98961092e+01]\n",
+      " [1.85517898e+01]\n",
+      " [5.32668587e+01]\n",
+      " [3.26269633e+01]\n",
+      " [3.16542560e+01]\n",
+      " [4.46876964e+01]\n",
+      " [4.33077449e+01]\n",
+      " [3.57346880e+01]\n",
+      " [9.14970770e+01]\n",
+      " [7.31744185e+01]\n",
+      " [7.27546991e+01]\n",
+      " [2.89913450e+01]\n",
+      " [5.77709424e+01]\n",
+      " [7.79179433e+01]\n",
+      " [7.95590369e+01]\n",
+      " [3.44530461e+01]\n",
+      " [7.70872757e+01]\n",
+      " [7.35893897e+01]\n",
+      " [1.41506486e+01]\n",
+      " [8.65945469e+01]\n",
+      " [4.41321470e+01]\n",
+      " [4.86410449e+01]\n",
+      " [4.48369179e+01]\n",
+      " [5.67846001e+01]\n",
+      " [6.21169247e+01]\n",
+      " [4.98179566e+01]\n",
+      " [8.66788543e+01]\n",
+      " [6.27734756e+01]\n",
+      " [4.01427949e+01]\n",
+      " [4.16691757e+01]\n",
+      " [8.10838615e+01]\n",
+      " [3.48191943e+01]\n",
+      " [2.11454796e+01]\n",
+      " [5.93831880e+00]\n",
+      " [8.76026848e+01]\n",
+      " [9.18546451e+01]\n",
+      " [1.20120182e+01]\n",
+      " [3.34473741e+01]\n",
+      " [1.75372070e+01]\n",
+      " [1.15898469e+01]\n",
+      " [8.99866743e+01]\n",
+      " [5.68772591e+00]\n",
+      " [9.80485663e+01]\n",
+      " [9.64508607e+00]\n",
+      " [8.63470649e+01]\n",
+      " [5.66506107e+01]\n",
+      " [3.67917488e+01]\n",
+      " [3.42342377e+01]\n",
+      " [7.57364143e+01]\n",
+      " [3.14573295e+01]\n",
+      " [6.57318917e+01]\n",
+      " [5.17326084e+01]\n",
+      " [4.84965645e+01]\n",
+      " [9.01162171e+01]\n",
+      " [5.54645059e+01]\n",
+      " [8.26861603e+01]\n",
+      " [7.25573534e+01]\n",
+      " [3.85572461e+00]\n",
+      " [7.73110053e+01]\n",
+      " [2.16870250e+01]\n",
+      " [9.03149647e+01]\n",
+      " [4.29241906e+00]\n",
+      " [3.33072034e+01]\n",
+      " [9.97329472e+00]\n",
+      " [4.75589117e+01]\n",
+      " [8.20022436e+01]\n",
+      " [2.98187360e+01]\n",
+      " [1.50934897e+01]\n",
+      " [3.30267036e+01]\n",
+      " [8.13880142e+01]\n",
+      " [1.40383958e+01]\n",
+      " [2.27362449e+01]\n",
+      " [6.88519645e+00]\n",
+      " [7.05710044e+01]\n",
+      " [3.95233244e+01]\n",
+      " [3.10839977e+01]\n",
+      " [7.18626390e+01]\n",
+      " [3.35977542e+01]\n",
+      " [7.27771273e+01]\n",
+      " [8.15199395e+01]\n",
+      " [2.17662843e+01]\n",
+      " [9.73818697e+01]\n",
+      " [1.62357948e+01]\n",
+      " [2.90840907e+01]\n",
+      " [1.79795291e+01]\n",
+      " [3.45505656e+01]\n",
+      " [4.80060888e+01]\n",
+      " [5.22175869e+01]\n",
+      " [8.53606042e+01]\n",
+      " [8.89447909e+01]\n",
+      " [2.20103861e+01]\n",
+      " [6.22894032e+01]\n",
+      " [1.11496057e+01]\n",
+      " [4.58969860e+01]\n",
+      " [3.22333538e+01]\n",
+      " [3.16500745e+01]\n",
+      " [4.82584242e+01]\n",
+      " [7.29827636e+01]\n",
+      " [6.91826588e+00]\n",
+      " [8.79173338e+01]\n",
+      " [7.34813775e+01]\n",
+      " [1.76499389e+01]\n",
+      " [9.39160909e+01]\n",
+      " [5.06312224e+01]\n",
+      " [9.99808578e+01]\n",
+      " [1.97259474e+01]\n",
+      " [5.34908198e+01]\n",
+      " [2.90248043e+01]\n",
+      " [3.04173557e+01]\n",
+      " [5.91065381e+01]\n",
+      " [9.21719067e+01]\n",
+      " [8.05263856e+01]\n",
+      " [7.23941399e+01]\n",
+      " [5.59173782e+01]\n",
+      " [9.22298504e+01]\n",
+      " [4.92361407e+01]\n",
+      " [8.73832178e+01]\n",
+      " [8.33981644e+01]\n",
+      " [2.13835347e+01]\n",
+      " [7.71225463e+01]\n",
+      " [1.21711569e+00]\n",
+      " [3.22829538e+01]\n",
+      " [2.29567445e+01]\n",
+      " [5.06862958e+01]\n",
+      " [7.36853162e+01]\n",
+      " [9.76763674e+00]\n",
+      " [5.14922202e+01]\n",
+      " [9.38412022e+01]\n",
+      " [2.28646551e+01]\n",
+      " [6.77141144e+01]] [[ 0.66813477]\n",
+      " [ 1.31602077]\n",
+      " [ 0.3065632 ]\n",
+      " [-0.43444749]\n",
+      " [ 0.15386079]\n",
+      " [ 2.97771997]\n",
+      " [ 1.75381697]\n",
+      " [ 2.86628164]\n",
+      " [ 2.55591493]\n",
+      " [ 2.43805616]\n",
+      " [ 0.42324843]\n",
+      " [ 1.85557425]\n",
+      " [ 2.00602031]\n",
+      " [ 0.61693118]\n",
+      " [ 0.73823916]\n",
+      " [ 0.95798528]\n",
+      " [ 2.34060494]\n",
+      " [ 2.88181335]\n",
+      " [ 2.64171803]\n",
+      " [ 1.00799127]\n",
+      " [ 0.04845491]\n",
+      " [ 0.6234445 ]\n",
+      " [ 1.93959115]\n",
+      " [ 2.01239168]\n",
+      " [ 1.31453099]\n",
+      " [ 1.60110856]\n",
+      " [ 1.36688728]\n",
+      " [ 1.88451106]\n",
+      " [ 1.02232958]\n",
+      " [ 0.40507587]\n",
+      " [ 2.18823572]\n",
+      " [ 2.34902336]\n",
+      " [ 2.94821574]\n",
+      " [ 2.12232376]\n",
+      " [ 1.93296889]\n",
+      " [-0.87096279]\n",
+      " [ 0.17209879]\n",
+      " [-0.89959334]\n",
+      " [ 1.53757454]\n",
+      " [ 1.07795874]\n",
+      " [ 0.45557922]\n",
+      " [ 1.64292294]\n",
+      " [ 1.66948575]\n",
+      " [ 1.68331228]\n",
+      " [ 1.06893511]\n",
+      " [-0.35994809]\n",
+      " [ 2.6632439 ]\n",
+      " [ 0.47534168]\n",
+      " [ 0.1316211 ]\n",
+      " [ 0.98881312]\n",
+      " [ 2.4537856 ]\n",
+      " [ 1.87138551]\n",
+      " [ 0.40547988]\n",
+      " [ 0.81328079]\n",
+      " [ 2.38143186]\n",
+      " [ 0.23465271]\n",
+      " [ 0.81183955]\n",
+      " [ 1.57762791]\n",
+      " [ 0.47569016]\n",
+      " [ 0.15856914]\n",
+      " [ 1.21734293]\n",
+      " [-0.78702483]\n",
+      " [ 0.4274304 ]\n",
+      " [ 2.82336218]\n",
+      " [ 2.15472948]\n",
+      " [-0.1123711 ]\n",
+      " [ 1.06685925]\n",
+      " [ 1.53259989]\n",
+      " [ 2.13939375]\n",
+      " [ 1.39448156]\n",
+      " [-0.19927524]\n",
+      " [ 0.49637748]\n",
+      " [-0.19087426]\n",
+      " [ 0.81208226]\n",
+      " [ 0.98616331]\n",
+      " [ 0.77483431]\n",
+      " [ 1.014844  ]\n",
+      " [ 1.17996415]\n",
+      " [-0.94311926]\n",
+      " [ 1.31423819]\n",
+      " [ 0.64216013]\n",
+      " [ 0.30537367]\n",
+      " [ 1.70294535]\n",
+      " [ 0.13523325]\n",
+      " [ 1.47434632]\n",
+      " [ 2.4646554 ]\n",
+      " [ 0.88468523]\n",
+      " [ 0.92847808]\n",
+      " [ 1.52720767]\n",
+      " [ 0.98144228]\n",
+      " [ 0.84212447]\n",
+      " [ 0.85608589]\n",
+      " [ 1.5260078 ]\n",
+      " [ 1.59890598]\n",
+      " [ 1.17794786]\n",
+      " [-0.48650084]\n",
+      " [ 2.52544061]\n",
+      " [ 2.3119181 ]\n",
+      " [ 1.79024492]\n",
+      " [ 2.45246702]\n",
+      " [-0.22499407]\n",
+      " [ 2.84894535]\n",
+      " [ 0.06751148]\n",
+      " [ 2.20409043]\n",
+      " [ 1.68998453]\n",
+      " [ 1.47232991]\n",
+      " [ 2.0093301 ]\n",
+      " [ 2.40096001]\n",
+      " [-0.17295861]\n",
+      " [ 1.57739629]\n",
+      " [ 0.68390334]\n",
+      " [ 0.61062896]\n",
+      " [ 2.37014899]\n",
+      " [-0.9777074 ]\n",
+      " [ 1.5890767 ]\n",
+      " [ 2.14829487]\n",
+      " [ 0.14592632]\n",
+      " [ 1.14727558]\n",
+      " [ 0.22233048]\n",
+      " [ 0.13967813]\n",
+      " [ 0.8850604 ]\n",
+      " [ 0.29964182]\n",
+      " [ 0.99362952]\n",
+      " [ 2.85990646]\n",
+      " [ 0.0868827 ]\n",
+      " [ 1.06391907]\n",
+      " [ 2.0541751 ]\n",
+      " [ 0.04236041]\n",
+      " [ 1.10194419]\n",
+      " [ 0.9723756 ]\n",
+      " [-0.8309368 ]\n",
+      " [-0.89346452]\n",
+      " [ 2.75404272]\n",
+      " [-0.89265705]\n",
+      " [ 2.42996   ]\n",
+      " [ 2.3878687 ]\n",
+      " [ 1.96735186]\n",
+      " [ 0.7865451 ]\n",
+      " [ 1.12830074]\n",
+      " [-0.39459046]\n",
+      " [ 1.60572315]\n",
+      " [ 0.19221046]\n",
+      " [ 1.31419846]\n",
+      " [ 2.85182801]\n",
+      " [-0.86551438]\n",
+      " [ 2.79220839]\n",
+      " [ 1.34925651]\n",
+      " [-0.72823358]\n",
+      " [ 1.11035093]\n",
+      " [ 0.33800835]\n",
+      " [ 1.25678084]\n",
+      " [ 0.4282225 ]\n",
+      " [-0.20219216]\n",
+      " [-0.78899542]\n",
+      " [ 0.39741677]\n",
+      " [ 0.94831517]\n",
+      " [-0.69064394]\n",
+      " [ 2.28731706]\n",
+      " [ 0.52545047]\n",
+      " [ 0.71742611]\n",
+      " [ 1.58579853]\n",
+      " [ 2.35534572]\n",
+      " [ 1.98926353]\n",
+      " [-0.20060304]\n",
+      " [-0.16187994]\n",
+      " [ 0.89172824]\n",
+      " [ 1.23013256]\n",
+      " [ 0.58314678]\n",
+      " [-0.66583509]\n",
+      " [ 0.62078025]\n",
+      " [ 1.18659371]\n",
+      " [-0.42286569]\n",
+      " [ 1.2746768 ]\n",
+      " [ 1.85163569]\n",
+      " [ 0.88474457]\n",
+      " [-0.0771314 ]\n",
+      " [ 1.92318962]\n",
+      " [ 1.00485326]\n",
+      " [ 2.6977684 ]\n",
+      " [ 0.03001438]\n",
+      " [-0.68678959]\n",
+      " [ 0.1835083 ]\n",
+      " [ 1.22453745]\n",
+      " [-0.66158844]\n",
+      " [-0.11288911]\n",
+      " [-0.42741085]\n",
+      " [ 1.34695144]\n",
+      " [ 2.60271768]\n",
+      " [-0.68076689]\n",
+      " [ 0.47616936]\n",
+      " [ 2.56415973]\n",
+      " [ 2.58498205]\n",
+      " [ 0.07742279]\n",
+      " [ 1.77870939]\n",
+      " [ 1.00332935]\n",
+      " [ 0.18417585]\n",
+      " [ 0.71366822]\n",
+      " [ 1.335795  ]\n",
+      " [ 1.01169098]\n",
+      " [ 0.77345589]\n",
+      " [ 0.50935201]\n",
+      " [ 1.14086472]\n",
+      " [ 1.32686363]\n",
+      " [ 0.04674005]\n",
+      " [ 2.55540465]\n",
+      " [ 1.01486646]\n",
+      " [ 0.34335018]\n",
+      " [ 2.40539438]\n",
+      " [ 0.96125749]\n",
+      " [ 1.56618381]\n",
+      " [-0.24057104]\n",
+      " [ 1.25455417]\n",
+      " [ 1.56954824]\n",
+      " [ 1.74253734]\n",
+      " [ 2.44533884]\n",
+      " [ 2.42007382]\n",
+      " [ 1.41156441]\n",
+      " [ 2.43573611]\n",
+      " [ 2.72731404]\n",
+      " [ 2.51695361]\n",
+      " [ 1.80157184]\n",
+      " [ 1.31545753]\n",
+      " [ 1.72125817]\n",
+      " [ 0.89841713]\n",
+      " [-0.09735563]\n",
+      " [ 1.56596998]\n",
+      " [ 0.81455568]\n",
+      " [ 1.83471883]\n",
+      " [ 2.46818242]\n",
+      " [-0.7267032 ]\n",
+      " [ 1.433339  ]\n",
+      " [ 2.5269166 ]\n",
+      " [ 2.05386702]\n",
+      " [ 2.30878015]\n",
+      " [ 1.98876227]\n",
+      " [-0.18738295]\n",
+      " [-0.08616831]\n",
+      " [ 1.13955819]\n",
+      " [ 0.49842919]\n",
+      " [ 2.57623837]\n",
+      " [-0.87939228]\n",
+      " [ 1.26923401]\n",
+      " [ 2.31721529]\n",
+      " [ 1.63794229]\n",
+      " [ 1.73119454]\n",
+      " [ 2.01700523]\n",
+      " [ 0.9716766 ]\n",
+      " [-0.48420225]\n",
+      " [ 1.02390805]\n",
+      " [-0.62061453]\n",
+      " [-0.59009694]\n",
+      " [ 0.16653078]\n",
+      " [ 1.30951467]\n",
+      " [-0.48679078]\n",
+      " [ 1.3243061 ]\n",
+      " [ 2.33322994]\n",
+      " [ 0.98977229]\n",
+      " [ 1.99323744]\n",
+      " [ 2.13210224]\n",
+      " [ 0.19905825]\n",
+      " [-0.853667  ]\n",
+      " [ 1.33434014]\n",
+      " [ 1.27542928]\n",
+      " [ 0.96035562]\n",
+      " [-0.10093386]\n",
+      " [ 0.20221926]\n",
+      " [ 0.7697903 ]\n",
+      " [ 2.50459435]\n",
+      " [ 1.73522595]\n",
+      " [-0.98779749]\n",
+      " [-0.13194163]\n",
+      " [ 0.6907698 ]\n",
+      " [ 1.30671676]\n",
+      " [ 2.02411977]\n",
+      " [ 1.04090034]\n",
+      " [ 2.39063569]\n",
+      " [ 0.53167851]\n",
+      " [ 0.61084813]\n",
+      " [ 1.54236557]\n",
+      " [ 1.16287019]\n",
+      " [-0.13636115]\n",
+      " [ 1.16431674]\n",
+      " [-0.84752834]\n",
+      " [ 1.01431721]\n",
+      " [ 1.30944956]\n",
+      " [ 1.00546748]\n",
+      " [ 0.81053317]\n",
+      " [ 1.0379322 ]\n",
+      " [ 1.14739812]\n",
+      " [ 1.44449124]\n",
+      " [-0.07801965]\n",
+      " [ 2.89846276]\n",
+      " [ 0.84594925]\n",
+      " [ 1.57049499]\n",
+      " [ 2.47493571]\n",
+      " [-0.01225218]\n",
+      " [ 1.57967469]\n",
+      " [-0.9830742 ]\n",
+      " [ 0.43604244]\n",
+      " [ 1.8016273 ]\n",
+      " [ 1.99378626]\n",
+      " [ 2.3007534 ]\n",
+      " [ 1.05891011]\n",
+      " [ 2.91332906]\n",
+      " [ 0.50433448]\n",
+      " [ 0.96049998]\n",
+      " [ 1.80992518]\n",
+      " [-0.67048838]\n",
+      " [ 0.73963809]\n",
+      " [ 1.29070494]\n",
+      " [ 1.31414382]\n",
+      " [ 0.88963416]\n",
+      " [ 2.97599863]\n",
+      " [ 0.44820726]\n",
+      " [-0.76376116]\n",
+      " [ 0.54609972]\n",
+      " [ 0.99229828]\n",
+      " [-0.14750142]\n",
+      " [-0.7655045 ]\n",
+      " [ 0.13615385]\n",
+      " [ 2.78606813]\n",
+      " [ 1.3955389 ]\n",
+      " [-0.06005365]\n",
+      " [ 0.05103425]\n",
+      " [ 1.32360038]\n",
+      " [ 2.94725558]\n",
+      " [ 1.29181604]\n",
+      " [ 0.86584337]\n",
+      " [ 1.17816011]\n",
+      " [ 2.11910818]\n",
+      " [-0.30933701]\n",
+      " [-0.17462883]\n",
+      " [ 0.53633453]\n",
+      " [ 1.40700717]\n",
+      " [ 2.54847451]\n",
+      " [ 2.71566421]\n",
+      " [ 0.72718237]\n",
+      " [-0.18450182]\n",
+      " [ 2.68740496]\n",
+      " [ 2.00199786]\n",
+      " [-0.46515494]\n",
+      " [ 2.03983544]\n",
+      " [ 2.51529259]\n",
+      " [ 0.77414369]\n",
+      " [ 0.43156579]\n",
+      " [ 2.48385697]\n",
+      " [ 1.8420807 ]\n",
+      " [ 1.31535038]\n",
+      " [ 1.16513427]\n",
+      " [ 1.40200318]\n",
+      " [ 2.98806718]\n",
+      " [-0.08697728]\n",
+      " [-0.67408423]\n",
+      " [ 2.02339201]\n",
+      " [ 1.12902993]\n",
+      " [ 0.97714736]\n",
+      " [ 0.5027817 ]\n",
+      " [ 0.45760056]\n",
+      " [ 1.13009739]\n",
+      " [ 0.98663045]\n",
+      " [ 0.42459369]\n",
+      " [ 1.38833513]\n",
+      " [-0.63661919]\n",
+      " [ 2.98847498]\n",
+      " [ 0.27480734]\n",
+      " [ 2.83037878]\n",
+      " [ 1.33171188]\n",
+      " [ 2.67959057]\n",
+      " [ 1.40322624]\n",
+      " [ 0.26508889]\n",
+      " [ 2.41590097]\n",
+      " [ 2.6331212 ]\n",
+      " [ 2.07890488]\n",
+      " [ 0.6998719 ]\n",
+      " [-0.89932848]\n",
+      " [ 0.55527056]\n",
+      " [ 1.10909596]\n",
+      " [ 1.33562124]\n",
+      " [ 2.90702569]\n",
+      " [ 2.35688322]\n",
+      " [ 0.16439889]\n",
+      " [ 2.98488805]\n",
+      " [ 1.81672789]\n",
+      " [ 1.57920357]\n",
+      " [ 1.1178945 ]\n",
+      " [ 2.19680926]\n",
+      " [ 1.86696187]\n",
+      " [ 1.03432353]\n",
+      " [ 1.81180352]\n",
+      " [ 2.60078659]\n",
+      " [ 1.87326713]\n",
+      " [ 0.02761619]\n",
+      " [ 0.68479001]\n",
+      " [ 1.18544146]\n",
+      " [-0.18213977]\n",
+      " [ 1.29245014]\n",
+      " [-0.6283058 ]\n",
+      " [-0.35730687]\n",
+      " [ 1.25319787]\n",
+      " [-0.20614422]\n",
+      " [ 2.62783462]\n",
+      " [ 0.9818207 ]\n",
+      " [ 1.46496131]\n",
+      " [ 2.0869284 ]\n",
+      " [ 0.86956188]\n",
+      " [ 2.54785698]\n",
+      " [ 2.82041023]\n",
+      " [ 0.85934914]\n",
+      " [-0.56230404]\n",
+      " [-0.16467809]\n",
+      " [ 1.11744233]\n",
+      " [-0.89238432]\n",
+      " [ 0.85616187]\n",
+      " [ 1.80774318]\n",
+      " [-0.11888603]\n",
+      " [ 1.5984753 ]\n",
+      " [ 1.2205456 ]\n",
+      " [ 1.16870611]\n",
+      " [ 0.86329279]\n",
+      " [-0.75913292]\n",
+      " [ 0.04377964]\n",
+      " [-0.24248319]\n",
+      " [-0.01762735]\n",
+      " [-0.34442283]\n",
+      " [ 1.21448543]\n",
+      " [ 0.12810356]\n",
+      " [ 0.06411005]\n",
+      " [ 1.46595825]\n",
+      " [ 0.89447368]\n",
+      " [ 1.41517504]\n",
+      " [-0.77160612]\n",
+      " [ 1.52415734]\n",
+      " [ 0.83071601]\n",
+      " [ 1.31633816]\n",
+      " [ 2.33868241]\n",
+      " [ 0.00867654]\n",
+      " [ 0.56027784]\n",
+      " [ 1.57332254]\n",
+      " [ 2.0940039 ]\n",
+      " [ 0.45433339]\n",
+      " [ 0.72100292]\n",
+      " [ 1.68737825]\n",
+      " [ 0.44777093]\n",
+      " [ 0.3698864 ]\n",
+      " [ 0.88455053]\n",
+      " [ 0.77557482]\n",
+      " [ 1.81203435]\n",
+      " [ 1.06321379]\n",
+      " [ 2.03181272]\n",
+      " [ 1.63049906]\n",
+      " [-0.97626286]\n",
+      " [-0.69068239]\n",
+      " [ 1.80413042]\n",
+      " [-0.59674667]\n",
+      " [ 2.06100483]\n",
+      " [ 0.69323505]\n",
+      " [ 0.30878565]\n",
+      " [ 1.13399896]\n",
+      " [-0.72260053]\n",
+      " [ 0.21999216]\n",
+      " [ 2.14730668]\n",
+      " [ 1.84056269]\n",
+      " [-0.04851959]\n",
+      " [-0.48350025]\n",
+      " [-0.64248449]\n",
+      " [ 0.67546847]\n",
+      " [ 0.95297311]\n",
+      " [ 0.99396422]\n",
+      " [ 1.65825005]\n",
+      " [-0.62746667]\n",
+      " [ 0.15499706]\n",
+      " [ 1.04584073]\n",
+      " [ 0.78933655]\n",
+      " [ 0.12552391]\n",
+      " [ 0.08908649]\n",
+      " [-0.19459353]\n",
+      " [ 2.4010217 ]\n",
+      " [ 2.35963298]\n",
+      " [-0.88661859]\n",
+      " [ 1.74389968]\n",
+      " [ 0.72187234]\n",
+      " [-0.05132694]\n",
+      " [ 1.95148352]\n",
+      " [ 1.0146093 ]\n",
+      " [ 1.31591853]\n",
+      " [ 0.64517143]\n",
+      " [ 2.48242271]\n",
+      " [ 1.98933575]\n",
+      " [ 2.40651448]\n",
+      " [ 0.12407882]\n",
+      " [ 1.23085317]\n",
+      " [ 1.93875436]\n",
+      " [ 1.53804514]\n",
+      " [ 0.69658336]\n",
+      " [ 0.99696289]\n",
+      " [ 2.42244704]\n",
+      " [ 2.8511632 ]\n",
+      " [ 2.54658899]\n",
+      " [ 1.61414937]\n",
+      " [ 0.46153375]\n",
+      " [ 0.84177411]\n",
+      " [-0.35378991]\n",
+      " [ 0.98253046]\n",
+      " [-0.23629697]\n",
+      " [ 0.99765661]\n",
+      " [ 0.20981696]\n",
+      " [-0.9867844 ]\n",
+      " [-0.48648906]\n",
+      " [ 1.50147058]\n",
+      " [ 0.71928115]\n",
+      " [-0.17448451]\n",
+      " [ 0.79415041]\n",
+      " [ 1.01303656]\n",
+      " [ 0.72588553]\n",
+      " [ 0.55690717]\n",
+      " [ 0.99316006]\n",
+      " [ 1.2750938 ]\n",
+      " [ 2.09684041]\n",
+      " [-0.70044332]\n",
+      " [ 0.16930543]\n",
+      " [-0.65363116]\n",
+      " [ 0.98980666]\n",
+      " [ 0.50971151]\n",
+      " [ 1.02350747]\n",
+      " [ 2.20051301]\n",
+      " [-0.40907486]\n",
+      " [ 2.13955276]\n",
+      " [-0.37777203]\n",
+      " [ 0.45771876]\n",
+      " [ 1.02027057]\n",
+      " [ 2.62084939]\n",
+      " [ 2.18615786]\n",
+      " [ 0.4933514 ]\n",
+      " [ 0.41846998]\n",
+      " [ 2.56856656]\n",
+      " [ 0.92411773]\n",
+      " [ 1.24248072]\n",
+      " [ 0.740131  ]\n",
+      " [-0.74306897]\n",
+      " [ 2.44472287]\n",
+      " [ 2.05103356]\n",
+      " [ 2.81139486]\n",
+      " [-0.14425106]\n",
+      " [ 2.72331597]\n",
+      " [ 2.3593933 ]\n",
+      " [ 1.38067742]\n",
+      " [ 1.19653449]\n",
+      " [ 1.55861718]\n",
+      " [ 1.94148896]\n",
+      " [ 0.93813675]\n",
+      " [ 0.20553079]\n",
+      " [ 1.54553923]\n",
+      " [ 1.52418336]\n",
+      " [ 1.48197817]\n",
+      " [ 0.36051043]\n",
+      " [ 0.42950912]\n",
+      " [ 0.79159201]\n",
+      " [-0.18250418]\n",
+      " [ 0.92603791]\n",
+      " [ 2.00512112]\n",
+      " [-0.69003979]\n",
+      " [ 2.18680526]\n",
+      " [ 0.51408375]\n",
+      " [ 1.29245091]\n",
+      " [ 0.12978883]\n",
+      " [-0.31773579]\n",
+      " [-0.65122543]\n",
+      " [-0.04779349]\n",
+      " [ 2.13720383]\n",
+      " [ 2.26425079]\n",
+      " [-0.72421079]\n",
+      " [ 0.02742278]\n",
+      " [ 1.01013574]\n",
+      " [ 1.14994187]\n",
+      " [ 1.74294086]\n",
+      " [-0.48561105]\n",
+      " [ 0.58559621]\n",
+      " [ 1.74259792]\n",
+      " [ 0.70085857]\n",
+      " [ 2.17174599]\n",
+      " [ 0.68702394]\n",
+      " [ 1.30699521]\n",
+      " [ 1.82755885]\n",
+      " [ 2.33393756]\n",
+      " [ 1.18877087]\n",
+      " [ 1.32387667]\n",
+      " [ 0.8651171 ]\n",
+      " [ 1.62045191]\n",
+      " [ 1.82371516]\n",
+      " [ 2.15991501]\n",
+      " [ 1.01284298]\n",
+      " [ 1.17847028]\n",
+      " [-0.86843814]\n",
+      " [ 1.86560931]\n",
+      " [ 0.98847338]\n",
+      " [-0.01773832]\n",
+      " [ 0.97964075]\n",
+      " [ 0.86357605]\n",
+      " [ 1.53102788]\n",
+      " [ 0.25103483]\n",
+      " [ 1.01245268]\n",
+      " [ 2.56863395]\n",
+      " [ 0.67284032]\n",
+      " [ 1.83434459]\n",
+      " [ 1.11700765]\n",
+      " [ 1.24674482]\n",
+      " [ 1.28140359]\n",
+      " [-0.76360862]\n",
+      " [ 2.88576722]\n",
+      " [ 0.09261677]\n",
+      " [ 2.97636505]\n",
+      " [ 1.15547696]\n",
+      " [ 1.41952877]\n",
+      " [ 2.17879354]\n",
+      " [ 1.49979421]\n",
+      " [ 2.1958345 ]\n",
+      " [ 2.34468444]\n",
+      " [ 0.87084499]\n",
+      " [ 2.35261403]\n",
+      " [ 0.5164929 ]\n",
+      " [-0.46231991]\n",
+      " [ 2.10632766]\n",
+      " [ 0.9079316 ]\n",
+      " [ 1.37807708]\n",
+      " [-0.199073  ]\n",
+      " [ 2.8096879 ]\n",
+      " [ 1.49581648]\n",
+      " [ 1.91999726]\n",
+      " [ 0.89211678]\n",
+      " [ 0.9463478 ]\n",
+      " [ 1.87721533]\n",
+      " [-0.67525205]\n",
+      " [-0.09191318]\n",
+      " [ 0.99868641]\n",
+      " [ 2.02679805]\n",
+      " [ 1.23922038]\n",
+      " [ 1.24589001]\n",
+      " [-0.85268867]\n",
+      " [ 2.63687505]\n",
+      " [-0.03336102]\n",
+      " [ 0.98142127]\n",
+      " [-0.41615689]\n",
+      " [ 1.06811724]\n",
+      " [ 2.72699094]\n",
+      " [ 2.22598218]\n",
+      " [ 0.96061872]\n",
+      " [ 1.27226996]\n",
+      " [ 0.45640909]\n",
+      " [-0.97731649]\n",
+      " [ 1.54680992]\n",
+      " [ 1.07832234]\n",
+      " [ 1.11574143]\n",
+      " [-0.74660055]\n",
+      " [-0.13545391]\n",
+      " [-0.50537843]\n",
+      " [ 1.19817071]\n",
+      " [ 0.85721588]\n",
+      " [ 0.95871716]\n",
+      " [ 2.98824884]\n",
+      " [ 0.35824253]\n",
+      " [ 0.13663226]\n",
+      " [ 0.39895801]\n",
+      " [ 1.2452925 ]\n",
+      " [ 2.54803953]\n",
+      " [ 1.91665261]\n",
+      " [ 2.72716657]\n",
+      " [-0.59408149]\n",
+      " [ 2.05743407]\n",
+      " [ 1.02689364]\n",
+      " [ 1.34889884]\n",
+      " [ 2.69265569]\n",
+      " [-0.28075363]\n",
+      " [-0.5781077 ]\n",
+      " [ 0.68308878]\n",
+      " [ 0.80145459]\n",
+      " [ 0.72925521]\n",
+      " [ 0.42134833]\n",
+      " [ 0.81492474]\n",
+      " [-0.76516336]\n",
+      " [ 1.40733052]\n",
+      " [ 1.2626796 ]\n",
+      " [ 1.83412665]\n",
+      " [ 0.61598253]\n",
+      " [ 0.6548959 ]\n",
+      " [-0.89299951]\n",
+      " [ 1.05491535]\n",
+      " [ 2.87133666]\n",
+      " [ 0.7074846 ]\n",
+      " [ 1.32977746]\n",
+      " [ 0.33802877]\n",
+      " [ 0.08087793]\n",
+      " [ 0.92015652]\n",
+      " [ 1.60814507]\n",
+      " [ 1.73848178]\n",
+      " [ 0.90282003]\n",
+      " [ 0.80457087]\n",
+      " [ 1.8425432 ]\n",
+      " [ 2.03324341]\n",
+      " [ 2.07070495]\n",
+      " [ 0.54901832]\n",
+      " [-0.32020877]\n",
+      " [-0.18678808]\n",
+      " [ 2.97037269]\n",
+      " [ 1.61746184]\n",
+      " [-0.14754161]\n",
+      " [ 1.39372665]\n",
+      " [ 2.35290327]\n",
+      " [ 1.26706994]\n",
+      " [ 1.39631181]\n",
+      " [ 0.72296967]\n",
+      " [-0.07456271]\n",
+      " [-0.48287535]\n",
+      " [ 2.13636693]\n",
+      " [ 2.96964408]\n",
+      " [ 2.11881186]\n",
+      " [ 1.36572369]\n",
+      " [ 0.18406089]\n",
+      " [ 1.69937905]\n",
+      " [ 0.38420369]\n",
+      " [ 1.63800921]\n",
+      " [-0.12605319]\n",
+      " [ 0.93101681]\n",
+      " [ 1.01970297]\n",
+      " [ 1.88720618]\n",
+      " [ 1.11299765]\n",
+      " [ 0.28975644]\n",
+      " [ 0.16462905]\n",
+      " [ 0.70762404]\n",
+      " [ 2.48641659]\n",
+      " [ 0.89807587]\n",
+      " [ 0.34753848]\n",
+      " [ 0.74052937]\n",
+      " [ 0.83892774]\n",
+      " [ 0.97833974]\n",
+      " [ 1.30520583]\n",
+      " [ 1.06023205]\n",
+      " [ 0.54078426]\n",
+      " [ 0.9174518 ]\n",
+      " [ 1.25296159]\n",
+      " [ 0.85193191]\n",
+      " [ 0.10615161]\n",
+      " [ 1.31787948]\n",
+      " [ 2.33645714]\n",
+      " [ 0.32599509]\n",
+      " [-0.08496333]\n",
+      " [ 2.87345481]\n",
+      " [ 0.24872236]\n",
+      " [ 2.18711033]\n",
+      " [ 2.6751064 ]\n",
+      " [ 1.05708967]\n",
+      " [-0.36710507]\n",
+      " [ 0.8164022 ]\n",
+      " [ 0.75865413]\n",
+      " [ 1.25432771]\n",
+      " [ 2.89305456]\n",
+      " [ 0.48342232]\n",
+      " [-0.47857338]\n",
+      " [ 1.58284263]\n",
+      " [ 1.4146695 ]\n",
+      " [ 0.72468464]\n",
+      " [-0.23532542]\n",
+      " [ 2.84901089]\n",
+      " [ 0.94369664]\n",
+      " [ 0.93789953]\n",
+      " [ 0.11910866]\n",
+      " [ 2.00320295]\n",
+      " [-0.66493158]\n",
+      " [ 0.89182987]\n",
+      " [ 2.69880566]\n",
+      " [ 0.46232044]\n",
+      " [-0.82171904]\n",
+      " [ 0.34820664]\n",
+      " [ 1.44261643]\n",
+      " [-0.71316466]\n",
+      " [-0.20701808]\n",
+      " [-0.49995753]\n",
+      " [ 2.20327097]\n",
+      " [ 1.19664293]\n",
+      " [ 2.63959   ]\n",
+      " [ 0.417414  ]\n",
+      " [ 2.66718052]\n",
+      " [-0.76283994]\n",
+      " [ 0.53630341]\n",
+      " [ 1.71945048]\n",
+      " [ 0.67857431]\n",
+      " [ 2.0273848 ]\n",
+      " [ 0.92409051]\n",
+      " [ 1.93678812]\n",
+      " [-0.18014963]\n",
+      " [-0.94026674]\n",
+      " [ 2.05940086]\n",
+      " [ 1.02398199]\n",
+      " [ 0.26943417]\n",
+      " [ 1.26861351]\n",
+      " [-0.18794969]\n",
+      " [ 0.32626952]\n",
+      " [ 1.02066952]\n",
+      " [-0.60892608]\n",
+      " [ 1.88443149]\n",
+      " [-0.72700576]\n",
+      " [ 0.93589014]\n",
+      " [ 1.52486578]\n",
+      " [ 0.16226239]\n",
+      " [ 1.17957597]\n",
+      " [-0.05684125]\n",
+      " [ 1.31273185]\n",
+      " [ 1.20215299]\n",
+      " [-0.47277613]\n",
+      " [ 1.30955397]\n",
+      " [ 1.18337844]\n",
+      " [-0.16318106]\n",
+      " [ 0.25970662]\n",
+      " [ 1.381568  ]\n",
+      " [ 1.14447816]\n",
+      " [-0.19109912]\n",
+      " [ 2.6720835 ]\n",
+      " [-0.48838917]\n",
+      " [ 2.1915705 ]\n",
+      " [ 0.00923366]\n",
+      " [ 1.36743923]\n",
+      " [-0.71750794]\n",
+      " [ 1.23555476]\n",
+      " [-0.40760909]\n",
+      " [ 1.7940384 ]\n",
+      " [ 2.21722335]\n",
+      " [ 0.3719579 ]\n",
+      " [ 1.87762504]\n",
+      " [-0.07289142]\n",
+      " [-0.54519955]\n",
+      " [ 1.14551776]\n",
+      " [ 0.97467933]\n",
+      " [ 0.91289942]\n",
+      " [-0.17186284]\n",
+      " [ 0.88318271]\n",
+      " [ 0.98372459]\n",
+      " [ 0.68614629]\n",
+      " [ 0.41085855]\n",
+      " [-0.65087933]\n",
+      " [-0.08707634]\n",
+      " [ 1.28387088]\n",
+      " [ 1.08348348]\n",
+      " [ 0.89214908]\n",
+      " [-0.88693667]\n",
+      " [ 1.81821755]\n",
+      " [ 1.40367113]\n",
+      " [ 0.32330242]\n",
+      " [-0.45485682]\n",
+      " [-0.12801806]\n",
+      " [-0.25784517]\n",
+      " [ 2.75148125]\n",
+      " [ 2.67260881]\n",
+      " [ 0.66079654]\n",
+      " [ 2.48202847]\n",
+      " [ 0.40872677]\n",
+      " [-0.72829674]\n",
+      " [ 1.00426175]\n",
+      " [ 0.72290491]\n",
+      " [-0.75607025]\n",
+      " [ 2.33909999]\n",
+      " [ 0.30680458]\n",
+      " [-0.48750235]\n",
+      " [-0.04801966]\n",
+      " [ 1.02181487]\n",
+      " [ 1.67279612]\n",
+      " [-0.16157376]\n",
+      " [ 2.46075842]\n",
+      " [ 0.9597309 ]\n",
+      " [ 0.80194492]\n",
+      " [ 1.2599166 ]\n",
+      " [ 0.68549279]\n",
+      " [ 1.00273907]\n",
+      " [-0.13080996]\n",
+      " [ 2.13817794]\n",
+      " [ 2.8677299 ]\n",
+      " [ 0.27253118]\n",
+      " [ 0.68368225]\n",
+      " [ 0.22194927]\n",
+      " [-0.18533106]\n",
+      " [ 0.36599867]\n",
+      " [-0.69845741]\n",
+      " [-0.05307715]\n",
+      " [ 1.02564161]\n",
+      " [ 1.13667351]\n",
+      " [ 2.43764236]\n",
+      " [ 1.11265829]\n",
+      " [ 2.08894783]\n",
+      " [ 1.38543443]\n",
+      " [ 0.27922207]\n",
+      " [ 1.95498551]\n",
+      " [-0.34901209]\n",
+      " [ 1.67001301]\n",
+      " [-0.93970654]\n",
+      " [ 0.780825  ]\n",
+      " [ 1.94159363]\n",
+      " [ 0.05973106]\n",
+      " [ 0.99732013]\n",
+      " [-0.05650343]\n",
+      " [ 1.88801926]\n",
+      " [ 2.60039432]\n",
+      " [ 0.88187089]\n",
+      " [ 0.53977379]\n",
+      " [ 0.91535723]\n",
+      " [ 2.7283018 ]\n",
+      " [ 1.4723322 ]\n",
+      " [ 0.80443557]\n",
+      " [-0.67293847]\n",
+      " [ 1.19141167]\n",
+      " [ 0.89638587]\n",
+      " [ 0.97666746]\n",
+      " [ 0.97527704]\n",
+      " [ 0.90209948]\n",
+      " [ 0.54842245]\n",
+      " [ 0.49025694]\n",
+      " [ 1.45158222]\n",
+      " [-0.93202097]\n",
+      " [ 1.43507421]\n",
+      " [ 0.09533539]\n",
+      " [ 2.16810344]\n",
+      " [ 2.23503859]\n",
+      " [ 0.11481403]\n",
+      " [ 0.51825632]\n",
+      " [ 2.33336229]\n",
+      " [-0.97109459]\n",
+      " [ 0.90198989]\n",
+      " [ 0.57100641]\n",
+      " [ 1.09963975]\n",
+      " [ 0.74856441]\n",
+      " [ 0.62719818]\n",
+      " [ 2.03471106]\n",
+      " [ 1.26601098]\n",
+      " [ 1.19449556]\n",
+      " [ 1.07233148]\n",
+      " [ 1.07271622]\n",
+      " [ 1.44558384]\n",
+      " [ 1.57129152]\n",
+      " [ 1.29310942]\n",
+      " [-0.90626114]\n",
+      " [ 1.62266204]\n",
+      " [ 1.86632599]\n",
+      " [ 1.60932799]\n",
+      " [ 2.31844739]\n",
+      " [ 0.70146065]\n",
+      " [ 0.7473929 ]\n",
+      " [ 2.36690354]\n",
+      " [ 1.76696531]\n",
+      " [ 0.73333005]\n",
+      " [ 2.0879304 ]\n",
+      " [ 0.92567277]\n",
+      " [-0.132142  ]\n",
+      " [ 1.83912422]\n",
+      " [ 0.92969954]\n",
+      " [ 0.1542509 ]\n",
+      " [-0.15719269]\n",
+      " [ 0.70399324]\n",
+      " [-0.00350871]\n",
+      " [ 1.8843345 ]\n",
+      " [ 0.42744202]\n",
+      " [ 0.97277399]\n",
+      " [ 1.46355395]\n",
+      " [ 2.75249542]\n",
+      " [ 0.08447769]\n",
+      " [ 0.76610088]\n",
+      " [-0.496934  ]\n",
+      " [ 2.75375046]\n",
+      " [ 2.31882584]\n",
+      " [ 0.26483067]\n",
+      " [-0.5036842 ]\n",
+      " [-0.64453266]\n",
+      " [ 0.71616785]\n",
+      " [ 0.17589782]\n",
+      " [-0.04682187]\n",
+      " [ 0.82406722]\n",
+      " [-0.21938666]\n",
+      " [ 0.58992901]\n",
+      " [ 0.73498303]\n",
+      " [ 1.98694502]\n",
+      " [ 1.61108601]\n",
+      " [ 0.91523243]\n",
+      " [ 0.91728873]\n",
+      " [ 2.33355447]\n",
+      " [-0.46943429]\n",
+      " [-0.89776151]\n",
+      " [ 1.41831658]\n",
+      " [-0.45121757]\n",
+      " [-0.33056407]\n",
+      " [ 0.8302569 ]\n",
+      " [ 1.22835246]\n",
+      " [ 2.98867991]\n",
+      " [ 2.40039345]\n",
+      " [ 1.47801565]\n",
+      " [ 1.14526147]\n",
+      " [ 2.4767592 ]\n",
+      " [ 1.07955928]\n",
+      " [ 0.77066811]\n",
+      " [ 0.55265081]\n",
+      " [ 1.57364433]\n",
+      " [ 2.85287102]\n",
+      " [-0.37232953]\n",
+      " [ 0.96271126]\n",
+      " [-0.4482336 ]]\n"
      ]
     }
    ],
@@ -46,8 +2048,8 @@
     "def test_f(X):\n",
     "    return np.sin(X)+ np.sin(10*X/3)+1\n",
     "\n",
-    "\n",
-    "X = np.random.random((10,1))*100\n",
+    "np.random.seed(0)\n",
+    "X = np.random.random((1000,1))*100\n",
     "Y = test_f(X)\n",
     "\n",
     "print(X,Y)"
@@ -55,7 +2057,39 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 23,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<matplotlib.collections.PathCollection at 0x7f689460deb8>"
+      ]
+     },
+     "execution_count": 23,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.scatter(X, Y)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -314,35 +2348,31 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 70,
+   "execution_count": 17,
    "metadata": {},
    "outputs": [
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "reconstraining parameters GP_regression.rbf\n",
-      "reconstraining parameters GP_regression.Gaussian_noise.variance\n"
-     ]
-    },
-    {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "create model\n",
-      "noise_var 0.001\n",
-      "Optimization restart 1/1, f = 24.047509205227165\n",
-      "self.model \n",
-      "Name : GP regression\n",
-      "Objective : 24.047509205227165\n",
-      "Number of Parameters : 3\n",
-      "Number of Optimization Parameters : 2\n",
-      "Updates : True\n",
-      "Parameters:\n",
-      "  \u001b[1mGP_regression.         \u001b[0;0m  |               value  |  constraints  |      priors    \n",
-      "  \u001b[1mrbf.variance           \u001b[0;0m  |   1.412667169866644  |      +ve      |    Ga(1, 0.5)  \n",
-      "  \u001b[1mrbf.lengthscale        \u001b[0;0m  |  0.8014207602015717  |      +ve      |    Ga(1, 0.5)  \n",
-      "  \u001b[1mGaussian_noise.variance\u001b[0;0m  |               0.001  |   +ve fixed   |  Ga(0.01, 0.01)\n"
+      "/home/juan/Documents/Github_repos/Constrained-KG\n"
+     ]
+    },
+    {
+     "ename": "NameError",
+     "evalue": "name '_C' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[0;32m<ipython-input-17-f148ab1114aa>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetcwd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mGPyOpt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquisition\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmulti_outputGP\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmulti_outputGP\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m space =  GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)},\n",
+      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0macquisition\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
+      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mGPyOpt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mGPy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mbayesian_optimisation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmulti_outputGP\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mbayesian_optimisation_benchmark\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0macquisitions\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0moptimization\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mobjective_examples\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mobjective_examples\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfmodels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDM\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/objective_examples/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mexperiments1d\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mexperiments2d\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mexperimentsNd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/objective_examples/experiments2d.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutil\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneral\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mreshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m~/miniconda3/envs/Constrained-KG/lib/python3.6/site-packages/torch/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_C\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 83\u001b[0;31m __all__ += [name for name in dir(_C)\n\u001b[0m\u001b[1;32m     84\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m'_'\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m             not name.endswith('Base')]\n",
+      "\u001b[0;31mNameError\u001b[0m: name '_C' is not defined"
      ]
     }
    ],
@@ -351,12 +2381,9 @@
     "import sys\n",
     "\n",
     "sys.path.append(os.getcwd())\n",
-    "\n",
-    "import core.acquisition.GPyOpt\n",
-    "from core.acquisition.Hybrid_continuous_KG_v2 import KG\n",
+    "print(os.getcwd())\n",
+    "import GPyOpt\n",
     "from core.acquisition.multi_outputGP import multi_outputGP\n",
-    "import core.acquisition.GPy as GPy\n",
-    "import core.acquisition.GPy as GPy\n",
     "\n",
     "space =  GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)},\n",
     "                                     {'name': 'var_2', 'type': 'continuous', 'domain': (0,100)}])#GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)}])#\n",
@@ -377,37 +2404,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 71,
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import .core.acquisition.GPyOpt"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "updating current best..........\n"
-     ]
-    },
-    {
-     "ename": "AttributeError",
-     "evalue": "'GPRegression' object has no attribute 'posterior_mean'",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
-      "\u001b[0;32m<ipython-input-71-9a7c3c05e785>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mX_plot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m40\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0macq_vals\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0macquisition\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compute_acq\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_plot\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0macq_vals\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m<ipython-input-5-9ba6f90bc848>\u001b[0m in \u001b[0;36m_compute_acq\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m     12\u001b[0m         \"\"\"\n\u001b[1;32m     13\u001b[0m         \u001b[0;31m# print(\"_compute_acq\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate_current_best\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0matleast_2d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m<ipython-input-5-9ba6f90bc848>\u001b[0m in \u001b[0;36mupdate_current_best\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    233\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"updating current best..........\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    234\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcounter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mn_observations\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 235\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcurrent_max_xopt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcurrent_max_value\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compute_current_max\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    236\u001b[0m         \u001b[0;32massert\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcurrent_max_value\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minf\u001b[0m\u001b[0;34m;\u001b[0m \u001b[0;34m\"error ocurred updating current best\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    237\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m<ipython-input-5-9ba6f90bc848>\u001b[0m in \u001b[0;36m_compute_current_max\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    238\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_compute_current_max\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    239\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 240\u001b[0;31m         inner_opt_x, inner_opt_val = self.optimizer.optimize_inner_func(f=self.current_func,\n\u001b[0m\u001b[1;32m    241\u001b[0m                                                                         \u001b[0mf_df\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    242\u001b[0m                                                                         num_samples=5000)\n",
-      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/optimization/acquisition_optimizer.py\u001b[0m in \u001b[0;36moptimize_inner_func\u001b[0;34m(self, f, df, f_df, duplicate_manager, extra_point, reuse, num_samples)\u001b[0m\n\u001b[1;32m    218\u001b[0m         \u001b[0;31m## -- Select the anchor points (with context)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 220\u001b[0;31m         \u001b[0manchor_points\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0manchor_points_generator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_anchor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mduplicate_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mduplicate_manager\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontext_manager\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    221\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mextra_point\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    222\u001b[0m             \u001b[0manchor_points\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manchor_points\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mextra_point\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/optimization/anchor_points_generator.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, num_anchor, X_sampled_values, duplicate_manager, unique, context_manager, verbose)\u001b[0m\n\u001b[1;32m     64\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m         \u001b[0;31m# print(\"X\", X.shape)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 66\u001b[0;31m         \u001b[0mscores\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_anchor_point_scores\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     67\u001b[0m         \u001b[0;31m# print(\"scores\", scores.shape)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m         \u001b[0;31m# print(\"num_anchor\", num_anchor)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/optimization/anchor_points_generator.py\u001b[0m in \u001b[0;36mget_anchor_point_scores\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    133\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget_anchor_point_scores\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    134\u001b[0m         \u001b[0;31m# print(\"X\", X.shape)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 135\u001b[0;31m         \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobjective\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflatten\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    136\u001b[0m         \u001b[0;31m# print(\"out\", out.shape)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m<ipython-input-5-9ba6f90bc848>\u001b[0m in \u001b[0;36mcurrent_func\u001b[0;34m(self, X_inner)\u001b[0m\n\u001b[1;32m    247\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mcurrent_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX_inner\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    248\u001b[0m         \u001b[0mX_inner\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0matleast_2d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_inner\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 249\u001b[0;31m         \u001b[0mmu\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mposterior_mean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_inner\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    250\u001b[0m         \u001b[0mmu\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmu\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmu\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/multi_outputGP.py\u001b[0m in \u001b[0;36mposterior_mean\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    136\u001b[0m         \u001b[0mm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moutput_dim\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mj\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moutput_dim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 138\u001b[0;31m           \u001b[0mm\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mj\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mj\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mposterior_mean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    139\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mm\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    140\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;32m~/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/models/gpmodel.py\u001b[0m in \u001b[0;36mposterior_mean\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    178\u001b[0m         \"\"\"\n\u001b[1;32m    179\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 180\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mposterior_mean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    181\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    182\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mposterior_variance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnoise\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
-      "\u001b[0;31mAttributeError\u001b[0m: 'GPRegression' object has no attribute 'posterior_mean'"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "X_plot = np.linspace(0,100,40)\n",
     "\n",
@@ -419,20 +2427,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 57,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "'/home/juan/Documents/Github_repos/Constrained-KG/core/acquisition/GPyOpt/models/gpmodel.py'"
-      ]
-     },
-     "execution_count": 57,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "import inspect\n",
     "inspect.getmodule(GPyOpt.models.GPModel).__file__"
@@ -440,20 +2437,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 69,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "'/home/juan/Documents/Github_repos/Constrained-KG/core/acquisition/GPy/models/gp_regression.py'"
-      ]
-     },
-     "execution_count": 69,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "\n",
     "inspect.getmodule(GPy.models.GPRegression).__file__"
@@ -469,9 +2455,9 @@
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "Constrained-KG-botorch",
+   "display_name": "Constrained-KG",
    "language": "python",
-   "name": "constrained-kg-botorch"
+   "name": "constrained-kg"
   },
   "language_info": {
    "codemirror_mode": {
@@ -483,7 +2469,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.8.10"
+   "version": "3.6.11"
   }
  },
  "nbformat": 4,
Index: core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport GPyOpt\nfrom GPyOpt.objective_examples.experiments2d import mistery, dropwave\nfrom GPyOpt.objective_examples.experiments1d import Problem01, Problem02,Problem03\nimport GPy as GPy\nfrom multi_objective import MultiObjective\nfrom multi_outputGP import multi_outputGP\nimport matplotlib.pyplot as plt\nimport scipy\nfrom nEI import nEI\nfrom EI import EI\nfrom Hybrid_continuous_KG_v2 import KG\nfrom bayesian_optimisation_unconstrained import BO\nimport pandas as pd\nfrom datetime import datetime\nimport os\n\n\n\n#ALWAYS check cost in\n# --- Function to optimize\n\ndef function_caller_1DGP(rep):\n    rep = rep\n    np.random.seed(rep)\n    for noise in [0.005]:\n\n        function = Problem03(sd=np.sqrt(noise))\n        GP_test_f = function.f\n        # GP_test_c = function.c1\n\n        x = np.linspace(4,7,100).reshape(-1,1)\n        y = GP_test_f(x, true_val=True)\n        # c = GP_test_c(x)\n        fval = y.reshape(-1)# * np.array(c<0).reshape(-1)\n        x = x.reshape(-1)\n        print(\"x.reshape(-1)[np.logical_or(x<4.5 , x>6)]\",x.reshape(-1)[np.logical_or(x<4.5 , x>6)])\n        print(\"fval.reshape(-1)[np.logical_or(x<4.5 , x>6)]\",fval.reshape(-1)[np.logical_or(x<4.5 , x>6)])\n        plt.plot(x.reshape(-1)[x>5.8], fval.reshape(-1)[x>5.8], label=\"feasible\",color=\"green\", linewidth=3)\n        plt.plot(x.reshape(-1)[x < 4.6], fval.reshape(-1)[x < 4.6], color=\"green\", linewidth=3)\n        # plt.plot(x[np.array(c > 0).reshape(-1)], fval[np.array(c > 0).reshape(-1)], label=\"infeasible\",color=\"green\", linestyle=\"--\",linewidth=3)\n        plt.xlim(4, 7)\n        plt.xlabel(\"X\", fontsize=15)\n        plt.legend(fontsize=15)\n        plt.title(\"$f * \\mathbb{I}_{c<0}$ vs $X$\", fontsize=15)\n        # plt.savefig(\n        #     \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/composing_functions\",\n        #     bbox_inches=\"tight\")\n        plt.show()\n\n\n        plt.plot(x,y, color=\"blue\", linewidth=3, label = \"$f$\")\n        # plt.plot(x, c, color=\"darkorchid\", linewidth=3, label=\"$c$\")\n        plt.ylim(-3,3)\n        plt.xlim(4, 7)\n        plt.xlabel(\"X\", fontsize=15)\n        plt.legend(fontsize=15)\n        # plt.savefig(\n        #     \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/performance.jpg\",\n        #     bbox_inches=\"tight\")\n        plt.show()\n\n        # --- Attributes\n        #repeat same objective function to solve a 1 objective problem\n        f = MultiObjective([GP_test_f ])\n        # c = MultiObjective([GP_test_c ])\n\n        #define space of variables\n        space =  GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (4,7)}])#  , {'name': 'var_2', 'type': 'continuous', 'domain': (0,100)}])#\n        n_f = 1\n        n_c = 1\n        model_f = multi_outputGP(output_dim=n_f, noise_var=[noise] * n_f, exact_feval=[True] * n_f)  # , normalizer=True)\n        # model_c = multi_outputGP(output_dim=n_c, noise_var=[1e-05] * n_c, exact_feval=[True] * n_c)\n\n\n        # --- Aquisition optimizer\n        # optimizer for inner acquisition function\n        type_anchor_points_logic = \"max_objective\"\n        acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer=\"lbfgs\", inner_optimizer='lbfgs', space=space,\n                                                           model=model_f, #model_c=model_c,\n                                                           anchor_points_logic=type_anchor_points_logic)\n        #\n        # # --- Initial design\n        # initial design\n        initial_design = GPyOpt.experiment_design.initial_design('random', space, 8)\n\n        nz = 60  # (n_c+1)\n        acquisition = KG(model=model_f, model_c=None, space=space, nz=nz, optimizer=acq_opt, true_func=GP_test_f, true_const=None)\n\n\n        evaluator = GPyOpt.core.evaluators.Sequential(acquisition)\n        bo = BO(model_f, None, space, f, None, acquisition, evaluator, initial_design,\n                ls_evaluator=None,#last_step_evaluator,\n                ls_acquisition=None, #Last_Step_acq,\n                tag_last_evaluation=True,\n                deterministic=False)\n\n        stop_date = datetime(2022, 5, 17, 7)  # year month day hour\n        max_iter = 100\n        # print(\"Finished Initialization\")\n        subfolder = \"mistery_hybrid_KG_\" + str(noise)\n        folder = \"RESULTS\"\n        cwd = os.getcwd()\n        path = cwd + \"/\" + folder + \"/\" + subfolder + '/it_' + str(rep) + '.csv'\n        X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter=max_iter, verbosity=True,\n                                                                                  stop_date=stop_date,\n                                                                                  path=path,\n                                                                                  evaluations_file=subfolder,\n                                                                                  KG_dynamic_optimisation=True)\n        raise\n        print(\"Code Ended\")\n        print(\"X\", X, \"Y\", Y, \"C\", C)\n\nfunction_caller_1DGP(rep=2)\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py b/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py
--- a/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py	(date 1684578731609)
@@ -95,7 +95,7 @@
                 tag_last_evaluation=True,
                 deterministic=False)
 
-        stop_date = datetime(2022, 5, 17, 7)  # year month day hour
+        stop_date = datetime(2030, 5, 17, 7)  # year month day hour
         max_iter = 100
         # print("Finished Initialization")
         subfolder = "mistery_hybrid_KG_" + str(noise)
Index: core/acquisition/mistery_nEI_computational_time.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/mistery_nEI_computational_time.py b/core/acquisition/mistery_nEI_computational_time.py
new file mode 100644
--- /dev/null	(date 1659453324492)
+++ b/core/acquisition/mistery_nEI_computational_time.py	(date 1659453324492)
@@ -0,0 +1,350 @@
+import numpy as np
+from GPyOpt.objective_examples.experiments2d import mistery_torch,  test_function_2, new_brannin
+import matplotlib.pyplot as plt
+import pandas as pd
+import os
+from time import time as time
+from gpytorch.kernels import RBFKernel, ScaleKernel
+from gpytorch.priors.torch_priors import GammaPrior
+#ALWAYS check cost in
+# --- Function to optimize
+from botorch.test_functions import Hartmann
+import torch
+from botorch.models import FixedNoiseGP, ModelListGP, SingleTaskGP
+from gpytorch.mlls.sum_marginal_log_likelihood import SumMarginalLogLikelihood
+from botorch.acquisition.objective import ConstrainedMCObjective
+from botorch import fit_gpytorch_model
+from botorch.acquisition.monte_carlo import qExpectedImprovement, qNoisyExpectedImprovement
+from botorch.acquisition.analytic import ConstrainedExpectedImprovement
+from botorch.sampling.samplers import SobolQMCNormalSampler
+from botorch.exceptions import BadInitialCandidatesWarning
+import time
+from botorch.optim import optimize_acqf
+from Transformation_Translation import Translate
+from Last_Step import Constrained_Mean_Response
+from botorch.utils.transforms import (
+    concatenate_pending_points,
+    match_batch_shape,
+    t_batch_mode_transform,
+)
+import warnings
+from scipy.stats import norm
+device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+print("device: ", device)
+dtype = torch.double
+
+def function_caller_mistery_nEI(it):
+
+    repepetitions = [it, it + 20]
+    for rep in repepetitions:
+        np.random.seed(rep)
+        for noise in [ 1.0]:
+            torch.manual_seed(rep)
+            NOISE_SE = noise
+            NOISE_SE_constraint = np.sqrt(0.1)
+            N_BATCH = 100
+            initial_points = 10
+            MC_SAMPLES = 250
+
+
+            problem_class = mistery_torch()#Noise Included in the loop
+            bounds = torch.tensor([[0, 0], [5.0, 5.0] ], device=device, dtype=dtype)
+            input_dim = problem_class.input_dim
+
+            def objective_function(X):
+                return torch.tensor(problem_class.f(X), device=device, dtype=dtype)
+
+            def outcome_constraint(X):
+                return torch.tensor(problem_class.c(X), device=device, dtype=dtype)
+
+            def weighted_obj(X):
+                """Feasibility weighted objective; zero if not feasible."""
+                return objective_function(X) * (outcome_constraint(X) <= 0).type_as(X)
+
+            #train_yvar = torch.tensor(NOISE_SE ** 2, device=device, dtype=dtype)
+            train_cvar = torch.tensor(NOISE_SE_constraint**2, device=device, dtype=dtype)
+            train_yvar = torch.tensor(noise, device=device, dtype=dtype)
+
+            def obj_callable(Z):
+                return Z[..., 0]
+
+            def constraint_callable(Z):
+                return Z[..., 1]
+
+            # define a feasibility-weighted objective for optimization
+            constrained_obj = ConstrainedMCObjective(
+                objective=obj_callable,
+                constraints=[constraint_callable],
+            )
+
+            def generate_initial_data(n=10):
+                # generate training data
+                ub = bounds[1, :]
+                lb = bounds[0, :]
+                delta = ub - lb
+                train_x = torch.rand(n, input_dim, device=device, dtype=dtype) * delta + lb
+                exact_obj = objective_function(train_x).unsqueeze(-1)  # add output dimension
+                exact_con = outcome_constraint(train_x).unsqueeze(-1)  # add output dimension
+                train_obj = exact_obj + NOISE_SE * torch.randn_like(exact_obj)
+                train_con = exact_con + NOISE_SE_constraint * torch.randn_like(exact_con)
+                best_observed_value = weighted_obj(train_x).max().item()
+                return train_x, train_obj, train_con, best_observed_value
+
+            def recommended_value(X, model):
+                posterior_means  = model.posterior(X).mean
+                posterior_var = model.posterior(X).variance
+
+                posterior_means = posterior_means.detach().numpy()
+                posterior_var = posterior_var.detach().numpy()
+
+                pf = probability_feasibility_multi_gp(mu=posterior_means[:,1:], var=posterior_var[:,1:])
+
+                objective_mean = posterior_means[:,0]
+                predicted_fit = objective_mean.reshape(-1) * pf.reshape(-1)
+
+                return predicted_fit
+
+            def probability_feasibility_multi_gp(mu, var):
+                Fz = []
+                print("mu.shape[1]", mu.shape[1])
+                for m in range(mu.shape[1]):
+                    Fz.append(probability_feasibility(mu[:,m], var[:,m]))
+                Fz = np.product(Fz, axis=0)
+                return Fz
+
+            def probability_feasibility(mean=None, var=None, l=0):
+
+                std = np.sqrt(var).reshape(-1, 1)
+                mean = mean.reshape(-1, 1)
+                norm_dist = norm(mean, std)
+                Fz = norm_dist.cdf(l)
+                return Fz
+
+
+
+            def initialize_model(train_x, train_obj, train_con, state_dict=None):
+                # define models for objective and constraint
+                covar_module = ScaleKernel(RBFKernel(
+                        ard_num_dims=train_x.shape[-1]
+                    ),)
+
+                #
+                model_obj = FixedNoiseGP(train_x, train_obj, train_yvar.expand_as(train_obj), covar_module=covar_module).to(train_x)  #SingleTaskGP(train_x, train_obj, outcome_transform=Translate_Object, covar_module=covar_module)##
+                model_con = FixedNoiseGP(train_x, train_con, train_cvar.expand_as(train_con)).to(train_x)
+                # combine into a multi-output GP model
+                model = ModelListGP(model_obj, model_con)
+                mll = SumMarginalLogLikelihood(model.likelihood, model)
+                # load state dict if it is passed
+                if state_dict is not None:
+                    model.load_state_dict(state_dict)
+                return mll, model
+
+            def optimize_acqf_and_get_observation(acq_func, check_acqu_val_sample=None, diagnostics = False):
+                """Optimizes the acquisition function, and returns a new candidate and a noisy observation."""
+                # optimize
+                BATCH_SIZE = 1
+
+                candidates, _ = optimize_acqf(
+                    acq_function=acq_func,
+                    bounds=bounds,
+                    q=BATCH_SIZE,
+                    num_restarts=10,
+                    raw_samples=512,  # used for intialization heuristic
+                    options={"batch_limit": 5, "maxiter": 200},
+                )
+
+                # observe new values
+                new_x = candidates.detach()
+                # if check_acqu_val_sample is None:
+                #     new_x = candidates.detach()
+                # else:
+                #     new_x = candidates.detach()
+                #     new_acq_func_val = acq_func.forward(new_x).unsqueeze(-1)
+                #     new_acq_func_val = new_acq_func_val.squeeze(-1).detach().numpy()
+                #     last_acq_func_val = acq_func.forward(check_acqu_val_sample).unsqueeze(-1)
+                #     last_acq_func_val = last_acq_func_val.squeeze(-1).detach().numpy()
+                #     if last_acq_func_val >= new_acq_func_val:
+                #         new_x = check_acqu_val_sample
+                #     else:
+                #         new_x = new_x
+
+                if diagnostics:
+
+                    ub = bounds[1, :]
+                    lb = bounds[0, :]
+                    delta = ub - lb
+                    rand_x = torch.rand(500, input_dim, device=device, dtype=dtype) * delta + lb#torch.rand(10000, 1, input_dim, device=device, dtype=dtype) * delta + lb
+                    print("rand_x ",rand_x .shape)
+                    #acq_func_val = weighted_obj(rand_x)
+                    # acq_func_val = acq_func.forward(rand_x).unsqueeze(-1)
+                    # acq_func_val = acq_func_val.squeeze(-1).detach().numpy()
+                    acq_func_val = acq_func.forward(new_x).unsqueeze(-1)
+                    acq_func_val = acq_func_val.squeeze(-1).detach().numpy()
+                    print("new_x", new_x, "acq_func_val",acq_func_val)
+
+                    acq_func_val = acq_func.forward(check_acqu_val_sample).unsqueeze(-1)
+                    acq_func_val = acq_func_val.squeeze(-1).detach().numpy()
+                    print("last_x", check_acqu_val_sample, "last_acq_func_val",acq_func_val)
+
+                    # print("max val", torch.max(acq_func_val),"min", torch.min(acq_func_val))
+                    # plt.scatter(rand_x[:, :, 0].squeeze(-1), rand_x[:,:, 1].squeeze(-1), c = acq_func_val)
+                    # plt.scatter(rand_x[:, 0].squeeze(-1), rand_x[:, 1].squeeze(-1), c=acq_func_val)
+                    # plt.scatter(train_x_nei[:,0],train_x_nei[:,1], color="red")
+                    # plt.scatter(new_x[:,0], new_x[:,1], color="magenta", s=100)
+                    # plt.show()
+
+                    # plt.plot( best_observed_all_nei)
+                    # plt.show()
+
+                exact_obj = objective_function(new_x).unsqueeze(-1)  # add output dimension
+                exact_con = outcome_constraint(new_x).unsqueeze(-1)  # add output dimension
+                new_obj = exact_obj + NOISE_SE * torch.randn_like(exact_obj)
+                new_con = exact_con  + NOISE_SE_constraint * torch.randn_like(exact_con)
+                return new_x, new_obj, new_con
+
+
+
+            warnings.filterwarnings('ignore', category=BadInitialCandidatesWarning)
+            warnings.filterwarnings('ignore', category=RuntimeWarning)
+
+            verbose = True
+
+            best_observed_all_nei_GP, best_observed_all_ei= [], []
+            best_observed_all_nei_sampled, best_observed_all_ei_sampled = [], []
+            # average over multiple trials
+            best_observed_nei, best_observed_ei = [], []
+            # print("best value")
+            # True_value = True_func_opt(model=weighted_obj,
+            #         best_f=0.0,  # dummy variable really, doesnt do anything since I only take max/min of posterior mean
+            #         objective=constrained_obj)
+            #
+            # optimize_acqf_and_get_observation(True_value, diagnostics=True)
+            # raise
+            # call helper functions to generate initial training data and initialize model
+            train_x_nei, train_obj_nei, train_con_nei, best_observed_value_nei = generate_initial_data(n=initial_points)
+            Translate_Object = Translate(m=1, Y=train_obj_nei)
+            #train_x_ei, train_obj_ei, train_con_ei, best_observed_value_ei =train_x_nei, train_obj_nei, train_con_nei, best_observed_value_nei
+            mll_nei, model_nei = initialize_model(train_x_nei, train_obj_nei, train_con_nei)
+            best_observed_nei.append(best_observed_value_nei)
+
+            # run N_BATCH rounds of BayesOpt after the initial random batch
+            Last_Step = Constrained_Mean_Response(
+                model=model_nei,
+                best_f=0.0,  # dummy variable really, doesnt do anything since I only take max/min of posterior mean
+                objective=constrained_obj
+            )
+
+            last_x_nei, last_obj_nei, last_con_nei = optimize_acqf_and_get_observation(Last_Step, diagnostics=False)
+
+            for iteration in range(1, N_BATCH + 1):
+                # t0 = time.time()
+
+                # fit the models
+                fit_gpytorch_model(mll_nei)
+
+                # define the qEI and qNEI acquisition modules using a QMC sampler
+                qmc_sampler = SobolQMCNormalSampler(num_samples=MC_SAMPLES)
+
+                # qNEI_baseline_X = torch.cat([train_x_nei, match_batch_shape(last_x_nei, train_x_nei)], dim=-2)
+                qNEI = qNoisyExpectedImprovement(
+                    model=model_nei,
+                    X_baseline=train_x_nei,
+                    sampler=qmc_sampler,
+                    objective=constrained_obj,
+                )
+
+                # optimize and get new observation
+                import time
+                ts = time.time()
+                new_x_nei, new_obj_nei, new_con_nei = optimize_acqf_and_get_observation(qNEI)
+                te = time.time()
+                tdiff = te -ts
+                print("time diff", tdiff)
+                raise
+
+                # if verbose:
+                #     ub = bounds[1, :]
+                #     lb = bounds[0, :]
+                #     delta = ub - lb
+                #     plot_data = torch.rand(1000, input_dim, device=device, dtype=dtype) * delta + lb
+                #     value_recommended_design_GP = weighted_obj(plot_data)
+                #
+                #     plt.scatter(np.array(plot_data[:,0]).reshape(-1),
+                #                 np.array(plot_data[:,1]).reshape(-1),
+                #                 c=np.array(value_recommended_design_GP).reshape(-1))
+                #     plt.scatter(train_x_nei[:,0],train_x_nei[:,1], color="black" )
+                #     plt.scatter(new_x_nei[:,0], new_x_nei[:,1], color="magenta")
+                #     plt.show()
+
+                # update training points
+                train_x_nei = torch.cat([train_x_nei, new_x_nei])
+                train_obj_nei = torch.cat([train_obj_nei, new_obj_nei])
+                train_con_nei = torch.cat([train_con_nei, new_con_nei])
+
+                # update progress
+                best_value_nei = weighted_obj(train_x_nei).max().item()
+                best_observed_nei.append(best_value_nei)
+
+                # reinitialize the models so they are ready for fitting on next iteration
+                # use the current state dict to speed up fitting
+
+                mll_nei, model_nei = initialize_model(
+                    train_x_nei,
+                    train_obj_nei,
+                    train_con_nei,
+                    model_nei.state_dict(),
+                )
+
+                Last_Step = Constrained_Mean_Response(
+                    model=model_nei,
+                    best_f=0.0, #dummy variable really, doesnt do anything since I only take max/min of posterior mean
+                    objective=constrained_obj
+                    )
+
+
+                last_x_nei, last_obj_nei, last_con_nei = optimize_acqf_and_get_observation(Last_Step, diagnostics = False)
+
+                # update progress
+                value_recommended_design_GP = weighted_obj(last_x_nei)
+                best_value_GP = np.array(value_recommended_design_GP).reshape(-1)
+
+                GP_vals_sampled = recommended_value(train_x_nei, model_nei)
+                value_recommended_design = weighted_obj(train_x_nei[np.argmax(GP_vals_sampled )])
+
+                best_value_sampled = np.array(value_recommended_design).reshape(-1)
+                t1 = time.time()
+
+                if verbose:
+                    print("best value", best_value_GP)
+                    # print(
+                    #     f"\niteration {iteration:>2}: best_value (qNEI) = "
+                    #     f"({best_value:>4.2f}), "
+                    #     f"time = {t1 - t0:>4.2f}.", end=""
+                    # )
+                else:
+                    print(".", end="")
+
+                best_observed_all_nei_sampled.append(best_value_sampled)
+                best_observed_all_nei_GP.append(best_value_GP)
+                data = {}
+                print(" best_observed_all_nei",  best_observed_all_nei_GP)
+                data["OC GP mean"] = np.array(best_observed_all_nei_GP).reshape(-1)
+                data["OC GP sampled"] = np.array(best_observed_all_nei_sampled).reshape(-1)
+
+                gen_file = pd.DataFrame.from_dict(data)
+                folder = "RESULTS"
+                subfolder = "mistery_nEI_n_obj_" + str(NOISE_SE) + "_n_c_" + str(NOISE_SE_constraint**2)
+                cwd = os.getcwd()
+                path = cwd + "/" + folder +"/"+ subfolder +'/it_' + str(rep)+ '.csv'
+                print("directory results: ", cwd + "/" + folder + "/" + subfolder)
+                if os.path.isdir(cwd + "/" + folder +"/"+ subfolder) == False:
+
+                    os.makedirs(cwd + "/" + folder +"/"+ subfolder)
+
+                gen_file.to_csv(path_or_buf=path)
+
+
+
+function_caller_mistery_nEI(1)
+
+
Index: core/acquisition/mistery_experiment_TS_computational_time.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/mistery_experiment_TS_computational_time.py b/core/acquisition/mistery_experiment_TS_computational_time.py
new file mode 100644
--- /dev/null	(date 1659454783019)
+++ b/core/acquisition/mistery_experiment_TS_computational_time.py	(date 1659454783019)
@@ -0,0 +1,87 @@
+import numpy as np
+import GPyOpt
+from GPyOpt.objective_examples.experiments2d import mistery, dropwave
+import GPy as GPy
+from multi_objective import MultiObjective
+from multi_outputGP import multi_outputGP
+import matplotlib.pyplot as plt
+import scipy
+from Thompson_Sampling import TS
+from bayesian_optimisation import BO
+import pandas as pd
+import os
+from datetime import datetime
+
+#ALWAYS check cost in
+# --- Function to optimize
+print("mistery TS activate")
+def function_caller_mistery_TS(it):
+    repepetitions = [it, it + 20]
+    for rep in repepetitions:
+        np.random.seed(rep)
+        for noise in [1]:
+            # func2 = dropwave()
+            noise_objective = noise
+            noise_constraints = (np.sqrt(0.1)) ** 2
+            mistery_f =mistery(sd_obj=np.sqrt(noise_objective), sd_c=np.sqrt(noise_constraints))
+
+            # --- Attributes
+            #repeat same objective function to solve a 1 objective problem
+            f = MultiObjective([mistery_f.f])
+            c = MultiObjective([mistery_f.c])
+
+
+            # --- Attributes
+            #repeat same objective function to solve a 1 objective problem
+
+            #c2 = MultiObjective([test_c2])
+            # --- Space
+            #define space of variables
+            space =  GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,5)},
+                                                 {'name': 'var_2', 'type': 'continuous', 'domain': (0,5)}])#GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)}])#
+            n_f = 1
+            n_c = 1
+            model_f = multi_outputGP(output_dim = n_f,   noise_var=[noise_objective]*n_f, exact_feval=[True]*n_f)
+            model_c = multi_outputGP(output_dim = n_c,  noise_var=[noise_constraints]*n_c, exact_feval=[True]*n_c)
+
+
+            # --- Aquisition optimizer
+            #optimizer for inner acquisition function
+            acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer='lbfgs', space=space, model = model_f, model_c=model_c)
+            #
+            # # --- Initial design
+            #initial design
+            initial_design = GPyOpt.experiment_design.initial_design('latin', space, 10)
+
+
+            nz=1
+            acquisition = TS(model=model_f, model_c=model_c , nz = nz,space=space, optimizer = acq_opt)
+            evaluator = GPyOpt.core.evaluators.Sequential(acquisition)
+            bo = BO(model_f, model_c, space, f, c, acquisition, evaluator, initial_design,
+                ls_evaluator = None,  # last_step_evaluator,
+                ls_acquisition = None,  # Last_Step_acq,
+                deterministic=False)
+
+            stop_date = datetime(2023, 5, 10, 7)  # year month day hour
+            max_iter  = 100
+            # print("Finished Initialization")
+            subfolder = "mistery_TS_n_obj_" + str(noise_objective) + "_n_c_" + str(noise_constraints)
+            folder = "RESULTS"
+            cwd = os.getcwd()
+            path =cwd + "/" + folder + "/" + subfolder + '/it_' + str(rep) + '.csv'
+            X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter = max_iter,
+                                                                                      verbosity=False,
+                                                                                      path=path,
+                                                                                      stop_date=stop_date,
+                                                                                      compute_OC=True,
+                                                                                      evaluations_file=subfolder,
+                                                                                      KG_dynamic_optimisation=False)
+            print("Code Ended")
+
+            print("X",X,"Y",Y, "C", C)
+
+
+
+function_caller_mistery_TS(1)
+
+
Index: core/acquisition/NN_experiment_cKG.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport GPyOpt\nfrom GPyOpt.objective_examples.experiments2d import mistery, dropwave\nfrom Real_Experiments.FC_Neural_Network.real_functions_caller import FC_NN_test_function\nimport GPy as GPy\nfrom multi_objective import MultiObjective\nfrom multi_outputGP import multi_outputGP\nimport matplotlib.pyplot as plt\nimport scipy\nfrom Hybrid_continuous_KG_v2 import KG\nfrom bayesian_optimisation import BO\nimport pandas as pd\nfrom nEI import nEI\nfrom EI import EI\nimport os\nfrom datetime import datetime\nimport time\nimport tensorflow as tf\n#ALWAYS check cost in\n# --- Function to optimize\nprint(\"NN TS activate\")\nprint(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))\ndef function_caller_NN_cKG(rep_base):\n\n    rep_base = rep_base+100\n    for it in range(2):\n        rep = rep_base + 10**(it)\n        np.random.seed(rep)\n        function_rejected = True\n        s = 0\n        while function_rejected or s <= 1:\n            # for i in range(2):\n\n            try:\n                threshold = 1.1e-2  #seconds\n                RMITD_f = FC_NN_test_function(max_time=threshold, output_scaling=\"inv norm cdf\")\n                function_rejected = False\n                s += 1\n            except:\n                function_rejected = True\n                print(\"function_rejected check path inside function\")\n                pass\n\n\n        # --- Attributes\n        #repeat same objective function to solve a 1 objective problem\n        f = MultiObjective([RMITD_f.f])\n        c = MultiObjective([RMITD_f.c])\n\n\n        # --- Attributes\n        #repeat same objective function to solve a 1 objective problem\n\n        #c2 = MultiObjective([test_c2])\n        # --- Space\n        #define space of variables\n        space = GPyOpt.Design_space(space=[{'name': 'var_1', 'type': 'continuous', 'domain': (0, 1)},  #Learning rate\n                                           {'name': 'var_2', 'type': 'continuous', 'domain': (0, 1)},  #Drop-out rate 1\n                                           {'name': 'var_3', 'type': 'continuous', 'domain': (0, 1)},  #Drop-out rate 2\n                                           {'name': 'var_3', 'type': 'continuous', 'domain': (0, 1)},  # Drop-out rate 2\n                                           {'name': 'var_5', 'type': 'continuous', 'domain': (3, 12)},  # units 1\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (3, 12)},  # units 1\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (3, 12)},  # units 1\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (0, 1)},  # beta 1 rate\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (0, 1)}])# beta 2 rate\n\n\n\n        n_f = 1\n        n_c = 1\n        model_f = multi_outputGP(output_dim = n_f,   exact_feval=[False]*n_f)\n        model_c = multi_outputGP(output_dim = n_c,  noise_var=[1e-4]*n_c, exact_feval=[True]*n_c)\n\n\n        # --- Aquisition optimizer\n        #optimizer for inner acquisition function\n        type_anchor_points_logic = \"max_objective\"\n        acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer=\"lbfgs\",inner_optimizer='lbfgs',space=space, model=model_f, model_c=model_c,anchor_points_logic=type_anchor_points_logic)\n        #\n        # # --- Initial design\n        #initial design\n        initial_design = GPyOpt.experiment_design.initial_design('latin', space, 18)\n\n        nz = 60 # (n_c+1)\n        acquisition = KG(model=model_f, model_c=model_c , space=space, nz=nz, optimizer = acq_opt)\n\n        Last_Step_acq = nEI(model=model_f, model_c=model_c , space=space, nz=nz, optimizer = acq_opt)\n        last_step_evaluator = GPyOpt.core.evaluators.Sequential(Last_Step_acq)\n        evaluator = GPyOpt.core.evaluators.Sequential(acquisition)\n\n\n        bo = BO(model_f, model_c, space, f, c, acquisition, evaluator,  initial_design,\n                ls_evaluator=last_step_evaluator,\n                ls_acquisition = Last_Step_acq,\n                tag_last_evaluation  =True,\n                deterministic=False)\n\n        stop_date = datetime(2021, 5, 18, 7) # year month day hour\n        max_iter  = 50\n        # print(\"Finished Initialization\")\n        subfolder = \"NN_hybrid_KG_v2\"\n        folder = \"RESULTS\"\n        cwd = os.getcwd()\n        path =cwd + \"/\" + folder + \"/\" + subfolder + '/it_' + str(rep) + '.csv'\n        X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter=max_iter, verbosity=False,stop_date= stop_date,\n                                                                                  path=path,compute_OC=False,\n                                                                                  evaluations_file=subfolder,\n                                                                                  KG_dynamic_optimisation=True)\n\n        print(\"Code Ended\")\n        print(\"X\",X,\"Y\",Y, \"C\", C)\n# function_caller_NN_cKG(rep_base=99999)\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/NN_experiment_cKG.py b/core/acquisition/NN_experiment_cKG.py
--- a/core/acquisition/NN_experiment_cKG.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/NN_experiment_cKG.py	(date 1642024384844)
@@ -22,9 +22,9 @@
 print("Num GPUs Available: ", len(tf.config.list_physical_devices('GPU')))
 def function_caller_NN_cKG(rep_base):
 
-    rep_base = rep_base+100
-    for it in range(2):
-        rep = rep_base + 10**(it)
+    rep_base = rep_base #+100
+    for it in range(40):
+        rep = rep_base + it
         np.random.seed(rep)
         function_rejected = True
         s = 0
@@ -95,8 +95,8 @@
                 tag_last_evaluation  =True,
                 deterministic=False)
 
-        stop_date = datetime(2021, 5, 18, 7) # year month day hour
-        max_iter  = 50
+        stop_date = datetime(2022, 5, 18, 7) # year month day hour
+        max_iter  = 0
         # print("Finished Initialization")
         subfolder = "NN_hybrid_KG_v2"
         folder = "RESULTS"
@@ -109,7 +109,7 @@
 
         print("Code Ended")
         print("X",X,"Y",Y, "C", C)
-# function_caller_NN_cKG(rep_base=99999)
+function_caller_NN_cKG(rep_base=10)
 
 
 
Index: core/acquisition/mistery_hybrid_cKG_experiment_computational_time.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/mistery_hybrid_cKG_experiment_computational_time.py b/core/acquisition/mistery_hybrid_cKG_experiment_computational_time.py
new file mode 100644
--- /dev/null	(date 1659452573871)
+++ b/core/acquisition/mistery_hybrid_cKG_experiment_computational_time.py	(date 1659452573871)
@@ -0,0 +1,85 @@
+import numpy as np
+import GPyOpt
+from GPyOpt.objective_examples.experiments2d import mistery,  test_function_2, new_brannin
+import GPy as GPy
+from multi_objective import MultiObjective
+from multi_outputGP import multi_outputGP
+import matplotlib.pyplot as plt
+import scipy
+from Hybrid_continuous_KG_v2 import KG
+from nEI import nEI
+from EI import EI
+from bayesian_optimisation import BO
+import pandas as pd
+import os
+from datetime import datetime
+
+#ALWAYS check cost in
+# --- Function to optimize
+print("mistery activate")
+def function_caller_mistery_v2(rep):
+    rep = rep
+    np.random.seed(rep)
+
+    for noise in [1e-3]:
+        # func2 = dropwave()
+        noise_objective = noise
+        noise_constraints = 1e-3
+        mistery_f = mistery(sd_obj=np.sqrt(noise_objective), sd_c=np.sqrt(noise_constraints))
+
+        # --- Attributes
+        # repeat same objective function to solve a 1 objective problem
+        f = MultiObjective([mistery_f.f])
+        c = MultiObjective([mistery_f.c])
+
+        # --- Attributes
+        # repeat same objective function to solve a 1 objective problem
+
+        # c2 = MultiObjective([test_c2])
+        # --- Space
+        # define space of variables
+        space = GPyOpt.Design_space(space=[{'name': 'var_1', 'type': 'continuous', 'domain': (0, 5)},
+                                           {'name': 'var_2', 'type': 'continuous', 'domain': (0, 5)}])  # GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)}])#
+        n_f = 1
+        n_c = 1
+        model_f = multi_outputGP(output_dim = n_f,   noise_var=[noise_objective]*n_f, exact_feval=[True]*n_f)
+        model_c = multi_outputGP(output_dim = n_c,  noise_var=[noise_constraints]*n_c, exact_feval=[True]*n_c)
+
+        # --- Aquisition optimizer
+        #optimizer for inner acquisition function
+        type_anchor_points_logic = "max_objective"
+        acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer="lbfgs",inner_optimizer='lbfgs',space=space, model=model_f, model_c=model_c,anchor_points_logic=type_anchor_points_logic)
+        #
+        # # --- Initial design
+        #initial design
+        initial_design = GPyOpt.experiment_design.initial_design('latin', space, 10)
+
+        nz = 60 # (n_c+1)
+        acquisition = KG(model=model_f, model_c=model_c , space=space, nz=nz, optimizer = acq_opt)
+
+
+        evaluator = GPyOpt.core.evaluators.Sequential(acquisition)
+        bo = BO(model_f, model_c, space, f, c, acquisition, evaluator, initial_design,
+                deterministic=False)
+
+        stop_date = datetime(2023, 5, 10, 7) # year month day hour
+        max_iter  = 100
+        # print("Finished Initialization")
+        subfolder = "mistery_cKG_n_obj_" + str(noise_objective) + "_n_c_" + str(noise_constraints)
+        folder = "RESULTS"
+        cwd = os.getcwd()
+        path =cwd + "/" + folder + "/" + subfolder + '/it_' + str(rep) + '.csv'
+        X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter=1,
+                                                                                  verbosity=False,
+                                                                                  stop_date= stop_date,
+                                                                                  path=path,
+                                                                                  evaluations_file=subfolder,
+                                                                                  KG_dynamic_optimisation=True)
+
+        print("Code Ended")
+        print("X",X,"Y",Y, "C", C)
+
+for r in range(100):
+    function_caller_mistery_v2(rep=r)
+
+
Index: core/acquisition/1D_PROBLEM09_experiment.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport GPyOpt\nfrom GPyOpt.objective_examples.experiments2d import mistery, dropwave\nfrom GPyOpt.objective_examples.experiments1d import Problem01, Problem02,Problem03\nimport GPy as GPy\nfrom multi_objective import MultiObjective\nfrom multi_outputGP import multi_outputGP\nimport matplotlib.pyplot as plt\nimport scipy\nfrom nEI import nEI\nfrom EI import EI\nfrom Hybrid_continuous_KG_v2 import KG\nfrom bayesian_optimisation import BO\nimport pandas as pd\nfrom datetime import datetime\nimport os\n\n\n\n#ALWAYS check cost in\n# --- Function to optimize\n\ndef function_caller_1DGP(rep):\n    rep = rep\n    np.random.seed(rep)\n    for noise in [0.005]:\n\n        function = Problem03(sd=np.sqrt(noise))\n        GP_test_f = function.f\n        GP_test_c = function.c1\n\n        x = np.linspace(4,7,100).reshape(-1,1)\n        y = GP_test_f(x, true_val=True)\n        c = GP_test_c(x)\n        fval = y.reshape(-1) * np.array(c<0).reshape(-1)\n        x = x.reshape(-1)\n        print(\"x.reshape(-1)[np.logical_or(x<4.5 , x>6)]\",x.reshape(-1)[np.logical_or(x<4.5 , x>6)])\n        print(\"fval.reshape(-1)[np.logical_or(x<4.5 , x>6)]\",fval.reshape(-1)[np.logical_or(x<4.5 , x>6)])\n        plt.plot(x.reshape(-1)[x>5.8], fval.reshape(-1)[x>5.8], label=\"feasible\",color=\"green\", linewidth=3)\n        plt.plot(x.reshape(-1)[x < 4.6], fval.reshape(-1)[x < 4.6], color=\"green\", linewidth=3)\n        plt.plot(x[np.array(c > 0).reshape(-1)], fval[np.array(c > 0).reshape(-1)], label=\"infeasible\",color=\"green\", linestyle=\"--\",linewidth=3)\n        plt.xlim(4, 7)\n        plt.xlabel(\"X\", fontsize=15)\n        plt.legend(fontsize=15)\n        plt.title(\"$f * \\mathbb{I}_{c<0}$ vs $X$\", fontsize=15)\n        # plt.savefig(\n        #     \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/composing_functions\",\n        #     bbox_inches=\"tight\")\n        plt.show()\n\n\n        plt.plot(x,y, color=\"blue\", linewidth=3, label = \"$f$\")\n        plt.plot(x, c, color=\"darkorchid\", linewidth=3, label=\"$c$\")\n        plt.ylim(-3,3)\n        plt.xlim(4, 7)\n        plt.xlabel(\"X\", fontsize=15)\n        plt.legend(fontsize=15)\n        # plt.savefig(\n        #     \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/performance.jpg\",\n        #     bbox_inches=\"tight\")\n        plt.show()\n\n        # --- Attributes\n        #repeat same objective function to solve a 1 objective problem\n        f = MultiObjective([GP_test_f ])\n        c = MultiObjective([GP_test_c ])\n\n        #define space of variables\n        space =  GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (4,7)}])#  , {'name': 'var_2', 'type': 'continuous', 'domain': (0,100)}])#\n        n_f = 1\n        n_c = 1\n        model_f = multi_outputGP(output_dim=n_f, noise_var=[noise] * n_f, exact_feval=[True] * n_f)  # , normalizer=True)\n        model_c = multi_outputGP(output_dim=n_c, noise_var=[1e-05] * n_c, exact_feval=[True] * n_c)\n\n\n        # --- Aquisition optimizer\n        # optimizer for inner acquisition function\n        type_anchor_points_logic = \"max_objective\"\n        acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer=\"lbfgs\", inner_optimizer='lbfgs', space=space,\n                                                           model=model_f, model_c=model_c,\n                                                           anchor_points_logic=type_anchor_points_logic)\n        #\n        # # --- Initial design\n        # initial design\n        initial_design = GPyOpt.experiment_design.initial_design('random', space, 5)\n\n        nz = 60  # (n_c+1)\n        acquisition = KG(model=model_f, model_c=model_c, space=space, nz=nz, optimizer=acq_opt, true_func=GP_test_f, true_const=GP_test_c)\n        if noise < 1e-3:\n            Last_Step_acq = EI(model=model_f, model_c=model_c, space=space, nz=nz, optimizer=acq_opt)\n        else:\n            Last_Step_acq = nEI(model=model_f, model_c=model_c, space=space, nz=nz, optimizer=acq_opt)\n        last_step_evaluator = GPyOpt.core.evaluators.Sequential(Last_Step_acq)\n        evaluator = GPyOpt.core.evaluators.Sequential(acquisition)\n        bo = BO(model_f, model_c, space, f, c, acquisition, evaluator, initial_design,\n                ls_evaluator=last_step_evaluator,\n                ls_acquisition=Last_Step_acq,\n                tag_last_evaluation=True,\n                deterministic=False)\n\n        stop_date = datetime(2022, 5, 17, 7)  # year month day hour\n        max_iter = 100\n        # print(\"Finished Initialization\")\n        subfolder = \"mistery_hybrid_KG_\" + str(noise)\n        folder = \"RESULTS\"\n        cwd = os.getcwd()\n        path = cwd + \"/\" + folder + \"/\" + subfolder + '/it_' + str(rep) + '.csv'\n        X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter=max_iter, verbosity=True,\n                                                                                  stop_date=stop_date,\n                                                                                  path=path,\n                                                                                  evaluations_file=subfolder,\n                                                                                  KG_dynamic_optimisation=True)\n\n        print(\"Code Ended\")\n        print(\"X\", X, \"Y\", Y, \"C\", C)\n\nfunction_caller_1DGP(rep=2)\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/1D_PROBLEM09_experiment.py b/core/acquisition/1D_PROBLEM09_experiment.py
--- a/core/acquisition/1D_PROBLEM09_experiment.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/1D_PROBLEM09_experiment.py	(date 1684580696348)
@@ -98,7 +98,7 @@
                 tag_last_evaluation=True,
                 deterministic=False)
 
-        stop_date = datetime(2022, 5, 17, 7)  # year month day hour
+        stop_date = datetime(2024, 5, 17, 7)  # year month day hour
         max_iter = 100
         # print("Finished Initialization")
         subfolder = "mistery_hybrid_KG_" + str(noise)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"70763321-5c0b-47e5-8355-9730f446ef6a\" name=\"Default Changelist\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/core/acquisition/testfun2.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples/experiments2d.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples/experiments2d.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/core/acquisition/bayesian_optimisation_penalised_adjusted.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/acquisition/bayesian_optimisation_penalised_adjusted.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/core/acquisition/mistery_hybrid_cKG_experiment_penalty_adjusted.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/acquisition/mistery_hybrid_cKG_experiment_penalty_adjusted.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/core/acquisition/test_func_2_cEI.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/core/acquisition/test_func_2_cEI.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"JupyterTrust\" id=\"6976c873-9a44-416c-9fb9-0d73f0568aa5\" />\n  <component name=\"ProjectId\" id=\"1gwxpMS0KHhbzi2MRg2OeGGFWBQ\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File\" value=\"Python\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../BOPL_Cornell-Warwick\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.toDoOptions\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/core/acquisition\" />\n      <recent name=\"$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.mistery_hybrid_cKG_experiment_penalty_adjusted\">\n    <configuration name=\"KG_control\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Constrained-KG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/acquisition\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/acquisition/KG_control.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"branin_cKG_experiment_decoupled\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Constrained-KG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/acquisition\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/acquisition/branin_cKG_experiment_decoupled.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"branin_cKG_experiment_penalty_adjusted\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Constrained-KG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/acquisition\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/acquisition/branin_cKG_experiment_penalty_adjusted.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"mistery_cKG_experiment\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Constrained-KG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/acquisition\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/acquisition/mistery_cKG_experiment.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"mistery_hybrid_cKG_experiment_penalty_adjusted\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Constrained-KG\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/core/acquisition\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/core/acquisition/mistery_hybrid_cKG_experiment_penalty_adjusted.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.mistery_hybrid_cKG_experiment_penalty_adjusted\" />\n        <item itemvalue=\"Python.KG_control\" />\n        <item itemvalue=\"Python.branin_cKG_experiment_penalty_adjusted\" />\n        <item itemvalue=\"Python.branin_cKG_experiment_decoupled\" />\n        <item itemvalue=\"Python.mistery_cKG_experiment\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"70763321-5c0b-47e5-8355-9730f446ef6a\" name=\"Default Changelist\" comment=\"\" />\n      <created>1599039637936</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1599039637936</updated>\n      <workItem from=\"1599039638993\" duration=\"136000\" />\n      <workItem from=\"1599040794846\" duration=\"1651000\" />\n      <workItem from=\"1599917802494\" duration=\"712000\" />\n      <workItem from=\"1600083656223\" duration=\"14197000\" />\n      <workItem from=\"1601376875231\" duration=\"606000\" />\n      <workItem from=\"1603218764182\" duration=\"46093000\" />\n      <workItem from=\"1605177358478\" duration=\"1195000\" />\n      <workItem from=\"1605457982894\" duration=\"5254000\" />\n      <workItem from=\"1605984784389\" duration=\"4089000\" />\n      <workItem from=\"1613394655934\" duration=\"95311000\" />\n      <workItem from=\"1614950527909\" duration=\"54031000\" />\n      <workItem from=\"1616189082534\" duration=\"56101000\" />\n      <workItem from=\"1617016105265\" duration=\"86083000\" />\n      <workItem from=\"1617231973124\" duration=\"47686000\" />\n      <workItem from=\"1617718902245\" duration=\"19576000\" />\n      <workItem from=\"1617872545957\" duration=\"6375000\" />\n      <workItem from=\"1618229232447\" duration=\"16787000\" />\n      <workItem from=\"1618386583161\" duration=\"599000\" />\n      <workItem from=\"1618432433088\" duration=\"744000\" />\n      <workItem from=\"1618478082836\" duration=\"4265000\" />\n      <workItem from=\"1618508264346\" duration=\"2220000\" />\n      <workItem from=\"1618566489264\" duration=\"390000\" />\n      <workItem from=\"1618666006933\" duration=\"1435000\" />\n      <workItem from=\"1618695014022\" duration=\"130396000\" />\n      <workItem from=\"1619443177081\" duration=\"77325000\" />\n      <workItem from=\"1620382882568\" duration=\"87642000\" />\n      <workItem from=\"1620918957294\" duration=\"76068000\" />\n      <workItem from=\"1621377771932\" duration=\"599000\" />\n      <workItem from=\"1621439438777\" duration=\"1288000\" />\n      <workItem from=\"1622454248028\" duration=\"17559000\" />\n      <workItem from=\"1622560228710\" duration=\"8540000\" />\n      <workItem from=\"1622569764087\" duration=\"22072000\" />\n      <workItem from=\"1623691493277\" duration=\"16970000\" />\n      <workItem from=\"1623937249904\" duration=\"8634000\" />\n      <workItem from=\"1624359412083\" duration=\"54000\" />\n      <workItem from=\"1624572521468\" duration=\"898000\" />\n      <workItem from=\"1624812203786\" duration=\"814000\" />\n      <workItem from=\"1625135942169\" duration=\"1109000\" />\n      <workItem from=\"1627583604561\" duration=\"619000\" />\n      <workItem from=\"1628524814476\" duration=\"3223000\" />\n      <workItem from=\"1629495979934\" duration=\"33000\" />\n      <workItem from=\"1629558530602\" duration=\"29558000\" />\n      <workItem from=\"1630421406275\" duration=\"10532000\" />\n      <workItem from=\"1631145402840\" duration=\"4361000\" />\n      <workItem from=\"1631527874995\" duration=\"994000\" />\n      <workItem from=\"1631701673228\" duration=\"16000\" />\n      <workItem from=\"1633342852705\" duration=\"20052000\" />\n      <workItem from=\"1635162194030\" duration=\"10786000\" />\n      <workItem from=\"1636377679644\" duration=\"22095000\" />\n      <workItem from=\"1636649173543\" duration=\"599000\" />\n      <workItem from=\"1636991480013\" duration=\"174000\" />\n      <workItem from=\"1637251395713\" duration=\"1680000\" />\n      <workItem from=\"1638281086821\" duration=\"1869000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_TS.coverage\" NAME=\"new_branin_TS Coverage Results\" MODIFIED=\"1621441468650\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_EI.coverage\" NAME=\"NN_EI Coverage Results\" MODIFIED=\"1600366941814\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_hybrid_cKG_experiment_penalty_adjusted.coverage\" NAME=\"mistery_hybrid_cKG_experiment_penalty_adjusted Coverage Results\" MODIFIED=\"1638281739481\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_hybrid_cKG_experiment.coverage\" NAME=\"mistery_hybrid_cKG_experiment Coverage Results\" MODIFIED=\"1620148295741\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$KG_control.coverage\" NAME=\"KG_control Coverage Results\" MODIFIED=\"1636465789837\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_hybrid_cKG_experiment_v2.coverage\" NAME=\"mistery_hybrid_cKG_experiment_v2 Coverage Results\" MODIFIED=\"1622664467652\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_bnch_1.coverage\" NAME=\"new_branin_bnch_1 Coverage Results\" MODIFIED=\"1619433526153\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$1D_PROBLEM09_experiment.coverage\" NAME=\"1D_PROBLEM09_experiment Coverage Results\" MODIFIED=\"1621252490147\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$gradient_modules.coverage\" NAME=\"gradient_modules Coverage Results\" MODIFIED=\"1613751544007\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/aux_modules\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$LunarLander_TS.coverage\" NAME=\"LunarLander_TS Coverage Results\" MODIFIED=\"1630072929034\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_hybrid_cKG_experiment.coverage\" NAME=\"new_branin_hybrid_cKG_experiment Coverage Results\" MODIFIED=\"1620153696716\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$acquisition_optimizer.coverage\" NAME=\"acquisition_optimizer Coverage Results\" MODIFIED=\"1615237323448\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/GPyOpt/optimization\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_bnch_2.coverage\" NAME=\"mistery_bnch_2 Coverage Results\" MODIFIED=\"1619432723698\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_penalised_experiment_v2.coverage\" NAME=\"mistery_penalised_experiment_v2 Coverage Results\" MODIFIED=\"1623696092702\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_experiment_bnch_1.coverage\" NAME=\"test_func_2_experiment_bnch_1 Coverage Results\" MODIFIED=\"1619377767472\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$stationary.coverage\" NAME=\"stationary Coverage Results\" MODIFIED=\"1614958853362\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/GPy/kern/src\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_TS.coverage\" NAME=\"branin_TS Coverage Results\" MODIFIED=\"1633632703021\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_hybrid_cKG_experiment_current_step.coverage\" NAME=\"branin_hybrid_cKG_experiment_current_step Coverage Results\" MODIFIED=\"1628526159798\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_nEI.coverage\" NAME=\"branin_nEI Coverage Results\" MODIFIED=\"1633343675587\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_cKG_experiment.coverage\" NAME=\"branin_cKG_experiment Coverage Results\" MODIFIED=\"1633343132652\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_hybrid_cKG_experiment_current_step.coverage\" NAME=\"test_func_2_hybrid_cKG_experiment_current_step Coverage Results\" MODIFIED=\"1622909619115\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_experiment_TS.coverage\" NAME=\"mistery_experiment_TS Coverage Results\" MODIFIED=\"1633616114073\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_experiment.coverage\" NAME=\"NN_experiment Coverage Results\" MODIFIED=\"1621350199840\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../Spearmint/examples/NN_constrained\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_nEI.coverage\" NAME=\"new_branin_nEI Coverage Results\" MODIFIED=\"1622545056850\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_experiment_cEI.coverage\" NAME=\"branin_experiment_cEI Coverage Results\" MODIFIED=\"1628525474219\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_bnch_2.coverage\" NAME=\"new_branin_bnch_2 Coverage Results\" MODIFIED=\"1619433395058\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_hybrid_cKG_experiment_current_step.coverage\" NAME=\"mistery_hybrid_cKG_experiment_current_step Coverage Results\" MODIFIED=\"1622664423069\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_TS.coverage\" NAME=\"test_func_2_TS Coverage Results\" MODIFIED=\"1622906972536\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$Sensitivity_Analisys.coverage\" NAME=\"Sensitivity_Analisys Coverage Results\" MODIFIED=\"1622570866089\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_function_2_nEI.coverage\" NAME=\"test_function_2_nEI Coverage Results\" MODIFIED=\"1623697273053\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$optimizer.coverage\" NAME=\"optimizer Coverage Results\" MODIFIED=\"1617287560408\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/GPyOpt/optimization\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$Generate_PLots.coverage\" NAME=\"Generate_PLots Coverage Results\" MODIFIED=\"1603826163749\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_hybrid_cKG_experiment_v2.coverage\" NAME=\"new_branin_hybrid_cKG_experiment_v2 Coverage Results\" MODIFIED=\"1620384508709\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_cKG_experiment_penalty_adjusted.coverage\" NAME=\"branin_cKG_experiment_penalty_adjusted Coverage Results\" MODIFIED=\"1636392577771\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$experiments1d.coverage\" NAME=\"experiments1d Coverage Results\" MODIFIED=\"1619363390670\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_1D_experiment.coverage\" NAME=\"test_func_1D_experiment Coverage Results\" MODIFIED=\"1619207143899\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_nEI.coverage\" NAME=\"NN_nEI Coverage Results\" MODIFIED=\"1621271073484\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_bnch_1.coverage\" NAME=\"mistery_bnch_1 Coverage Results\" MODIFIED=\"1619432692155\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$control.coverage\" NAME=\"control Coverage Results\" MODIFIED=\"1621364753536\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../Spearmint/spearmint\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_experiment_bnch_2.coverage\" NAME=\"test_func_2_experiment_bnch_2 Coverage Results\" MODIFIED=\"1622908776703\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_EI.coverage\" NAME=\"new_branin_EI Coverage Results\" MODIFIED=\"1617804377575\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_experiment.coverage\" NAME=\"mistery_experiment Coverage Results\" MODIFIED=\"1619723750868\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$real_functions_caller.coverage\" NAME=\"real_functions_caller Coverage Results\" MODIFIED=\"1620989840100\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/Real_Experiments/FC_Neural_Network\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_hybrid_cEI_experiment.coverage\" NAME=\"new_branin_hybrid_cEI_experiment Coverage Results\" MODIFIED=\"1617807082184\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_hybrid_cKG_experiment_v2.coverage\" NAME=\"test_func_2_hybrid_cKG_experiment_v2 Coverage Results\" MODIFIED=\"1630084858552\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_cKG_experiment.coverage\" NAME=\"mistery_cKG_experiment Coverage Results\" MODIFIED=\"1633976589666\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_nEI.coverage\" NAME=\"mistery_nEI Coverage Results\" MODIFIED=\"1622908674803\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_experiment_bnch.coverage\" NAME=\"new_branin_experiment_bnch Coverage Results\" MODIFIED=\"1599042076151\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$main_file.coverage\" NAME=\"main_file Coverage Results\" MODIFIED=\"1614952401092\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_experiment_pKG.coverage\" NAME=\"NN_experiment_pKG Coverage Results\" MODIFIED=\"1621108233169\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_hybrid_cKG_experiment.coverage\" NAME=\"branin_hybrid_cKG_experiment Coverage Results\" MODIFIED=\"1628526102182\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$experiments2d.coverage\" NAME=\"experiments2d Coverage Results\" MODIFIED=\"1599039715657\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_cKG_experiment_decoupled.coverage\" NAME=\"branin_cKG_experiment_decoupled Coverage Results\" MODIFIED=\"1635171991598\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$Turbo.coverage\" NAME=\"Turbo Coverage Results\" MODIFIED=\"1622565707732\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$LunarLander_EI.coverage\" NAME=\"LunarLander_EI Coverage Results\" MODIFIED=\"1629715385527\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_experiment_nEI.coverage\" NAME=\"NN_experiment_nEI Coverage Results\" MODIFIED=\"1621246931749\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_TS.coverage\" NAME=\"NN_TS Coverage Results\" MODIFIED=\"1620640003498\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_cEI.coverage\" NAME=\"test_func_2_cEI Coverage Results\" MODIFIED=\"1617807456562\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_experiment.coverage\" NAME=\"new_branin_experiment Coverage Results\" MODIFIED=\"1619724079083\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_experiment_cEI.coverage\" NAME=\"NN_experiment_cEI Coverage Results\" MODIFIED=\"1621108209887\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_experiment_TS.coverage\" NAME=\"NN_experiment_TS Coverage Results\" MODIFIED=\"1621108162729\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_experiment_continuous.coverage\" NAME=\"test_func_2_experiment_continuous Coverage Results\" MODIFIED=\"1616775238411\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_experiment.coverage\" NAME=\"test_func_2_experiment Coverage Results\" MODIFIED=\"1619724473223\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$Plot_Function.coverage\" NAME=\"Plot_Function Coverage Results\" MODIFIED=\"1619720933617\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$test_func_2_experiment__1_.coverage\" NAME=\"test_func_2_experiment (1) Coverage Results\" MODIFIED=\"1618335288030\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$Hybrid_continuous_KG.coverage\" NAME=\"Hybrid_continuous_KG Coverage Results\" MODIFIED=\"1619190142697\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$LunarLander_cKG.coverage\" NAME=\"LunarLander_cKG Coverage Results\" MODIFIED=\"1630429287908\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$bayesian_optimisation.coverage\" NAME=\"bayesian_optimisation Coverage Results\" MODIFIED=\"1614893950794\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$optimRandomSearch_example.coverage\" NAME=\"optimRandomSearch_example Coverage Results\" MODIFIED=\"1622567017745\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$NN_experiment_cKG.coverage\" NAME=\"NN_experiment_cKG Coverage Results\" MODIFIED=\"1621266286003\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$mistery_experiment_cEI.coverage\" NAME=\"mistery_experiment_cEI Coverage Results\" MODIFIED=\"1617807478997\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$branin_penalised_KG.coverage\" NAME=\"branin_penalised_KG Coverage Results\" MODIFIED=\"1629563120872\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$EI.coverage\" NAME=\"EI Coverage Results\" MODIFIED=\"1617806163901\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n    <SUITE FILE_PATH=\"coverage/Constrained_KG$new_branin_cEI_experiment.coverage\" NAME=\"new_branin_cEI_experiment Coverage Results\" MODIFIED=\"1619355572038\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/core/acquisition\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/.idea/workspace.xml	(date 1684582529438)
@@ -23,12 +23,145 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="70763321-5c0b-47e5-8355-9730f446ef6a" name="Default Changelist" comment="">
-      <change afterPath="$PROJECT_DIR$/core/acquisition/testfun2.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/core/acquisition/mistery_experiment_TS_computational_time.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/core/acquisition/mistery_hybrid_cKG_experiment_computational_time.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/core/acquisition/mistery_nEI_computational_time.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples/experiments2d.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples/experiments2d.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/acquisition/bayesian_optimisation_penalised_adjusted.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/bayesian_optimisation_penalised_adjusted.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/acquisition/mistery_hybrid_cKG_experiment_penalty_adjusted.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/mistery_hybrid_cKG_experiment_penalty_adjusted.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/core/acquisition/test_func_2_cEI.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/test_func_2_cEI.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/KG plots.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/KG plots.ipynb" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/1D_PROBLEM09_experiment.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/1D_PROBLEM09_experiment.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/Hybrid_continuous_KG_v2.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/Hybrid_continuous_KG_v2.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/NN_experiment_cEI.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/NN_experiment_cEI.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/NN_experiment_cKG.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/NN_experiment_cKG.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/LunarLander_TS/X_0.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/LunarLander_TS/it_0.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/LunarLander_cKG/X_0.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/LunarLander_cKG/it_0.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_TS_/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_TS_/it_22.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_cEI_/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_hybrid_KG/it_0.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_nEI/it_103.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_nEI/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/NN_pKG/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_0.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_cKG_n_obj_1_n_c_1/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_hybrid_KG_n_obj_1_n_c_0.010000000000000002/it_24.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_0.01/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1.0/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_nEI_n_obj_1.0_n_c_1e-06/it_101.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1.0_n_c_1.0/it_28.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/branin_penalised_KG_n_obj_1e-06_n_c_1e-06/it_28.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/exploratory_NN_YC/X.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/exploratory_NN_YC/YC.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_1e-06/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.01/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1.0_n_c_0.1/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_TS_n_obj_1e-06_n_c_1e-06/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cEI_n_obj_1e-06_n_c_1e-06/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_cost_aware_n_obj_0.0001_n_c_1e-08/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_decoupled_n_obj_0.0001_n_c_1e-08/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_n_obj_1_n_c_0.1/it_23.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_cKG_penalty_adjusted_n_obj_0.0001_n_c_1e-08/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.0001/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.001/it_3.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.01/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.03/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_0.1/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_1e-05/it_3.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_current_step1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_hybrid_KG_v2_1e-06/it_44.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_nEI_1.0/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.01/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.1/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_nEI_n_obj_1.0_n_c_0.31622776601683794/it_1.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_penalised_KG_n_obj_1e-06_n_c_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/mistery_penalised_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_hybrid_KG_1e-06/it_54.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_28.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_hybrid_KG_current_step1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_hybrid_KG_v21e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_hybrid_KG_v2_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_nEI_0.0001/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_nEI_0.001/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_nEI_0.01/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_nEI_1.0/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_nEI_1e-06/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_28.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_branin_penalised_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_TS_1e-06/it_15.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_TS_n_obj_1.0_n_c_0.010000000000000002/it_15.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_TS_n_obj_1_n_c_1/it_15.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_TS_n_obj_1e-06_n_c_1e-06/it_15.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_cEI_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_34.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_hybrid_KG_1.0/it_44.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/new_brannin_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_fun_TS_1e-06/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_fun_TS_n_obj_1.0_n_c_0.010000000000000002/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_fun_cEI_1e-06/it_71.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_fun_n_obj_1e-06_n_c_1e-06/it_21.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG-EI_n_obj_1e-06_n_c_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_0.0001_n_c_1e-08/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1.0_n_c_0.010000000000000002/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.010000000000000002/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_cKG_n_obj_1e-06_n_c_0.1/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_hybrid_KG_0.1/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_12.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_hybrid_KG_1.0/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_12.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_hybrid_KG_current_step1e-06/it_12.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_nEI_1.0/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.0/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_nEI_n_obj_0.0_n_c_0.1/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_nEI_n_obj_1.0_n_c_0.1/it_2.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_1e-06/it_12.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_penalised_hybrid_KG_n_obj_1.0_n_c_0.010000000000000002/it_12.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/X_None.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_function_2_penalised_n_obj_1.0_n_c_0.010000000000000002/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/RESULTS/test_mistery_hybrid_KG_1e-06/it_4.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/Real_Experiments/FC_Neural_Network/real_functions_caller.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/bayesian_optimisation.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/bayesian_optimisation.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/mistery_nEI.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/mistery_nEI.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/core/acquisition/mistery_penalised_experiment_v2.py" beforeDir="false" afterPath="$PROJECT_DIR$/core/acquisition/mistery_penalised_experiment_v2.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -54,27 +187,34 @@
     </file-type-list>
   </component>
   <component name="JupyterTrust" id="6976c873-9a44-416c-9fb9-0d73f0568aa5" />
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
   <component name="ProjectId" id="1gwxpMS0KHhbzi2MRg2OeGGFWBQ" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">
-    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
-    <property name="WebServerToolWindowFactoryState" value="false" />
-    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="Python" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/../BOPL_Cornell-Warwick" />
-    <property name="settings.editor.selected.configurable" value="preferences.toDoOptions" />
-  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "WebServerToolWindowFactoryState": "false",
+    "last_opened_file_path": "/home/juan/Documents/Github_repos/Constrained-KG",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/core/acquisition" />
       <recent name="$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts" />
     </key>
   </component>
-  <component name="RunManager" selected="Python.mistery_hybrid_cKG_experiment_penalty_adjusted">
-    <configuration name="KG_control" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+  <component name="RunManager" selected="Python.1D_PROBLEM09_experiment">
+    <configuration name="1D_PROBLEM09_experiment" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Constrained-KG" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -87,7 +227,7 @@
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/KG_control.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/1D_PROBLEM09_experiment.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -96,7 +236,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="branin_cKG_experiment_decoupled" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="KG_control" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Constrained-KG" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -109,7 +249,7 @@
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/branin_cKG_experiment_decoupled.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/KG_control.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -118,7 +258,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="branin_cKG_experiment_penalty_adjusted" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="Unconstrained_1D_PROBLEM09_experiment" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Constrained-KG" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -131,7 +271,7 @@
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/branin_cKG_experiment_penalty_adjusted.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/Unconstrained_1D_PROBLEM09_experiment.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -140,7 +280,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="mistery_cKG_experiment" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="branin_cKG_experiment_penalty_adjusted" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="Constrained-KG" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -153,7 +293,7 @@
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/mistery_cKG_experiment.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/core/acquisition/branin_cKG_experiment_penalty_adjusted.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -186,11 +326,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Python.1D_PROBLEM09_experiment" />
+        <item itemvalue="Python.Unconstrained_1D_PROBLEM09_experiment" />
         <item itemvalue="Python.mistery_hybrid_cKG_experiment_penalty_adjusted" />
         <item itemvalue="Python.KG_control" />
         <item itemvalue="Python.branin_cKG_experiment_penalty_adjusted" />
-        <item itemvalue="Python.branin_cKG_experiment_decoupled" />
-        <item itemvalue="Python.mistery_cKG_experiment" />
       </list>
     </recent_temporary>
   </component>
@@ -255,6 +395,11 @@
       <workItem from="1636991480013" duration="174000" />
       <workItem from="1637251395713" duration="1680000" />
       <workItem from="1638281086821" duration="1869000" />
+      <workItem from="1640599777407" duration="599000" />
+      <workItem from="1644238762250" duration="882000" />
+      <workItem from="1644262815329" duration="17000" />
+      <workItem from="1645466068677" duration="2287000" />
+      <workItem from="1684577879366" duration="4650000" />
     </task>
     <servers />
   </component>
@@ -271,82 +416,98 @@
         </entry>
       </map>
     </option>
-    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/core/acquisition/Hybrid_continuous_KG_v2.py</url>
+          <line>1175</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/core/acquisition/bayesian_optimisation.py</url>
+          <line>219</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_TS.coverage" NAME="new_branin_TS Coverage Results" MODIFIED="1621441468650" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_EI.coverage" NAME="NN_EI Coverage Results" MODIFIED="1600366941814" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_TS.coverage" NAME="NN_experiment_TS Coverage Results" MODIFIED="1621108162729" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$control.coverage" NAME="control Coverage Results" MODIFIED="1621364753536" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../Spearmint/spearmint" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_hybrid_cKG_experiment_current_step.coverage" NAME="branin_hybrid_cKG_experiment_current_step Coverage Results" MODIFIED="1628526159798" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$1D_PROBLEM09_experiment.coverage" NAME="1D_PROBLEM09_experiment Coverage Results" MODIFIED="1684582033038" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment_penalty_adjusted.coverage" NAME="mistery_hybrid_cKG_experiment_penalty_adjusted Coverage Results" MODIFIED="1638281739481" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment.coverage" NAME="mistery_hybrid_cKG_experiment Coverage Results" MODIFIED="1620148295741" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$KG_control.coverage" NAME="KG_control Coverage Results" MODIFIED="1636465789837" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment_v2.coverage" NAME="mistery_hybrid_cKG_experiment_v2 Coverage Results" MODIFIED="1622664467652" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_bnch_1.coverage" NAME="new_branin_bnch_1 Coverage Results" MODIFIED="1619433526153" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$1D_PROBLEM09_experiment.coverage" NAME="1D_PROBLEM09_experiment Coverage Results" MODIFIED="1621252490147" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$gradient_modules.coverage" NAME="gradient_modules Coverage Results" MODIFIED="1613751544007" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/aux_modules" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$LunarLander_TS.coverage" NAME="LunarLander_TS Coverage Results" MODIFIED="1630072929034" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_hybrid_cKG_experiment.coverage" NAME="new_branin_hybrid_cKG_experiment Coverage Results" MODIFIED="1620153696716" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$acquisition_optimizer.coverage" NAME="acquisition_optimizer Coverage Results" MODIFIED="1615237323448" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/optimization" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_bnch_2.coverage" NAME="mistery_bnch_2 Coverage Results" MODIFIED="1619432723698" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_bnch_1.coverage" NAME="mistery_bnch_1 Coverage Results" MODIFIED="1619432692155" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_1D_experiment.coverage" NAME="test_func_1D_experiment Coverage Results" MODIFIED="1619207143899" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment__1_.coverage" NAME="test_func_2_experiment (1) Coverage Results" MODIFIED="1618335288030" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$LunarLander_cKG.coverage" NAME="LunarLander_cKG Coverage Results" MODIFIED="1630429287908" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_TS.coverage" NAME="NN_TS Coverage Results" MODIFIED="1620640003498" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_cEI_experiment.coverage" NAME="new_branin_cEI_experiment Coverage Results" MODIFIED="1619355572038" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_hybrid_cKG_experiment_current_step.coverage" NAME="test_func_2_hybrid_cKG_experiment_current_step Coverage Results" MODIFIED="1622909619115" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_cEI.coverage" NAME="NN_experiment_cEI Coverage Results" MODIFIED="1621108209887" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$Plot_Function.coverage" NAME="Plot_Function Coverage Results" MODIFIED="1619720933617" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$mistery_penalised_experiment_v2.coverage" NAME="mistery_penalised_experiment_v2 Coverage Results" MODIFIED="1623696092702" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment_bnch_1.coverage" NAME="test_func_2_experiment_bnch_1 Coverage Results" MODIFIED="1619377767472" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$EI.coverage" NAME="EI Coverage Results" MODIFIED="1617806163901" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_experiment_bnch.coverage" NAME="new_branin_experiment_bnch Coverage Results" MODIFIED="1599042076151" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_hybrid_cKG_experiment.coverage" NAME="branin_hybrid_cKG_experiment Coverage Results" MODIFIED="1628526102182" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_hybrid_cEI_experiment.coverage" NAME="new_branin_hybrid_cEI_experiment Coverage Results" MODIFIED="1617807082184" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$stationary.coverage" NAME="stationary Coverage Results" MODIFIED="1614958853362" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPy/kern/src" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_TS.coverage" NAME="branin_TS Coverage Results" MODIFIED="1633632703021" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_hybrid_cKG_experiment_current_step.coverage" NAME="branin_hybrid_cKG_experiment_current_step Coverage Results" MODIFIED="1628526159798" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_nEI.coverage" NAME="branin_nEI Coverage Results" MODIFIED="1633343675587" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_cKG_experiment.coverage" NAME="branin_cKG_experiment Coverage Results" MODIFIED="1633343132652" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_hybrid_cKG_experiment_current_step.coverage" NAME="test_func_2_hybrid_cKG_experiment_current_step Coverage Results" MODIFIED="1622909619115" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_experiment_TS.coverage" NAME="mistery_experiment_TS Coverage Results" MODIFIED="1633616114073" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment.coverage" NAME="NN_experiment Coverage Results" MODIFIED="1621350199840" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../Spearmint/examples/NN_constrained" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_nEI.coverage" NAME="new_branin_nEI Coverage Results" MODIFIED="1622545056850" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$KG_control.coverage" NAME="KG_control Coverage Results" MODIFIED="1636465789837" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$branin_experiment_cEI.coverage" NAME="branin_experiment_cEI Coverage Results" MODIFIED="1628525474219" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_bnch_2.coverage" NAME="new_branin_bnch_2 Coverage Results" MODIFIED="1619433395058" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment_current_step.coverage" NAME="mistery_hybrid_cKG_experiment_current_step Coverage Results" MODIFIED="1622664423069" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_bnch_2.coverage" NAME="mistery_bnch_2 Coverage Results" MODIFIED="1619432723698" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_cKG.coverage" NAME="NN_experiment_cKG Coverage Results" MODIFIED="1621266286003" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$Generate_PLots.coverage" NAME="Generate_PLots Coverage Results" MODIFIED="1603826163749" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_cKG_experiment_decoupled.coverage" NAME="branin_cKG_experiment_decoupled Coverage Results" MODIFIED="1635171991598" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_experiment.coverage" NAME="mistery_experiment Coverage Results" MODIFIED="1619723750868" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_TS.coverage" NAME="test_func_2_TS Coverage Results" MODIFIED="1622906972536" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_hybrid_cKG_experiment.coverage" NAME="new_branin_hybrid_cKG_experiment Coverage Results" MODIFIED="1620153696716" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$Unconstrained_1D_PROBLEM09_experiment.coverage" NAME="Unconstrained_1D_PROBLEM09_experiment Coverage Results" MODIFIED="1684580430829" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment_bnch_1.coverage" NAME="test_func_2_experiment_bnch_1 Coverage Results" MODIFIED="1619377767472" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$Sensitivity_Analisys.coverage" NAME="Sensitivity_Analisys Coverage Results" MODIFIED="1622570866089" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_function_2_nEI.coverage" NAME="test_function_2_nEI Coverage Results" MODIFIED="1623697273053" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$LunarLander_TS.coverage" NAME="LunarLander_TS Coverage Results" MODIFIED="1630072929034" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$optimizer.coverage" NAME="optimizer Coverage Results" MODIFIED="1617287560408" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/optimization" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$Generate_PLots.coverage" NAME="Generate_PLots Coverage Results" MODIFIED="1603826163749" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_hybrid_cKG_experiment_v2.coverage" NAME="new_branin_hybrid_cKG_experiment_v2 Coverage Results" MODIFIED="1620384508709" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_cKG_experiment_penalty_adjusted.coverage" NAME="branin_cKG_experiment_penalty_adjusted Coverage Results" MODIFIED="1636392577771" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$experiments1d.coverage" NAME="experiments1d Coverage Results" MODIFIED="1619363390670" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_1D_experiment.coverage" NAME="test_func_1D_experiment Coverage Results" MODIFIED="1619207143899" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_nEI.coverage" NAME="NN_nEI Coverage Results" MODIFIED="1621271073484" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_bnch_1.coverage" NAME="mistery_bnch_1 Coverage Results" MODIFIED="1619432692155" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$control.coverage" NAME="control Coverage Results" MODIFIED="1621364753536" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../Spearmint/spearmint" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment_bnch_2.coverage" NAME="test_func_2_experiment_bnch_2 Coverage Results" MODIFIED="1622908776703" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$main_file.coverage" NAME="main_file Coverage Results" MODIFIED="1614952401092" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment.coverage" NAME="test_func_2_experiment Coverage Results" MODIFIED="1619724473223" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_EI.coverage" NAME="new_branin_EI Coverage Results" MODIFIED="1617804377575" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_experiment.coverage" NAME="mistery_experiment Coverage Results" MODIFIED="1619723750868" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$real_functions_caller.coverage" NAME="real_functions_caller Coverage Results" MODIFIED="1620989840100" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/Real_Experiments/FC_Neural_Network" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_hybrid_cEI_experiment.coverage" NAME="new_branin_hybrid_cEI_experiment Coverage Results" MODIFIED="1617807082184" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_hybrid_cKG_experiment_v2.coverage" NAME="test_func_2_hybrid_cKG_experiment_v2 Coverage Results" MODIFIED="1630084858552" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$mistery_cKG_experiment.coverage" NAME="mistery_cKG_experiment Coverage Results" MODIFIED="1633976589666" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$experiments2d.coverage" NAME="experiments2d Coverage Results" MODIFIED="1599039715657" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment.coverage" NAME="NN_experiment Coverage Results" MODIFIED="1621350199840" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../Spearmint/examples/NN_constrained" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment_continuous.coverage" NAME="test_func_2_experiment_continuous Coverage Results" MODIFIED="1616775238411" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$acquisition_optimizer.coverage" NAME="acquisition_optimizer Coverage Results" MODIFIED="1615237323448" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/optimization" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_experiment_cEI.coverage" NAME="mistery_experiment_cEI Coverage Results" MODIFIED="1617807478997" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$mistery_nEI.coverage" NAME="mistery_nEI Coverage Results" MODIFIED="1622908674803" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_experiment_bnch.coverage" NAME="new_branin_experiment_bnch Coverage Results" MODIFIED="1599042076151" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$main_file.coverage" NAME="main_file Coverage Results" MODIFIED="1614952401092" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_pKG.coverage" NAME="NN_experiment_pKG Coverage Results" MODIFIED="1621108233169" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_hybrid_cKG_experiment.coverage" NAME="branin_hybrid_cKG_experiment Coverage Results" MODIFIED="1628526102182" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$experiments2d.coverage" NAME="experiments2d Coverage Results" MODIFIED="1599039715657" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_cKG_experiment_decoupled.coverage" NAME="branin_cKG_experiment_decoupled Coverage Results" MODIFIED="1635171991598" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$Turbo.coverage" NAME="Turbo Coverage Results" MODIFIED="1622565707732" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$LunarLander_EI.coverage" NAME="LunarLander_EI Coverage Results" MODIFIED="1629715385527" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_nEI.coverage" NAME="NN_nEI Coverage Results" MODIFIED="1621271073484" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$NN_EI.coverage" NAME="NN_EI Coverage Results" MODIFIED="1600366941814" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_cKG_experiment_penalty_adjusted.coverage" NAME="branin_cKG_experiment_penalty_adjusted Coverage Results" MODIFIED="1636392577771" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$experiments1d.coverage" NAME="experiments1d Coverage Results" MODIFIED="1619363390670" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/GPyOpt/objective_examples" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment_v2.coverage" NAME="mistery_hybrid_cKG_experiment_v2 Coverage Results" MODIFIED="1622664467652" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_experiment_TS.coverage" NAME="mistery_experiment_TS Coverage Results" MODIFIED="1633616114073" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_function_2_nEI.coverage" NAME="test_function_2_nEI Coverage Results" MODIFIED="1623697273053" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment_bnch_2.coverage" NAME="test_func_2_experiment_bnch_2 Coverage Results" MODIFIED="1622908776703" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_nEI.coverage" NAME="NN_experiment_nEI Coverage Results" MODIFIED="1621246931749" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_TS.coverage" NAME="NN_TS Coverage Results" MODIFIED="1620640003498" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_cEI.coverage" NAME="test_func_2_cEI Coverage Results" MODIFIED="1617807456562" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_cKG_experiment.coverage" NAME="branin_cKG_experiment Coverage Results" MODIFIED="1633343132652" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment_current_step.coverage" NAME="mistery_hybrid_cKG_experiment_current_step Coverage Results" MODIFIED="1622664423069" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_hybrid_cKG_experiment_v2.coverage" NAME="new_branin_hybrid_cKG_experiment_v2 Coverage Results" MODIFIED="1620384508709" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$optimRandomSearch_example.coverage" NAME="optimRandomSearch_example Coverage Results" MODIFIED="1622567017745" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_bnch_2.coverage" NAME="new_branin_bnch_2 Coverage Results" MODIFIED="1619433395058" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_TS.coverage" NAME="branin_TS Coverage Results" MODIFIED="1633632703021" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$gradient_modules.coverage" NAME="gradient_modules Coverage Results" MODIFIED="1613751544007" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/aux_modules" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_hybrid_cKG_experiment.coverage" NAME="mistery_hybrid_cKG_experiment Coverage Results" MODIFIED="1620148295741" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_experiment.coverage" NAME="new_branin_experiment Coverage Results" MODIFIED="1619724079083" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_cEI.coverage" NAME="NN_experiment_cEI Coverage Results" MODIFIED="1621108209887" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_TS.coverage" NAME="NN_experiment_TS Coverage Results" MODIFIED="1621108162729" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment_continuous.coverage" NAME="test_func_2_experiment_continuous Coverage Results" MODIFIED="1616775238411" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment.coverage" NAME="test_func_2_experiment Coverage Results" MODIFIED="1619724473223" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$Plot_Function.coverage" NAME="Plot_Function Coverage Results" MODIFIED="1619720933617" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_experiment__1_.coverage" NAME="test_func_2_experiment (1) Coverage Results" MODIFIED="1618335288030" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_nEI.coverage" NAME="new_branin_nEI Coverage Results" MODIFIED="1622545056850" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$Turbo.coverage" NAME="Turbo Coverage Results" MODIFIED="1622565707732" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts" />
     <SUITE FILE_PATH="coverage/Constrained_KG$Hybrid_continuous_KG.coverage" NAME="Hybrid_continuous_KG Coverage Results" MODIFIED="1619190142697" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$LunarLander_cKG.coverage" NAME="LunarLander_cKG Coverage Results" MODIFIED="1630429287908" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_penalised_KG.coverage" NAME="branin_penalised_KG Coverage Results" MODIFIED="1629563120872" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$LunarLander_EI.coverage" NAME="LunarLander_EI Coverage Results" MODIFIED="1629715385527" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_hybrid_cKG_experiment_v2.coverage" NAME="test_func_2_hybrid_cKG_experiment_v2 Coverage Results" MODIFIED="1630084858552" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
     <SUITE FILE_PATH="coverage/Constrained_KG$bayesian_optimisation.coverage" NAME="bayesian_optimisation Coverage Results" MODIFIED="1614893950794" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$optimRandomSearch_example.coverage" NAME="optimRandomSearch_example Coverage Results" MODIFIED="1622567017745" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../../Competitions/GECCO/resourcepackage2021/ResourcePackage/ExampleScripts" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$NN_experiment_cKG.coverage" NAME="NN_experiment_cKG Coverage Results" MODIFIED="1621266286003" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$mistery_experiment_cEI.coverage" NAME="mistery_experiment_cEI Coverage Results" MODIFIED="1617807478997" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$branin_penalised_KG.coverage" NAME="branin_penalised_KG Coverage Results" MODIFIED="1629563120872" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$EI.coverage" NAME="EI Coverage Results" MODIFIED="1617806163901" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
-    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_cEI_experiment.coverage" NAME="new_branin_cEI_experiment Coverage Results" MODIFIED="1619355572038" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_bnch_1.coverage" NAME="new_branin_bnch_1 Coverage Results" MODIFIED="1619433526153" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$test_func_2_cEI.coverage" NAME="test_func_2_cEI Coverage Results" MODIFIED="1617807456562" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$new_branin_TS.coverage" NAME="new_branin_TS Coverage Results" MODIFIED="1621441468650" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$real_functions_caller.coverage" NAME="real_functions_caller Coverage Results" MODIFIED="1620989840100" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition/Real_Experiments/FC_Neural_Network" />
+    <SUITE FILE_PATH="coverage/Constrained_KG$branin_nEI.coverage" NAME="branin_nEI Coverage Results" MODIFIED="1633343675587" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/core/acquisition" />
   </component>
 </project>
\ No newline at end of file
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum\n0,0.0,0.0,14.115921855253964,0.9570278789392819,0,0.0,0.0,0.0\n1,0.0,0.0,18.613486201764438,0.34746091788627476,0,0.0,0.0,0.0\n2,0.0,0.0,18.556631000854974,0.35257210228143937,0,0.0,0.0,0.0\n3,0.0,0.0,11.604776109227982,0.06345788190486706,0,0.0,0.0,0.0\n4,0.0,0.0,3.0658962198865636,-1.1941506617757538,1,0.0,0.0,0.0\n5,0.0,0.0,14.113809795226945,0.9863029975516607,0,0.0,0.0,0.0\n6,0.0,0.0,15.170936366274727,-0.5904146560860258,1,0.0,0.0,0.0\n7,0.0,0.0,-0.7077239545984593,-1.4443060103579786,1,0.0,0.0,0.0\n8,0.0,0.0,-5.121210684008188,1.0168055648903382,0,0.0,0.0,0.0\n9,0.0,0.0,-14.238171900904774,-0.303683453978307,1,0.0,0.0,0.0\n10,16.020988743467953,20.10761543869919,19.34946227644323,0.6729987049546011,0,0.0,20.10761543869919,0.0\n11,16.020988743467953,19.592646188854303,20.543511880636142,0.3923888005234532,0,0.0,19.592646188854303,0.0\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/it_1.csv	(date 1659454793415)
@@ -1,13 +1,12 @@
-,OC sampled,OC GP mean,Y,C,C_bool,recommended_val_sampled,recommended_val_GP,optimum
-0,0.0,0.0,14.115921855253964,0.9570278789392819,0,0.0,0.0,0.0
-1,0.0,0.0,18.613486201764438,0.34746091788627476,0,0.0,0.0,0.0
-2,0.0,0.0,18.556631000854974,0.35257210228143937,0,0.0,0.0,0.0
-3,0.0,0.0,11.604776109227982,0.06345788190486706,0,0.0,0.0,0.0
-4,0.0,0.0,3.0658962198865636,-1.1941506617757538,1,0.0,0.0,0.0
-5,0.0,0.0,14.113809795226945,0.9863029975516607,0,0.0,0.0,0.0
-6,0.0,0.0,15.170936366274727,-0.5904146560860258,1,0.0,0.0,0.0
-7,0.0,0.0,-0.7077239545984593,-1.4443060103579786,1,0.0,0.0,0.0
-8,0.0,0.0,-5.121210684008188,1.0168055648903382,0,0.0,0.0,0.0
-9,0.0,0.0,-14.238171900904774,-0.303683453978307,1,0.0,0.0,0.0
-10,16.020988743467953,20.10761543869919,19.34946227644323,0.6729987049546011,0,0.0,20.10761543869919,0.0
-11,16.020988743467953,19.592646188854303,20.543511880636142,0.3923888005234532,0,0.0,19.592646188854303,0.0
+,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum
+0,0.0,0.0,-0.8840781447460367,0,0.0,0.0,0.0
+1,0.0,0.0,3.6134862017644354,0,0.0,0.0,0.0
+2,0.0,0.0,3.5566310008549777,0,0.0,0.0,0.0
+3,0.0,0.0,-3.3952238907720176,0,0.0,0.0,0.0
+4,0.0,0.0,-11.934103780113437,1,0.0,0.0,0.0
+5,0.0,0.0,-0.8861902047730539,0,0.0,0.0,0.0
+6,0.0,0.0,0.17093636627472686,1,0.0,0.0,0.0
+7,0.0,0.0,-15.707723954598459,1,0.0,0.0,0.0
+8,0.0,0.0,-20.12121068400819,0,0.0,0.0,0.0
+9,0.0,0.0,-29.238171900904774,1,0.0,0.0,0.0
+10,0.0,0.0,-14.367103950599763,0,0.0,0.0,0.0
Index: core/acquisition/bayesian_optimisation.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Copyright (c) 2018, Raul Astudillo\r\n\r\nimport GPyOpt\r\nimport collections\r\nimport numpy as np\r\n#import pygmo as pg\r\nimport time\r\nimport csv\r\nimport matplotlib.pyplot as plt\r\nimport time\r\nfrom GPyOpt.DM.Decision_Maker import DM\r\nfrom GPyOpt.DM.inference import inf\r\nfrom GPyOpt.experiment_design import initial_design\r\nfrom GPyOpt.util.general import best_value\r\nfrom GPyOpt.util.duplicate_manager import DuplicateManager\r\nfrom GPyOpt.core.errors import InvalidConfigError\r\nfrom GPyOpt.core.task.cost import CostModel\r\nfrom GPyOpt.optimization.acquisition_optimizer import ContextManager\r\nfrom scipy.stats import norm\r\nimport pandas as pd\r\nimport os\r\nfrom datetime import datetime\r\n\r\ntry:\r\n    from GPyOpt.plotting.plots_bo import plot_acquisition, plot_convergence\r\nexcept:\r\n    pass\r\n\r\n\r\nclass BO(object):\r\n    \"\"\"\r\n    Runner of the multi-attribute Bayesian optimization loop. This class wraps the optimization loop around the different handlers.\r\n    :param model: GPyOpt model class.\r\n    :param space: GPyOpt space class.\r\n    :param objective: GPyOpt objective class.\r\n    :param acquisition: GPyOpt acquisition class.\r\n    :param evaluator: GPyOpt evaluator class.\r\n    :param X_init: 2d numpy array containing the initial inputs (one per row) of the model.\r\n    :param Y_init: 2d numpy array containing the initial outputs (one per row) of the model.\r\n    :param cost: GPyOpt cost class (default, none).\r\n    :param normalize_Y: whether to normalize the outputs before performing any optimization (default, True).\r\n    :param model_update_interval: interval of collected observations after which the model is updated (default, 1).\r\n    :param de_duplication: GPyOpt DuplicateManager class. Avoids re-evaluating the objective at previous, pending or infeasible locations (default, False).\r\n    \"\"\"\r\n\r\n\r\n    def __init__(self, model, model_c,space, objective, constraint, acquisition, evaluator,\r\n                 X_init ,ls_evaluator=None, ls_acquisition=None, tag_last_evaluation  =True,expensive=False,\r\n                 Y_init=None, C_init=None, cost = None, normalize_Y = False, model_update_interval = 1,\r\n                 deterministic=True,true_preference = 0.5):\r\n\r\n        self.true_preference = true_preference\r\n        self.model_c = model_c\r\n        self.model = model\r\n        self.space = space\r\n        self.objective = objective\r\n        self.constraint = constraint\r\n        self.acquisition = acquisition\r\n        self.ls_acquisition = ls_acquisition\r\n        self.utility = acquisition.utility\r\n        self.evaluator = evaluator\r\n        self.ls_evaluator = ls_evaluator\r\n        self.normalize_Y = normalize_Y\r\n        self.model_update_interval = model_update_interval\r\n        self.X = X_init\r\n        self.Y = Y_init\r\n        self.C = C_init\r\n        self.deterministic = deterministic\r\n        self.cost = CostModel(cost)\r\n        self.model_parameters_iterations = None\r\n        self.expensive = expensive\r\n        self.tag_last_evaluation = tag_last_evaluation\r\n        try:\r\n            if acquisition.name == \"Constrained_Thompson_Sampling\":\r\n                self.sample_from_acq = True\r\n\r\n            else:\r\n                self.sample_from_acq = False\r\n\r\n        except:\r\n            print(\"name of acquisition function wasnt provided\")\r\n            self.sample_from_acq = False\r\n\r\n\r\n    def suggest_next_locations(self, context = None, pending_X = None, ignored_X = None):\r\n        \"\"\"\r\n        Run a single optimization step and return the next locations to evaluate the objective.\r\n        Number of suggested locations equals to batch_size.\r\n\r\n        :param context: fixes specified variables to a particular context (values) for the optimization run (default, None).\r\n        :param pending_X: matrix of input configurations that are in a pending state (i.e., do not have an evaluation yet) (default, None).\r\n        :param ignored_X: matrix of input configurations that the user black-lists, i.e., those configurations will not be suggested again (default, None).\r\n        \"\"\"\r\n        self.model_parameters_iterations = None\r\n        self.num_acquisitions = 0\r\n        self.context = context\r\n        self._update_model(self.normalization_type)\r\n\r\n        suggested_locations = self._compute_next_evaluations(pending_zipped_X=pending_X, ignored_zipped_X=ignored_X)\r\n        return suggested_locations\r\n    \r\n\r\n    def run_optimization(self, max_iter = 1,\r\n                         max_time = np.inf,\r\n                         compute_OC=True,\r\n                         stop_date=None,\r\n                         eps = 1e-8,\r\n                         context = None,\r\n                         verbosity=False,\r\n                         path = None,\r\n                         KG_dynamic_optimisation=False,\r\n                         evaluations_file = None,\r\n                         rep=None):\r\n        \"\"\"\r\n        Runs Bayesian Optimization for a number 'max_iter' of iterations (after the initial exploration data)\r\n\r\n        :param max_iter: exploration horizon, or number of acquisitions. If nothing is provided optimizes the current acquisition.\r\n        :param max_time: maximum exploration horizon in seconds.\r\n        :param eps: minimum distance between two consecutive x's to keep running the model.\r\n        :param context: fixes specified variables to a particular context (values) for the optimization run (default, None).\r\n        :param verbosity: flag to print the optimization results after each iteration (default, False).\r\n        :param evaluations_file: filename of the file where the evaluated points and corresponding evaluations are saved (default, None).\r\n        \"\"\"\r\n\r\n        if self.objective is None:\r\n            raise InvalidConfigError(\"Cannot run the optimization loop without the objective function\")\r\n\r\n        # --- Save the options to print and save the results\r\n        self.compute_OC = compute_OC\r\n        self.KG_dynamic_optimisation = KG_dynamic_optimisation\r\n        self.verbosity = verbosity\r\n        self.evaluations_file = evaluations_file\r\n        self.context = context\r\n        self.path = path\r\n\r\n        # --- Setting up stop conditions\r\n        self.eps = eps\r\n        if  (max_iter is None) and (max_time is None):\r\n            self.max_iter = 0\r\n            self.max_time = np.inf\r\n        elif (max_iter is None) and (max_time is not None):\r\n            self.max_iter = np.inf\r\n            self.max_time = max_time\r\n        elif (max_iter is not None) and (max_time is None):\r\n            self.max_iter = max_iter\r\n            self.max_time = np.inf\r\n        else:\r\n            self.max_iter = max_iter\r\n            self.max_time = max_time\r\n\r\n        # --- Initial function evaluation and model fitting\r\n\r\n        if self.X is not None and self.Y is None:\r\n            self.Y, cost_values = self.objective.evaluate(self.X)\r\n            self.C, cost_values = self.constraint.evaluate(self.X)\r\n            if self.cost.cost_type == 'evaluation_time':\r\n                self.cost.update_cost_model(self.X, cost_values)\r\n        self.n_init = self.X.shape[0]\r\n        #self.model.updateModel(self.X,self.Y)\r\n\r\n        # --- Initialize iterations and running time\r\n        self.time_zero = time.time()\r\n        self.cum_time  = 0\r\n        self.num_acquisitions = 0\r\n        self.suggested_sample = self.X\r\n        self.Y_new = self.Y\r\n        self.Opportunity_Cost_sampled = []\r\n        self.Opportunity_Cost_GP_mean = []\r\n\r\n        self.recommended_value_GP_mean = []\r\n        self.recommended_value_sampled = []\r\n        self.underlying_optimum = []\r\n        value_so_far = []\r\n\r\n        # --- Initialize time cost of the evaluations\r\n        print(\"MAIN LOOP STARTS\")\r\n        Opportunity_Cost = []\r\n        self.true_best_stats = {\"true_best\": [], \"mean_gp\": [], \"std gp\": [], \"pf\": [], \"mu_pf\": [], \"var_pf\": [],\r\n                                \"residual_noise\": []}\r\n\r\n\r\n        self.stop_date = stop_date #datetime(2021, 5, 8, 6)\r\n        today = datetime.now()\r\n        while (self.max_iter > self.num_acquisitions ) and (self.stop_date > today):\r\n            today = datetime.now()\r\n\r\n            self._update_model()\r\n\r\n\r\n            self.optimize_final_evaluation(self.KG_dynamic_optimisation)\r\n            print(\"maKG optimizer\")\r\n            start = time.time()\r\n\r\n            print(\"X\", self.X)\r\n            print(\"Y\", self.Y)\r\n            print(\"C\", np.product(np.array(self.C)<0,axis=0))\r\n            self.suggested_sample = self._compute_next_evaluations()\r\n\r\n            finish = time.time()\r\n\r\n            if verbosity:\r\n                print(\"self.suggested_sample\", self.suggested_sample)\r\n                initial_design = GPyOpt.experiment_design.initial_design('latin', self.space, 10000)\r\n                fvals, _ =self.objective.evaluate(initial_design)\r\n                cvals, _ =self.constraint.evaluate(initial_design)\r\n                cvals = np.hstack(cvals).squeeze()\r\n\r\n                cvalsbool = np.array(cvals) < 0\r\n\r\n                if len(cvalsbool.shape) > 1:\r\n                    cvalsbool = np.product(cvalsbool, axis=1)\r\n\r\n                cvalsbool = np.array(cvalsbool, dtype=bool).reshape(-1)\r\n\r\n                fvals = np.array(fvals).reshape(-1)\r\n\r\n                plt.title(\"real surface\")\r\n                plt.scatter(initial_design[:,0][cvalsbool], initial_design[:,1][cvalsbool], c=fvals[cvalsbool])\r\n                plt.scatter(self.X[:,0], self.X[:,1], color=\"magenta\")\r\n                plt.scatter(self.suggested_sample[:,0], self.suggested_sample[:,1], color=\"red\", s=30)\r\n                plt.show()\r\n\r\n                initial_design = GPyOpt.experiment_design.initial_design('latin', self.space, 1000)\r\n                acq_vals = self.acquisition._compute_acq(initial_design)\r\n\r\n                agregated_posterior = self.aggregated_posterior(initial_design)\r\n                plt.title(\"estimated surface\")\r\n                plt.scatter(initial_design[:, 0], initial_design[:, 1], c=-agregated_posterior)\r\n                plt.show()\r\n\r\n                _, penalty = self.update_penalty()\r\n                print(\"penalty\", penalty)\r\n                agregated_penalised_posterior = self.agreagated_penalised_posterior(initial_design,\r\n                                                                                    penalisation=penalty)\r\n                plt.title(\"estimated penalised surface\")\r\n                plt.scatter(initial_design[:, 0], initial_design[:, 1], c=-agregated_penalised_posterior)\r\n                plt.show()\r\n                #\r\n                # print(\"max val\", np.max(acq_vals), \"min val\", np.min(acq_vals))\r\n                # plt.title(\"acq\")\r\n                # plt.scatter(initial_design[:, 0], initial_design[:, 1], c=acq_vals.reshape(-1))\r\n                # plt.show()\r\n\r\n\r\n                # raise\r\n            print(\"self.suggested_sample\",self.suggested_sample)\r\n            print(\"time optimisation point X\", finish - start)\r\n\r\n            self.X = np.vstack((self.X,self.suggested_sample))\r\n            # --- Evaluate *f* in X, augment Y and update cost function (if needed)\r\n            self.evaluate_objective()\r\n\r\n            # --- Update current evaluation time and function evaluations\r\n            self.cum_time = time.time() - self.time_zero\r\n            self.num_acquisitions += 1\r\n            print(\"optimize_final_evaluation\")\r\n\r\n            C_bool = np.product(np.concatenate(self.C , axis=1) < 0, axis=1)\r\n            data = {}\r\n\r\n            data[\"OC sampled\"] = np.concatenate((np.zeros(self.n_init), np.array(self.Opportunity_Cost_sampled).reshape(-1)))\r\n            data[\"OC GP mean\"] = np.concatenate((np.zeros(self.n_init), np.array(self.Opportunity_Cost_GP_mean).reshape(-1)))\r\n            data[\"Y\"] = np.array(self.Y).reshape(-1)\r\n            # data[\"C\"] = np.array(self.C).reshape(-1)\r\n            data[\"C_bool\"] = np.array(C_bool).reshape(-1)\r\n            data[\"recommended_val_sampled\"] = np.concatenate((np.zeros(self.n_init), np.array(self.recommended_value_sampled).reshape(-1)))\r\n            data[\"recommended_val_GP\"] = np.concatenate(\r\n                (np.zeros(self.n_init), np.array(self.recommended_value_GP_mean).reshape(-1)))\r\n            data[\"optimum\"] = np.concatenate((np.zeros(self.n_init), np.array(self.underlying_optimum).reshape(-1)))\r\n\r\n            print(\"1\", len(data[\"OC sampled\"]), \"2\", len(data[\"OC GP mean\"]) , \"3\", len(data[\"Y\"]), \"4\", len(data[\"C_bool\"]) , \"5\",len(data[\"recommended_val_sampled\"]),\r\n                  \"6\", len(data[\"recommended_val_GP\"]), \"7\", len(data[\"optimum\"] ))\r\n\r\n            print(data)\r\n            gen_file = pd.DataFrame.from_dict(data)\r\n            folder = \"RESULTS\"\r\n            subfolder = self.evaluations_file\r\n            cwd = os.getcwd()\r\n\r\n            path =self.path\r\n            if os.path.isdir(cwd + \"/\" + folder + \"/\" + subfolder) == False:\r\n                os.makedirs(cwd + \"/\" + folder + \"/\" + subfolder)\r\n            print(\"path\", path)\r\n            gen_file.to_csv(path_or_buf=path)\r\n\r\n            np.savetxt(cwd + \"/\" + folder + \"/\" + subfolder + \"/X_\" + str(rep) + \".csv\", self.X, delimiter=',')\r\n\r\n            print(\"self.X, self.Y, self.C , OC sampled, OC GP mean\",self.X, self.Y, self.C )\r\n\r\n            print(\"OC GP\", self.Opportunity_Cost_GP_mean)\r\n            print(\"OC sampled\", self.Opportunity_Cost_sampled)\r\n            overall_time_stop= time.time()\r\n\r\n        return self.X, self.Y, self.C , self.recommended_value_sampled, self.underlying_optimum, self.Opportunity_Cost_sampled\r\n        # --- Print the desired result in files\r\n        #if self.evaluations_file is not None:\r\n            #self.save_evaluations(self.evaluations_file)\r\n\r\n        #file = open('test_file.txt','w')\r\n        #np.savetxt('test_file.txt',value_so_far)\r\n\r\n    def verbosity_plot_1D(self):\r\n        ####plots\r\n        print(\"generating plots\")\r\n        design_plot = np.linspace(0,5,1000)[:,None]\r\n\r\n\r\n        bool_C_sampled = np.product(np.concatenate(self.C, axis=1) < 0, axis=1)\r\n\r\n        # precision = []\r\n        # for i in range(20):\r\n        #     kg_f = -self.acquisition._compute_acq(design_plot)\r\n        #     precision.append(np.array(kg_f).reshape(-1))\r\n\r\n        # print(\"mean precision\", np.mean(precision, axis=0), \"std precision\",  np.std(precision, axis=0), \"max precision\", np.max(precision, axis=0), \"min precision\",np.min(precision, axis=0))\r\n        ac_f = self.expected_improvement(design_plot)\r\n\r\n        Y, _ = self.objective.evaluate(design_plot, true_val=True)\r\n        C, _ = self.constraint.evaluate(design_plot)\r\n        pf = self.probability_feasibility_multi_gp(design_plot, self.model_c).reshape(-1, 1)\r\n        mu_f = self.model.predict(design_plot)[0]\r\n\r\n        bool_C = np.product(np.concatenate(C, axis=1) < 0, axis=1)\r\n        func_val = Y * bool_C.reshape(-1, 1)\r\n\r\n\r\n        self.acquisition.generate_random_vectors(optimize_discretization=True, optimize_random_Z=False,\r\n                                        fixed_discretisation=design_plot)\r\n\r\n        best_kg_val = self.acquisition._compute_acq(self.suggested_sample)\r\n\r\n        self.acquisition.generate_random_vectors(optimize_discretization=False, optimize_random_Z=False,\r\n                                        fixed_discretisation=design_plot)\r\n\r\n        kg_f = self.acquisition._compute_acq(design_plot)\r\n        design_plot = design_plot.reshape(-1)\r\n\r\n        fig, axs = plt.subplots(2, 2)\r\n        axs[0, 0].set_title('True Function')\r\n        axs[0, 0].plot(design_plot, np.array(func_val).reshape(-1))\r\n        axs[0, 0].scatter(self.X, np.array(self.Y).reshape(-1)*bool_C_sampled , color=\"red\")\r\n        axs[0, 0].scatter(self.suggested_sample, np.array([0]), marker=\"x\", color=\"magenta\")\r\n        axs[0, 0].legend()\r\n\r\n        axs[1, 0].set_title(\"mu pf\")\r\n        axs[1, 0].plot(design_plot, np.array(mu_f).reshape(-1) * np.array(pf).reshape(-1))\r\n        axs[1, 0].legend()\r\n\r\n        axs[1, 1].set_title('approximation kg Function')\r\n        axs[1, 1].plot(design_plot, np.array(kg_f).reshape(-1))\r\n        axs[1, 1].scatter(self.suggested_sample, np.array(best_kg_val ).reshape(-1), marker=\"x\", color=\"magenta\")\r\n        axs[1, 1].legend()\r\n\r\n        axs[0, 1].set_title('Opportunity Cost')\r\n        axs[0, 1].plot(range(len(self.Opportunity_Cost_sampled)), self.Opportunity_Cost_sampled)\r\n        axs[0, 1].set_yscale(\"log\")\r\n        plt.show()\r\n\r\n    def verbosity_plot_2D(self):\r\n        ####plots\r\n        print(\"generating plots\")\r\n        design_plot = initial_design('random', self.space, 400)\r\n\r\n        # precision = []\r\n        # for i in range(20):\r\n        # self.acquisition.generate_random_vectors(optimize_discretization=False, optimize_random_Z=False, fixed_discretisation=design_plot)\r\n        # kg_f = self.acquisition._compute_acq(design_plot)\r\n        # print(\"np.min\", np.min(kg_f), \"max\", np.max(kg_f))\r\n\r\n        #     precision.append(np.array(kg_f).reshape(-1))\r\n\r\n        # print(\"mean precision\", np.mean(precision, axis=0), \"std precision\",  np.std(precision, axis=0), \"max precision\", np.max(precision, axis=0), \"min precision\",np.min(precision, axis=0))\r\n        # ac_f = self.expected_improvement(design_plot)\r\n\r\n        Y, _ = self.objective.evaluate(design_plot)\r\n        C, _ = self.constraint.evaluate(design_plot)\r\n        pf = self.probability_feasibility_multi_gp(design_plot, self.model_c).reshape(-1, 1)\r\n        mu_f = self.model.predict(design_plot)[0]\r\n\r\n        bool_C = np.product(np.concatenate(C, axis=1) < 0, axis=1)\r\n        func_val = Y * bool_C.reshape(-1, 1)\r\n\r\n        # kg_f = -self.acquisition._compute_acq(design_plot)\r\n        fig, axs = plt.subplots(1, 2)\r\n        axs[0].set_title('True Function')\r\n        axs[0].scatter(design_plot[:, 0], design_plot[:, 1], c=np.array(func_val).reshape(-1))\r\n        axs[ 0].scatter(self.X[:, 0], self.X[:, 1], color=\"red\", label=\"sampled\")\r\n        #suggested_sample_value = self.objective.evaluate(self.suggested_sample)\r\n        axs[ 0].scatter(self.suggested_sample[:,0], self.suggested_sample[:,1], marker=\"x\", color=\"red\",\r\n                          label=\"suggested\")\r\n        axs[ 0].legend()\r\n\r\n        # axs[0, 1].set_title('approximation Acqu Function')\r\n        # axs[0, 1].scatter(design_plot[:,0],design_plot[:,1], c=np.array(ac_f).reshape(-1))\r\n        # axs[0, 1].legend()\r\n        print(\"self.suggested_sample\",self.suggested_sample)\r\n        # import matplotlib\r\n        # axs[1, 0].set_title(\"KG\")\r\n        # axs[1, 0].scatter(design_plot[:,0],design_plot[:,1],norm=matplotlib.colors.LogNorm(), c= np.array(kg_f).reshape(-1))\r\n        # axs[1, 1].scatter(self.suggested_sample[:, 0], self.suggested_sample[:, 1], color=\"red\", label=\"KG suggested\")\r\n        # axs[1, 0].legend()\r\n\r\n        axs[1].set_title(\"mu pf\")\r\n        axs[ 1].scatter(design_plot[:,0],design_plot[:,1],c= np.array(mu_f).reshape(-1) * np.array(pf).reshape(-1))\r\n        axs[1].scatter(self.suggested_sample[:,0], self.suggested_sample[:,1], color=\"red\", label=\"KG suggested\")\r\n        # axs[1,1].scatter(self.final_suggested_sample[:,0], self.final_suggested_sample[:,1], color=\"magenta\", label=\"Final suggested\")\r\n        axs[ 1].legend()\r\n\r\n        plt.show()\r\n\r\n        print(\"self.Opportunity_Cost plot\", self.Opportunity_Cost)\r\n        plt.title('Opportunity Cost')\r\n        plt.plot(range(len(self.Opportunity_Cost)), self.Opportunity_Cost)\r\n        plt.yscale(\"log\")\r\n        plt.show()\r\n\r\n    def optimize_final_evaluation(self, KG_dynamic_optimisation):\r\n\r\n        if KG_dynamic_optimisation:\r\n            # Saving original variables\r\n            self.original_X = self.X.copy()\r\n            self.original_Y = self.Y.copy()\r\n            self.original_C = self.C.copy()\r\n\r\n            if self.ls_evaluator is not None:\r\n                out = self.ls_evaluator.compute_batch(duplicate_manager=None, re_use=False, dynamic_optimisation=False)\r\n                self.suggested_sample = self.space.zip_inputs(out[0])\r\n                self.X = np.vstack((self.X, self.suggested_sample))\r\n\r\n                self.evaluate_objective()\r\n                self._update_model()\r\n            #\r\n            self.acquisition.optimizer.context_manager = ContextManager(self.space, self.context)\r\n            out = self.acquisition.optimizer.optimize(f=self.aggregated_posterior, duplicate_manager=None,\r\n                                                      additional_anchor_points=self.X[7:, :], num_samples=1000)\r\n\r\n            suggested_final_sample_GP_recommended = self.space.zip_inputs(out[0])\r\n            suggested_final_mean_GP_recommended = -out[1]\r\n\r\n            Y = self.model.posterior_mean(self.X)\r\n            pf = self.probability_feasibility_multi_gp(self.X, model=self.model_c)\r\n            func_val = np.array(Y).reshape(-1) * np.array(pf).reshape(-1)\r\n\r\n            print(\"np.array(Y).reshape(-1)\", np.array(Y).reshape(-1))\r\n            print(\" np.array(pf).reshape(-1)\", np.array(pf).reshape(-1))\r\n            print(\"func_val\", func_val)\r\n\r\n            suggested_final_historical_sample = self.X[np.argmax(func_val)]\r\n            suggested_final_historical_sample = np.array(suggested_final_historical_sample).reshape(1, -1)\r\n            suggested_final_mean_historical_sample = np.array(np.max(func_val)).reshape(-1)\r\n\r\n            if suggested_final_mean_GP_recommended.reshape(-1) < np.array(\r\n                    suggested_final_mean_historical_sample).reshape(-1):\r\n\r\n                Y_true, _ = self.objective.evaluate(suggested_final_historical_sample, true_val=True)\r\n                C_true, _ = self.constraint.evaluate(suggested_final_historical_sample, true_val=True)\r\n\r\n            else:\r\n                Y_true, _ = self.objective.evaluate(suggested_final_sample_GP_recommended, true_val=True)\r\n                C_true, _ = self.constraint.evaluate(suggested_final_sample_GP_recommended, true_val=True)\r\n\r\n            bool_C_true = np.product(np.concatenate(C_true, axis=1) < 0, axis=1)\r\n            func_val_true_GP_recommended = Y_true * bool_C_true.reshape(-1, 1)\r\n            func_val_true_GP_mean = func_val_true_GP_recommended\r\n\r\n            if self.compute_OC:\r\n                self.true_best_value()\r\n                optimum = np.max(self.true_best_stats[\"true_best\"])\r\n            else:\r\n\r\n                optimum = np.array([0]).reshape(-1)\r\n            self.recommended_value_GP_mean.append(np.max(func_val_true_GP_mean).reshape(-1))\r\n            print(\"best posterior mean\")\r\n            print(\"best sample found from Posterior GP sample\", out[0], \"best sample historical sample\",\r\n                  suggested_final_historical_sample)\r\n            print(\"best sample found from Posterior GP val\", -out[1], \"best sample historical val\",\r\n                  suggested_final_mean_historical_sample)\r\n\r\n            print(\"OC\",  np.max(func_val_true_GP_mean), \"optimum\", optimum, \"func_val recommended\",\r\n                  np.max(func_val_true_GP_mean))\r\n\r\n            self.Opportunity_Cost_GP_mean.append(np.max(func_val_true_GP_mean))\r\n\r\n\r\n            Y = self.model.posterior_mean(self.X)\r\n            pf = self.probability_feasibility_multi_gp(self.X, model=self.model_c)\r\n            func_val = np.array(Y).reshape(-1) * np.array(pf).reshape(-1)\r\n            suggested_final_historical_sample = self.X[np.argmax(func_val)]\r\n            suggested_final_historical_sample = np.array(suggested_final_historical_sample).reshape(1, -1)\r\n            #\r\n            Y_true, _ = self.objective.evaluate(suggested_final_historical_sample, true_val=True)\r\n            C_true, _ = self.constraint.evaluate(suggested_final_historical_sample, true_val=True)\r\n            #\r\n            bool_C_true = np.product(np.concatenate(C_true, axis=1) < 0, axis=1)\r\n            func_val_true_GP_recommended = Y_true * bool_C_true.reshape(-1, 1)\r\n            func_val_true_sampled = func_val_true_GP_recommended\r\n            #\r\n            if self.compute_OC:\r\n                self.true_best_value()\r\n                optimum = np.max(self.true_best_stats[\"true_best\"])\r\n            else:\r\n                optimum = np.array([0]).reshape(-1)\r\n            self.recommended_value_sampled.append([0])\r\n            self.underlying_optimum.append([optimum])\r\n            self.Opportunity_Cost_sampled.append(np.max(func_val_true_sampled))\r\n\r\n            print(\"sampled OC\")\r\n            print(\"best sample found from Posterior GP sample\",  out[0], \"best sample historical sample\",np.max(func_val_true_sampled).reshape(-1))\r\n            print(\"OC\", np.max(func_val_true_sampled), \"optimum\", optimum, \"func_val recommended\",\r\n                  np.max(func_val_true_sampled))\r\n\r\n            # raise\r\n            self.X = self.original_X.copy()\r\n            self.Y = self.original_Y.copy()\r\n            self.C = self.original_C.copy()\r\n            self._update_model()\r\n\r\n            return 0\r\n        else:\r\n            if self.deterministic:\r\n                Y = self.model.posterior_mean(self.X)\r\n                pf = self.probability_feasibility_multi_gp(self.X, model=self.model_c)\r\n                func_val = np.array(Y).reshape(-1) * np.array(pf).reshape(-1)\r\n                suggested_final_historical_sample = self.X[np.argmax(func_val)]\r\n                suggested_final_historical_sample = np.array(suggested_final_historical_sample).reshape(1, -1)\r\n\r\n                Y_true, _ = self.objective.evaluate(suggested_final_historical_sample, true_val=True)\r\n                C_true, _ = self.constraint.evaluate(suggested_final_historical_sample, true_val=True)\r\n\r\n                bool_C_true = np.product(np.concatenate(C_true, axis=1) < 0, axis=1)\r\n                func_val_true_GP_recommended = Y_true * bool_C_true.reshape(-1, 1)\r\n\r\n                func_val_true = func_val_true_GP_recommended\r\n\r\n                if self.compute_OC:\r\n                    self.true_best_value()\r\n                    optimum = np.max(self.true_best_stats[\"true_best\"])\r\n                else:\r\n                    optimum = np.array([0]).reshape(-1)\r\n                self.recommended_value_sampled.append(np.max(func_val_true).reshape(-1))\r\n                self.underlying_optimum.append(optimum.reshape(-1))\r\n                self.Opportunity_Cost_sampled.append( np.max(func_val_true))\r\n\r\n                self.recommended_value_GP_mean.append(np.max(func_val_true).reshape(-1))\r\n                self.Opportunity_Cost_GP_mean.append( np.max(func_val_true))\r\n                return 0\r\n\r\n            else: #KG_dynamic_optimisation:\r\n\r\n                self.acquisition.optimizer.context_manager = ContextManager(self.space, self.context)\r\n                out = self.acquisition.optimizer.optimize(f=self.aggregated_posterior, duplicate_manager=None,\r\n                                                          additional_anchor_points = self.X[7:, :] ,num_samples=1000)\r\n\r\n                suggested_final_sample_GP_recommended = self.space.zip_inputs(out[0])\r\n                suggested_final_mean_GP_recommended = -out[1]\r\n\r\n                Y = self.model.posterior_mean(self.X)\r\n                pf = self.probability_feasibility_multi_gp(self.X, model=self.model_c)\r\n                func_val = np.array(Y).reshape(-1) * np.array(pf).reshape(-1)\r\n\r\n                print(\"np.array(Y).reshape(-1)\",np.array(Y).reshape(-1))\r\n                print(\" np.array(pf).reshape(-1)\", np.array(pf).reshape(-1))\r\n                print(\"func_val\",func_val)\r\n\r\n                suggested_final_historical_sample = self.X[np.argmax(func_val)]\r\n                suggested_final_historical_sample = np.array(suggested_final_historical_sample).reshape(1, -1)\r\n                suggested_final_mean_historical_sample = np.array(np.max(func_val)).reshape(-1)\r\n\r\n                if suggested_final_mean_GP_recommended.reshape(-1) < np.array(\r\n                        suggested_final_mean_historical_sample).reshape(-1):\r\n\r\n                    Y_true, _ = self.objective.evaluate(suggested_final_historical_sample, true_val=True)\r\n                    C_true, _ = self.constraint.evaluate(suggested_final_historical_sample, true_val=True)\r\n\r\n                else:\r\n                    Y_true, _ = self.objective.evaluate(suggested_final_sample_GP_recommended, true_val=True)\r\n                    C_true, _ = self.constraint.evaluate(suggested_final_sample_GP_recommended, true_val=True)\r\n\r\n                bool_C_true = np.product(np.concatenate(C_true, axis=1) < 0, axis=1)\r\n                func_val_true_GP_recommended = Y_true * bool_C_true.reshape(-1, 1)\r\n                func_val_true_GP_mean = func_val_true_GP_recommended\r\n\r\n                if self.compute_OC:\r\n                    self.true_best_value()\r\n                    optimum = np.max(self.true_best_stats[\"true_best\"])\r\n                else:\r\n                    optimum = np.array([0]).reshape(-1)\r\n                self.recommended_value_GP_mean.append(np.max(func_val_true_GP_mean).reshape(-1))\r\n                print(\"best posterior mean\")\r\n                print(\"best sample found from Posterior GP sample\",  out[0], \"best sample historical sample\",suggested_final_historical_sample)\r\n                print(\"best sample found from Posterior GP val\",  -out[1], \"best sample historical val\",suggested_final_mean_historical_sample)\r\n\r\n                print(\"OC\", np.max(func_val_true_GP_mean), \"optimum\", optimum, \"func_val recommended\",\r\n                      np.max(func_val_true_GP_mean))\r\n\r\n                self.Opportunity_Cost_GP_mean.append(np.max(func_val_true_GP_mean))\r\n\r\n                #Saving original variables\r\n                # self.original_X = self.X.copy()\r\n                # self.original_Y = self.Y.copy()\r\n                # self.original_C = self.C.copy()\r\n                #\r\n                # out = self.ls_evaluator.compute_batch(duplicate_manager=None, re_use=False, dynamic_optimisation=False)\r\n                # self.suggested_sample = self.space.zip_inputs(out[0])\r\n                # self.X = np.vstack((self.X, self.suggested_sample))\r\n                #\r\n                # self.evaluate_objective()\r\n                # self._update_model()\r\n                #\r\n                Y = self.model.posterior_mean(self.X)\r\n                pf = self.probability_feasibility_multi_gp(self.X, model=self.model_c)\r\n                func_val = np.array(Y).reshape(-1) * np.array(pf).reshape(-1)\r\n                suggested_final_historical_sample = self.X[np.argmax(func_val)]\r\n                suggested_final_historical_sample = np.array(suggested_final_historical_sample).reshape(1, -1)\r\n                #\r\n                Y_true, _ = self.objective.evaluate(suggested_final_historical_sample, true_val=True)\r\n                C_true, _ = self.constraint.evaluate(suggested_final_historical_sample, true_val=True)\r\n                #\r\n                bool_C_true = np.product(np.concatenate(C_true, axis=1) < 0, axis=1)\r\n                func_val_true_GP_recommended = Y_true * bool_C_true.reshape(-1, 1)\r\n                func_val_true_sampled = func_val_true_GP_recommended\r\n                #\r\n                if self.compute_OC:\r\n                    self.true_best_value()\r\n                    print(self.true_best_stats[\"true_best\"])\r\n                    optimum = np.max(self.true_best_stats[\"true_best\"])\r\n                else:\r\n                    optimum = np.array([0]).reshape(-1)\r\n                self.recommended_value_sampled.append([0])\r\n                self.underlying_optimum.append([0])\r\n                self.Opportunity_Cost_sampled.append( np.max(func_val_true_sampled))\r\n\r\n            #     print(\"sampled OC\")\r\n            #     print(\"best sample found from Posterior GP sample\",  out[0], \"best sample historical sample\",np.max(func_val_true_sampled).reshape(-1))\r\n            #     print(\"OC\", optimum - np.max(func_val_true_sampled), \"optimum\", optimum, \"func_val recommended\",\r\n            #           np.max(func_val_true_sampled))\r\n            #\r\n            #  # Y_true * bool_C_true.reshape(-1, 1)\r\n            #\r\n            # # print(\"func_val_true\",func_val_true)\r\n            # self.X = self.original_X.copy()\r\n            # self.Y = self.original_Y.copy()\r\n            # self.C = self.original_C.copy()\r\n            # self._update_model()\r\n\r\n            return 0\r\n\r\n    def aggregated_posterior(self, X):\r\n        mu = self.model.posterior_mean(X)\r\n        pf = self.probability_feasibility_multi_gp(X, self.model_c)\r\n        pf = np.array(pf).reshape(-1)\r\n        mu = np.array(mu).reshape(-1)\r\n        return -(mu * pf).reshape(-1)\r\n\r\n    def agreagated_penalised_posterior(self, X, penalisation):\r\n        mu = self.model.posterior_mean(X)\r\n        pf = self.probability_feasibility_multi_gp(X, self.model_c)\r\n        pf = np.array(pf).reshape(-1)\r\n        mu = np.array(mu).reshape(-1)\r\n        feasable_term = (mu * pf).reshape(-1)\r\n        infeasible_term  = penalisation.squeeze() * (1 - pf.reshape(-1))\r\n        overall_term = feasable_term + infeasible_term\r\n        return -(overall_term).reshape(-1)\r\n\r\n    def expected_improvement(self, X):\r\n        '''\r\n        Computes the EI at points X based on existing samples X_sample\r\n        and Y_sample using a Gaussian process surrogate model.\r\n\r\n        Args:\r\n            X: Points at which EI shall be computed (m x d).\r\n            X_sample: Sample locations (n x d).\r\n            Y_sample: Sample values (n x 1).\r\n            gpr: A GaussianProcessRegressor fitted to samples.\r\n            xi: Exploitation-exploration trade-off parameter.\r\n\r\n        Returns:\r\n            Expected improvements at points X.\r\n        '''\r\n\r\n        mu = self.model.posterior_mean(X)\r\n        sigma = self.model.posterior_variance(X, noise=False)\r\n\r\n        sigma = np.sqrt(sigma).reshape(-1, 1)\r\n        mu = mu.reshape(-1,1)\r\n\r\n        bool_C = np.product(np.concatenate(self.C, axis=1) < 0, axis=1)\r\n        func_val = self.model.posterior_mean(self.model.get_X_values()).reshape(-1)* bool_C.reshape(-1)\r\n        mu_sample_opt = np.max(func_val)\r\n\r\n        with np.errstate(divide='warn'):\r\n            imp = mu - mu_sample_opt\r\n            Z = imp / sigma\r\n            ei = imp * norm.cdf(Z) + sigma * norm.pdf(Z)\r\n            ei[sigma == 0.0] = 0.0\r\n        pf = self.probability_feasibility_multi_gp(X,self.model_c).reshape(-1,1)\r\n        pf = np.array(pf).reshape(-1)\r\n        ei = np.array(ei).reshape(-1)\r\n        return -(ei *pf ).reshape(-1)\r\n\r\n    def probability_feasibility_multi_gp(self, x, model, mean=None, cov=None, l=0):\r\n        # print(\"model\",model.output)\r\n        x = np.atleast_2d(x)\r\n\r\n        Fz = []\r\n        for m in range(model.output_dim):\r\n            Fz.append(self.probability_feasibility( x, model.output[m], l))\r\n        Fz = np.product(Fz,axis=0)\r\n        return Fz\r\n\r\n    def probability_feasibility(self, x, model, l=0):\r\n\r\n        model = model.model\r\n        # kern = model.kern\r\n        # X = model.X\r\n        mean = model.posterior_mean(x)\r\n        var = model.posterior_variance(x, noise=False)\r\n        # print(\"mean\",mean,\"var\",var)\r\n        std = np.sqrt(var).reshape(-1, 1)\r\n\r\n        mean = mean.reshape(-1, 1)\r\n\r\n        norm_dist = norm(mean, std)\r\n\r\n\r\n        Fz = norm_dist.cdf(l)\r\n\r\n        return Fz.reshape(-1, 1)\r\n\r\n\r\n    def evaluate_objective(self):\r\n        \"\"\"\r\n        Evaluates the objective\r\n        \"\"\"\r\n        print(1)\r\n            # print(self.suggested_sample)\r\n        self.Y_new, cost_new = self.objective.evaluate(self.suggested_sample)\r\n        self.C_new, C_cost_new = self.constraint.evaluate(self.suggested_sample)\r\n        self.cost.update_cost_model(self.suggested_sample, cost_new)   \r\n        for j in range(self.objective.output_dim):\r\n            print(self.Y_new[j])\r\n            self.Y[j] = np.vstack((self.Y[j],self.Y_new[j]))\r\n\r\n        for k in range(self.constraint.output_dim):\r\n            print(self.C_new[k])\r\n            self.C[k] = np.vstack((self.C[k],self.C_new[k]))\r\n\r\n    def compute_current_best(self):\r\n        current_acqX = self.acquisition.current_compute_acq()\r\n        return current_acqX\r\n\r\n    def _distance_last_evaluations(self):\r\n        \"\"\"\r\n        Computes the distance between the last two evaluations.\r\n        \"\"\"\r\n        return np.sqrt(sum((self.X[self.X.shape[0]-1,:]-self.X[self.X.shape[0]-2,:])**2))\r\n\r\n\r\n    def _compute_next_evaluations(self, pending_zipped_X=None, ignored_zipped_X=None, re_use=False):\r\n\r\n        \"\"\"\r\n        Computes the location of the new evaluation (optimizes the acquisition in the standard case).\r\n        :param pending_zipped_X: matrix of input configurations that are in a pending state (i.e., do not have an evaluation yet).\r\n        :param ignored_zipped_X: matrix of input configurations that the user black-lists, i.e., those configurations will not be suggested again.\r\n        :return:\r\n        \"\"\"\r\n        ## --- Update the context if any\r\n\r\n        self.acquisition.optimizer.context_manager = ContextManager(self.space, self.context)\r\n\r\n        if self.sample_from_acq:\r\n            print(\"suggest next location given THOMPSON SAMPLING\")\r\n            candidate_points= initial_design('latin', self.space, 2000)\r\n            aux_var = self.acquisition._compute_acq(candidate_points)\r\n        else:\r\n            # try:\r\n                # self.acquisition.generate_random_vectors(optimize_discretization=True, optimize_random_Z=True)\r\n            aux_var = self.evaluator.compute_batch(duplicate_manager=None, re_use=re_use, dynamic_optimisation=self.KG_dynamic_optimisation)\r\n            # except:\r\n            #     aux_var = self.evaluator.compute_batch(duplicate_manager=None, re_use=re_use)\r\n\r\n        return self.space.zip_inputs(aux_var[0])\r\n        #return initial_design('random', self.space, 1)\r\n\r\n\r\n    def _update_fantasised_model(self, X, Y, C):\r\n\r\n        if (self.num_acquisitions % self.model_update_interval) == 0:\r\n            ### --- input that goes into the model (is unziped in case there are categorical variables)\r\n            X_inmodel = self.space.unzip_inputs(X)\r\n            Y_inmodel = list(Y)\r\n            C_inmodel = list(C)\r\n\r\n            self.model.updateModel(X_inmodel, Y_inmodel)\r\n            self.model_c.updateModel(X_inmodel, C_inmodel)\r\n\r\n    def _update_model(self):\r\n        \"\"\"\r\n        Updates the model (when more than one observation is available) and saves the parameters (if available).\r\n        \"\"\"\r\n        if (self.num_acquisitions%self.model_update_interval)==0:\r\n\r\n            ### --- input that goes into the model (is unziped in case there are categorical variables)\r\n            X_inmodel = self.space.unzip_inputs(self.X)\r\n            Y_inmodel = list(self.Y)\r\n            C_inmodel = list(self.C)\r\n            \r\n            self.model.updateModel(X_inmodel, Y_inmodel)\r\n            self.model_c.updateModel(X_inmodel, C_inmodel)\r\n        ### --- Save parameters of the model\r\n        #self._save_model_parameter_values()\r\n\r\n\r\n    def get_evaluations(self):\r\n        return self.X.copy(), self.Y.copy()\r\n\r\n    def true_best_value(self):\r\n        from scipy.optimize import minimize\r\n\r\n        X = initial_design('random', self.space, 10000)\r\n\r\n        fval = self.func_val(X)\r\n\r\n        anchor_point = np.array(X[np.argmin(fval)]).reshape(-1)\r\n        anchor_point = anchor_point.reshape(1, -1)\r\n\r\n        if self.compute_OC:\r\n            best_design = minimize(self.func_val, anchor_point, method='nelder-mead', tol=1e-8).x\r\n            value_best_design = -self.func_val(best_design)\r\n            print(\"best design\", best_design, \"value_best_design\", value_best_design)\r\n            self.true_best_stats[\"true_best\"].append(value_best_design)\r\n        else:\r\n            self.true_best_stats[\"true_best\"].append(0)\r\n\r\n        self.true_best_stats[\"mean_gp\"].append(self.model.posterior_mean(best_design))\r\n        self.true_best_stats[\"std gp\"].append(self.model.posterior_variance(best_design, noise=False))\r\n        self.true_best_stats[\"pf\"].append(self.probability_feasibility_multi_gp(best_design,self.model_c).reshape(-1,1))\r\n        mean = self.model_c.posterior_mean(best_design)\r\n        var = self.model_c.posterior_variance(best_design, noise=False)\r\n        residual_noise = self.model_c.posterior_variance(self.X[1], noise=False)\r\n        self.true_best_stats[\"mu_pf\"].append(mean)\r\n        self.true_best_stats[\"var_pf\"].append(var)\r\n        self.true_best_stats[\"residual_noise\"].append(residual_noise)\r\n\r\n        if False:\r\n            fig, axs = plt.subplots(3, 2)\r\n            N = len(np.array(self.true_best_stats[\"std gp\"]).reshape(-1))\r\n            GAP = np.array(np.abs(np.abs(self.true_best_stats[\"true_best\"]).reshape(-1) - np.abs(self.true_best_stats[\"mean_gp\"]).reshape(-1))).reshape(-1)\r\n            print(\"GAP len\", len(GAP))\r\n            print(\"N\",N)\r\n            axs[0, 0].set_title('GAP')\r\n            axs[0, 0].plot(range(N),GAP)\r\n            axs[0, 0].set_yscale(\"log\")\r\n\r\n            axs[0, 1].set_title('VAR')\r\n            axs[0, 1].plot(range(N),np.array(self.true_best_stats[\"std gp\"]).reshape(-1))\r\n            axs[0, 1].set_yscale(\"log\")\r\n\r\n            axs[1, 0].set_title(\"PF\")\r\n            axs[1, 0].plot(range(N),np.array(self.true_best_stats[\"pf\"]).reshape(-1))\r\n\r\n            axs[1, 1].set_title(\"mu_PF\")\r\n            axs[1, 1].plot(range(N),np.abs(np.array(self.true_best_stats[\"mu_pf\"]).reshape(-1)))\r\n            axs[1, 1].set_yscale(\"log\")\r\n\r\n            axs[2, 1].set_title(\"std_PF\")\r\n            axs[2, 1].plot(range(N),np.sqrt(np.array(self.true_best_stats[\"var_pf\"]).reshape(-1)))\r\n            axs[2, 1].set_yscale(\"log\")\r\n\r\n            axs[2, 0].set_title(\"Irreducible noise\")\r\n            axs[2, 0].plot(range(N), np.sqrt(np.array(self.true_best_stats[\"residual_noise\"]).reshape(-1)))\r\n            axs[2, 0].set_yscale(\"log\")\r\n\r\n            plt.show()\r\n\r\n    def func_val(self, x):\r\n        if len(x.shape) == 1:\r\n            x = x.reshape(1, -1)\r\n        Y,_ = self.objective.evaluate(x, true_val=True)\r\n        C,_ = self.constraint.evaluate(x, true_val=True)\r\n        Y = np.array(Y).reshape(-1)\r\n        out = Y.reshape(-1)* np.product(np.concatenate(C, axis=1) < 0, axis=1).reshape(-1)\r\n        out = np.array(out).reshape(-1)\r\n        return -out\r\n\r\n    def current_func_no_constraint(self,X_inner):\r\n        X_inner = np.atleast_2d(X_inner)\r\n        mu = self.model.posterior_mean(X_inner)[0]\r\n        mu = np.array(mu).reshape(-1)\r\n        return mu\r\n\r\n    def update_penalty(self):\r\n        inner_opt_x, inner_opt_val = self.acquisition.optimizer.optimize_inner_func(f=self.current_func_no_constraint,\r\n                                                                        f_df=None,\r\n                                                                        num_samples=500)\r\n        inner_opt_x = np.array(inner_opt_x).reshape(-1)\r\n        inner_opt_x = np.atleast_2d(inner_opt_x)\r\n\r\n        return inner_opt_x, inner_opt_val
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/bayesian_optimisation.py b/core/acquisition/bayesian_optimisation.py
--- a/core/acquisition/bayesian_optimisation.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/bayesian_optimisation.py	(date 1684581393048)
@@ -172,6 +172,7 @@
         self.underlying_optimum = []
         value_so_far = []
 
+        # np.savetxt(fname=path, X = np.array(self.Y).reshape(-1) * np.array(np.array(self.C ).reshape(-1)<0))
         # --- Initialize time cost of the evaluations
         print("MAIN LOOP STARTS")
         Opportunity_Cost = []
@@ -181,6 +182,7 @@
 
         self.stop_date = stop_date #datetime(2021, 5, 8, 6)
         today = datetime.now()
+
         while (self.max_iter > self.num_acquisitions ) and (self.stop_date > today):
             today = datetime.now()
 
@@ -198,7 +200,7 @@
 
             finish = time.time()
 
-            if verbosity:
+            if False:#verbosity:
                 print("self.suggested_sample", self.suggested_sample)
                 initial_design = GPyOpt.experiment_design.initial_design('latin', self.space, 10000)
                 fvals, _ =self.objective.evaluate(initial_design)
@@ -215,7 +217,7 @@
                 fvals = np.array(fvals).reshape(-1)
 
                 plt.title("real surface")
-                plt.scatter(initial_design[:,0][cvalsbool], initial_design[:,1][cvalsbool], c=fvals[cvalsbool])
+                plt.scatter(initial_design[:,0].reshape(-1)[cvalsbool.reshape(-1)], initial_design[:,1].reshape(-1)[cvalsbool.reshape(-1)], c=fvals.reshape(-1)[cvalsbool.reshape(-1)])
                 plt.scatter(self.X[:,0], self.X[:,1], color="magenta")
                 plt.scatter(self.suggested_sample[:,0], self.suggested_sample[:,1], color="red", s=30)
                 plt.show()
@@ -756,7 +758,7 @@
         return np.sqrt(sum((self.X[self.X.shape[0]-1,:]-self.X[self.X.shape[0]-2,:])**2))
 
 
-    def _compute_next_evaluations(self, pending_zipped_X=None, ignored_zipped_X=None, re_use=False):
+    def _compute_next_evaluations(self, pending_zipped_X=None, ignored_zipped_X=None, re_use=False, record_time=True):
 
         """
         Computes the location of the new evaluation (optimizes the acquisition in the standard case).
@@ -770,12 +772,24 @@
 
         if self.sample_from_acq:
             print("suggest next location given THOMPSON SAMPLING")
+            import time
+            ts = time.time()
             candidate_points= initial_design('latin', self.space, 2000)
             aux_var = self.acquisition._compute_acq(candidate_points)
+            te = time.time()
+            tdiff = te - ts
+            print("Opt time", tdiff)
+            raise
         else:
             # try:
                 # self.acquisition.generate_random_vectors(optimize_discretization=True, optimize_random_Z=True)
+            import time
+            ts = time.time()
             aux_var = self.evaluator.compute_batch(duplicate_manager=None, re_use=re_use, dynamic_optimisation=self.KG_dynamic_optimisation)
+            te = time.time()
+            tdiff = te - ts
+            print("Opt time", tdiff)
+            # raise
             # except:
             #     aux_var = self.evaluator.compute_batch(duplicate_manager=None, re_use=re_use)
 
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"VcsDirectoryMappings\">\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n    <mapping directory=\"$PROJECT_DIR$/mujoco-py\" vcs=\"Git\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/.idea/vcs.xml	(date 1684578009794)
@@ -2,6 +2,5 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/mujoco-py" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: core/acquisition/mistery_nEI.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nfrom GPyOpt.objective_examples.experiments2d import mistery_torch,  test_function_2, new_brannin\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport os\nfrom time import time as time\nfrom gpytorch.kernels import RBFKernel, ScaleKernel\nfrom gpytorch.priors.torch_priors import GammaPrior\n#ALWAYS check cost in\n# --- Function to optimize\nfrom botorch.test_functions import Hartmann\nimport torch\nfrom botorch.models import FixedNoiseGP, ModelListGP, SingleTaskGP\nfrom gpytorch.mlls.sum_marginal_log_likelihood import SumMarginalLogLikelihood\nfrom botorch.acquisition.objective import ConstrainedMCObjective\nfrom botorch import fit_gpytorch_model\nfrom botorch.acquisition.monte_carlo import qExpectedImprovement, qNoisyExpectedImprovement\nfrom botorch.acquisition.analytic import ConstrainedExpectedImprovement\nfrom botorch.sampling.samplers import SobolQMCNormalSampler\nfrom botorch.exceptions import BadInitialCandidatesWarning\nimport time\nfrom botorch.optim import optimize_acqf\nfrom Transformation_Translation import Translate\nfrom Last_Step import Constrained_Mean_Response\nfrom botorch.utils.transforms import (\n    concatenate_pending_points,\n    match_batch_shape,\n    t_batch_mode_transform,\n)\nimport warnings\nfrom scipy.stats import norm\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nprint(\"device: \", device)\ndtype = torch.double\n\ndef function_caller_mistery_nEI(it):\n\n    repepetitions = [it, it + 20]\n    for rep in repepetitions:\n        np.random.seed(rep)\n        for noise in [ 1.0]:\n            torch.manual_seed(rep)\n            NOISE_SE = noise\n            NOISE_SE_constraint = np.sqrt(0.1)\n            N_BATCH = 100\n            initial_points = 10\n            MC_SAMPLES = 250\n\n\n            problem_class = mistery_torch()#Noise Included in the loop\n            bounds = torch.tensor([[0, 0], [5.0, 5.0] ], device=device, dtype=dtype)\n            input_dim = problem_class.input_dim\n\n            def objective_function(X):\n                return torch.tensor(problem_class.f(X), device=device, dtype=dtype)\n\n            def outcome_constraint(X):\n                return torch.tensor(problem_class.c(X), device=device, dtype=dtype)\n\n            def weighted_obj(X):\n                \"\"\"Feasibility weighted objective; zero if not feasible.\"\"\"\n                return objective_function(X) * (outcome_constraint(X) <= 0).type_as(X)\n\n            #train_yvar = torch.tensor(NOISE_SE ** 2, device=device, dtype=dtype)\n            train_cvar = torch.tensor(NOISE_SE_constraint**2, device=device, dtype=dtype)\n            train_yvar = torch.tensor(noise, device=device, dtype=dtype)\n\n            def obj_callable(Z):\n                return Z[..., 0]\n\n            def constraint_callable(Z):\n                return Z[..., 1]\n\n            # define a feasibility-weighted objective for optimization\n            constrained_obj = ConstrainedMCObjective(\n                objective=obj_callable,\n                constraints=[constraint_callable],\n            )\n\n            def generate_initial_data(n=10):\n                # generate training data\n                ub = bounds[1, :]\n                lb = bounds[0, :]\n                delta = ub - lb\n                train_x = torch.rand(n, input_dim, device=device, dtype=dtype) * delta + lb\n                exact_obj = objective_function(train_x).unsqueeze(-1)  # add output dimension\n                exact_con = outcome_constraint(train_x).unsqueeze(-1)  # add output dimension\n                train_obj = exact_obj + NOISE_SE * torch.randn_like(exact_obj)\n                train_con = exact_con + NOISE_SE_constraint * torch.randn_like(exact_con)\n                best_observed_value = weighted_obj(train_x).max().item()\n                return train_x, train_obj, train_con, best_observed_value\n\n            def recommended_value(X, model):\n                posterior_means  = model.posterior(X).mean\n                posterior_var = model.posterior(X).variance\n\n                posterior_means = posterior_means.detach().numpy()\n                posterior_var = posterior_var.detach().numpy()\n\n                pf = probability_feasibility_multi_gp(mu=posterior_means[:,1:], var=posterior_var[:,1:])\n\n                objective_mean = posterior_means[:,0]\n                predicted_fit = objective_mean.reshape(-1) * pf.reshape(-1)\n\n                return predicted_fit\n\n            def probability_feasibility_multi_gp(mu, var):\n                Fz = []\n                print(\"mu.shape[1]\", mu.shape[1])\n                for m in range(mu.shape[1]):\n                    Fz.append(probability_feasibility(mu[:,m], var[:,m]))\n                Fz = np.product(Fz, axis=0)\n                return Fz\n\n            def probability_feasibility(mean=None, var=None, l=0):\n\n                std = np.sqrt(var).reshape(-1, 1)\n                mean = mean.reshape(-1, 1)\n                norm_dist = norm(mean, std)\n                Fz = norm_dist.cdf(l)\n                return Fz\n\n\n\n            def initialize_model(train_x, train_obj, train_con, state_dict=None):\n                # define models for objective and constraint\n                covar_module = ScaleKernel(RBFKernel(\n                        ard_num_dims=train_x.shape[-1]\n                    ),)\n\n                #\n                model_obj = FixedNoiseGP(train_x, train_obj, train_yvar.expand_as(train_obj), covar_module=covar_module).to(train_x)  #SingleTaskGP(train_x, train_obj, outcome_transform=Translate_Object, covar_module=covar_module)##\n                model_con = FixedNoiseGP(train_x, train_con, train_cvar.expand_as(train_con)).to(train_x)\n                # combine into a multi-output GP model\n                model = ModelListGP(model_obj, model_con)\n                mll = SumMarginalLogLikelihood(model.likelihood, model)\n                # load state dict if it is passed\n                if state_dict is not None:\n                    model.load_state_dict(state_dict)\n                return mll, model\n\n            def optimize_acqf_and_get_observation(acq_func, check_acqu_val_sample=None, diagnostics = False):\n                \"\"\"Optimizes the acquisition function, and returns a new candidate and a noisy observation.\"\"\"\n                # optimize\n                BATCH_SIZE = 1\n\n                candidates, _ = optimize_acqf(\n                    acq_function=acq_func,\n                    bounds=bounds,\n                    q=BATCH_SIZE,\n                    num_restarts=10,\n                    raw_samples=512,  # used for intialization heuristic\n                    options={\"batch_limit\": 5, \"maxiter\": 200},\n                )\n\n                # observe new values\n                new_x = candidates.detach()\n                # if check_acqu_val_sample is None:\n                #     new_x = candidates.detach()\n                # else:\n                #     new_x = candidates.detach()\n                #     new_acq_func_val = acq_func.forward(new_x).unsqueeze(-1)\n                #     new_acq_func_val = new_acq_func_val.squeeze(-1).detach().numpy()\n                #     last_acq_func_val = acq_func.forward(check_acqu_val_sample).unsqueeze(-1)\n                #     last_acq_func_val = last_acq_func_val.squeeze(-1).detach().numpy()\n                #     if last_acq_func_val >= new_acq_func_val:\n                #         new_x = check_acqu_val_sample\n                #     else:\n                #         new_x = new_x\n\n                if diagnostics:\n\n                    ub = bounds[1, :]\n                    lb = bounds[0, :]\n                    delta = ub - lb\n                    rand_x = torch.rand(500, input_dim, device=device, dtype=dtype) * delta + lb#torch.rand(10000, 1, input_dim, device=device, dtype=dtype) * delta + lb\n                    print(\"rand_x \",rand_x .shape)\n                    #acq_func_val = weighted_obj(rand_x)\n                    # acq_func_val = acq_func.forward(rand_x).unsqueeze(-1)\n                    # acq_func_val = acq_func_val.squeeze(-1).detach().numpy()\n                    acq_func_val = acq_func.forward(new_x).unsqueeze(-1)\n                    acq_func_val = acq_func_val.squeeze(-1).detach().numpy()\n                    print(\"new_x\", new_x, \"acq_func_val\",acq_func_val)\n\n                    acq_func_val = acq_func.forward(check_acqu_val_sample).unsqueeze(-1)\n                    acq_func_val = acq_func_val.squeeze(-1).detach().numpy()\n                    print(\"last_x\", check_acqu_val_sample, \"last_acq_func_val\",acq_func_val)\n\n                    # print(\"max val\", torch.max(acq_func_val),\"min\", torch.min(acq_func_val))\n                    # plt.scatter(rand_x[:, :, 0].squeeze(-1), rand_x[:,:, 1].squeeze(-1), c = acq_func_val)\n                    # plt.scatter(rand_x[:, 0].squeeze(-1), rand_x[:, 1].squeeze(-1), c=acq_func_val)\n                    # plt.scatter(train_x_nei[:,0],train_x_nei[:,1], color=\"red\")\n                    # plt.scatter(new_x[:,0], new_x[:,1], color=\"magenta\", s=100)\n                    # plt.show()\n\n                    # plt.plot( best_observed_all_nei)\n                    # plt.show()\n\n                exact_obj = objective_function(new_x).unsqueeze(-1)  # add output dimension\n                exact_con = outcome_constraint(new_x).unsqueeze(-1)  # add output dimension\n                new_obj = exact_obj + NOISE_SE * torch.randn_like(exact_obj)\n                new_con = exact_con  + NOISE_SE_constraint * torch.randn_like(exact_con)\n                return new_x, new_obj, new_con\n\n\n\n            warnings.filterwarnings('ignore', category=BadInitialCandidatesWarning)\n            warnings.filterwarnings('ignore', category=RuntimeWarning)\n\n            verbose = True\n\n            best_observed_all_nei_GP, best_observed_all_ei= [], []\n            best_observed_all_nei_sampled, best_observed_all_ei_sampled = [], []\n            # average over multiple trials\n            best_observed_nei, best_observed_ei = [], []\n            # print(\"best value\")\n            # True_value = True_func_opt(model=weighted_obj,\n            #         best_f=0.0,  # dummy variable really, doesnt do anything since I only take max/min of posterior mean\n            #         objective=constrained_obj)\n            #\n            # optimize_acqf_and_get_observation(True_value, diagnostics=True)\n            # raise\n            # call helper functions to generate initial training data and initialize model\n            train_x_nei, train_obj_nei, train_con_nei, best_observed_value_nei = generate_initial_data(n=initial_points)\n            Translate_Object = Translate(m=1, Y=train_obj_nei)\n            #train_x_ei, train_obj_ei, train_con_ei, best_observed_value_ei =train_x_nei, train_obj_nei, train_con_nei, best_observed_value_nei\n            mll_nei, model_nei = initialize_model(train_x_nei, train_obj_nei, train_con_nei)\n            best_observed_nei.append(best_observed_value_nei)\n\n            # run N_BATCH rounds of BayesOpt after the initial random batch\n            Last_Step = Constrained_Mean_Response(\n                model=model_nei,\n                best_f=0.0,  # dummy variable really, doesnt do anything since I only take max/min of posterior mean\n                objective=constrained_obj\n            )\n\n            last_x_nei, last_obj_nei, last_con_nei = optimize_acqf_and_get_observation(Last_Step, diagnostics=False)\n\n            for iteration in range(1, N_BATCH + 1):\n                t0 = time.time()\n\n                # fit the models\n                fit_gpytorch_model(mll_nei)\n\n                # define the qEI and qNEI acquisition modules using a QMC sampler\n                qmc_sampler = SobolQMCNormalSampler(num_samples=MC_SAMPLES)\n\n                # qNEI_baseline_X = torch.cat([train_x_nei, match_batch_shape(last_x_nei, train_x_nei)], dim=-2)\n                qNEI = qNoisyExpectedImprovement(\n                    model=model_nei,\n                    X_baseline=train_x_nei,\n                    sampler=qmc_sampler,\n                    objective=constrained_obj,\n                )\n\n                # optimize and get new observation\n                new_x_nei, new_obj_nei, new_con_nei = optimize_acqf_and_get_observation(qNEI)\n\n\n                # if verbose:\n                #     ub = bounds[1, :]\n                #     lb = bounds[0, :]\n                #     delta = ub - lb\n                #     plot_data = torch.rand(1000, input_dim, device=device, dtype=dtype) * delta + lb\n                #     value_recommended_design_GP = weighted_obj(plot_data)\n                #\n                #     plt.scatter(np.array(plot_data[:,0]).reshape(-1),\n                #                 np.array(plot_data[:,1]).reshape(-1),\n                #                 c=np.array(value_recommended_design_GP).reshape(-1))\n                #     plt.scatter(train_x_nei[:,0],train_x_nei[:,1], color=\"black\" )\n                #     plt.scatter(new_x_nei[:,0], new_x_nei[:,1], color=\"magenta\")\n                #     plt.show()\n\n                # update training points\n                train_x_nei = torch.cat([train_x_nei, new_x_nei])\n                train_obj_nei = torch.cat([train_obj_nei, new_obj_nei])\n                train_con_nei = torch.cat([train_con_nei, new_con_nei])\n\n                # update progress\n                best_value_nei = weighted_obj(train_x_nei).max().item()\n                best_observed_nei.append(best_value_nei)\n\n                # reinitialize the models so they are ready for fitting on next iteration\n                # use the current state dict to speed up fitting\n\n                mll_nei, model_nei = initialize_model(\n                    train_x_nei,\n                    train_obj_nei,\n                    train_con_nei,\n                    model_nei.state_dict(),\n                )\n\n                Last_Step = Constrained_Mean_Response(\n                    model=model_nei,\n                    best_f=0.0, #dummy variable really, doesnt do anything since I only take max/min of posterior mean\n                    objective=constrained_obj\n                    )\n\n\n                last_x_nei, last_obj_nei, last_con_nei = optimize_acqf_and_get_observation(Last_Step, diagnostics = False)\n\n                # update progress\n                value_recommended_design_GP = weighted_obj(last_x_nei)\n                best_value_GP = np.array(value_recommended_design_GP).reshape(-1)\n\n                GP_vals_sampled = recommended_value(train_x_nei, model_nei)\n                value_recommended_design = weighted_obj(train_x_nei[np.argmax(GP_vals_sampled )])\n\n                best_value_sampled = np.array(value_recommended_design).reshape(-1)\n                t1 = time.time()\n\n                if verbose:\n                    print(\"best value\", best_value_GP)\n                    # print(\n                    #     f\"\\niteration {iteration:>2}: best_value (qNEI) = \"\n                    #     f\"({best_value:>4.2f}), \"\n                    #     f\"time = {t1 - t0:>4.2f}.\", end=\"\"\n                    # )\n                else:\n                    print(\".\", end=\"\")\n\n                best_observed_all_nei_sampled.append(best_value_sampled)\n                best_observed_all_nei_GP.append(best_value_GP)\n                data = {}\n                print(\" best_observed_all_nei\",  best_observed_all_nei_GP)\n                data[\"OC GP mean\"] = np.array(best_observed_all_nei_GP).reshape(-1)\n                data[\"OC GP sampled\"] = np.array(best_observed_all_nei_sampled).reshape(-1)\n\n                gen_file = pd.DataFrame.from_dict(data)\n                folder = \"RESULTS\"\n                subfolder = \"mistery_nEI_n_obj_\" + str(NOISE_SE) + \"_n_c_\" + str(NOISE_SE_constraint**2)\n                cwd = os.getcwd()\n                path = cwd + \"/\" + folder +\"/\"+ subfolder +'/it_' + str(rep)+ '.csv'\n                print(\"directory results: \", cwd + \"/\" + folder + \"/\" + subfolder)\n                if os.path.isdir(cwd + \"/\" + folder +\"/\"+ subfolder) == False:\n\n                    os.makedirs(cwd + \"/\" + folder +\"/\"+ subfolder)\n\n                gen_file.to_csv(path_or_buf=path)\n\n\n\n# function_caller_mistery_nEI(1, verbose=True)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/mistery_nEI.py b/core/acquisition/mistery_nEI.py
--- a/core/acquisition/mistery_nEI.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/mistery_nEI.py	(date 1659453324492)
@@ -237,7 +237,7 @@
             last_x_nei, last_obj_nei, last_con_nei = optimize_acqf_and_get_observation(Last_Step, diagnostics=False)
 
             for iteration in range(1, N_BATCH + 1):
-                t0 = time.time()
+                # t0 = time.time()
 
                 # fit the models
                 fit_gpytorch_model(mll_nei)
@@ -254,8 +254,13 @@
                 )
 
                 # optimize and get new observation
+                import time
+                ts = time.time()
                 new_x_nei, new_obj_nei, new_con_nei = optimize_acqf_and_get_observation(qNEI)
-
+                te = time.time()
+                tdiff = te -ts
+                print("time diff", tdiff)
+                raise
 
                 # if verbose:
                 #     ub = bounds[1, :]
@@ -340,6 +345,6 @@
 
 
 
-# function_caller_mistery_nEI(1, verbose=True)
+function_caller_mistery_nEI(1)
 
 
Index: core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1.250000000000000000e+00,3.250000000000000888e+00\n2.250000000000000000e+00,2.250000000000000000e+00\n1.750000000000000222e+00,3.750000000000000000e+00\n2.500000000000000000e-01,2.500000000000000000e-01\n3.250000000000000888e+00,7.500000000000001110e-01\n7.500000000000001110e-01,1.250000000000000000e+00\n2.750000000000000000e+00,1.750000000000000222e+00\n4.250000000000000000e+00,2.750000000000000000e+00\n3.750000000000000000e+00,4.750000000000000000e+00\n4.750000000000000000e+00,4.250000000000000000e+00\n2.228749999999999787e+00,2.603750000000000231e+00\n2.406250000000000000e+00,2.311250000000000249e+00\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv b/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv
--- a/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/RESULTS/mistery_TS_n_obj_1_n_c_0.1/X_None.csv	(date 1659454793415)
@@ -8,5 +8,4 @@
 4.250000000000000000e+00,2.750000000000000000e+00
 3.750000000000000000e+00,4.750000000000000000e+00
 4.750000000000000000e+00,4.250000000000000000e+00
-2.228749999999999787e+00,2.603750000000000231e+00
-2.406250000000000000e+00,2.311250000000000249e+00
+4.993750000000000355e+00,1.263750000000000151e+00
Index: core/acquisition/Hybrid_continuous_KG_v2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Copyright (c) 2018, Raul Astudillo Marban\n\nimport numpy as np\nfrom GPyOpt.experiment_design import initial_design\nfrom GPyOpt.acquisitions.base import AcquisitionBase\nfrom GPyOpt.core.task.cost import constant_cost_withGradients\nfrom GPyOpt.experiment_design import initial_design\nfrom aux_modules.gradient_modules import gradients\nfrom scipy.stats import norm\nimport scipy\nimport time\nimport matplotlib.pyplot as plt\n# from pathos.multiprocessing import ProcessingPool as Pool\n# from multiprocessing import Pool\nfrom itertools import permutations, product\nimport numpy as np\nimport itertools\nimport pylab\nfrom scipy.linalg import lapack\n\n\nclass KG(AcquisitionBase):\n    \"\"\"\n    Multi-attribute knowledge gradient acquisition function\n\n    :param model: GPyOpt class of model.\n    :param space: GPyOpt class of domain.\n    :param optimizer: optimizer of the acquisition. Should be a GPyOpt optimizer.\n    :param utility: utility function. See utility class for details. \n    \"\"\"\n\n    analytical_gradient_prediction = False\n\n    def __init__(self, model, space, model_c=None, nz = 5, optimizer=None, cost_withGradients=None, utility=None, true_func=None, true_const=None):\n        self.optimizer = optimizer\n        self.utility = utility\n        self.MCMC = False\n        self.base_points_cap_size = nz\n        self.counter = 0\n        self.current_max_value = np.inf\n        self.Z_samples_obj = None\n        self.Z_samples_const = None\n        self.Z_cdKG = None\n        self.true_func = true_func\n        self.true_const = true_const\n        self.saved_Nx = -10\n        self.base_discretisation = None\n        self.optimise_discretisation=True\n        # self.n_base_points = nz\n        self.name = \"Constrained_KG\"\n        self.fixed_discretisation = None\n        self._test_important_values_for_estimated_optimum = []\n        self._test_Fz_values = []\n\n\n        super(KG, self).__init__(model=model, space=space, optimizer=optimizer, model_c=model_c, cost_withGradients=cost_withGradients)\n        if cost_withGradients == None:\n            self.cost_withGradients = constant_cost_withGradients\n        else:\n            print('LBC acquisition does now make sense with cost. Cost set to constant.')\n            self.cost_withGradients = constant_cost_withGradients\n\n        dimy = 1\n        if model_c is None:\n            self.dim = dimy\n        else:\n            dimc =  self.model_c.output_dim\n            self.dimc = dimc\n            self.dim = dimy + dimc\n\n    def _compute_acq(self, X ):\n        \"\"\"\n        Computes the aquisition function\n        \n        :param X: set of points at which the acquisition function is evaluated. Should be a 2d array.\n        \"\"\"\n        # print(\"_compute_acq\")\n\n        X =np.atleast_2d(X)\n\n        if self.model_c is None:\n            marginal_acqX = self._unconstrained_marginal_acq(X)\n        else:\n            marginal_acqX = self._marginal_acq(X)\n        KG = np.reshape(marginal_acqX, (X.shape[0],1))\n\n        return KG\n\n    def generate_random_vectors(self, base_c_quantiles=None,\n                                optimize_discretization=True,\n                                optimize_random_Z=False,\n                                fixed_discretisation=None):\n\n        self.update_current_best()\n        self.base_marg_points = 40\n        self.n_marginalisation_points = np.array([-2.64, -0.67, 0, 0.67, 2.64])\n\n        self.n_base_points = len(self.n_marginalisation_points)\n        self.optimise_discretisation = optimize_discretization\n\n        if fixed_discretisation is not None:\n\n            self.fixed_discretisation = True\n\n            sampled_X = self.model.get_X_values()\n            # self.update_current_best()\n\n            self.base_discretisation = fixed_discretisation\n            extended_fixed_discretisation = np.concatenate((fixed_discretisation, sampled_X))\n            extended_fixed_discretisation = np.concatenate((extended_fixed_discretisation, self.current_max_xopt))\n\n            self.fixed_discretisation_values = extended_fixed_discretisation\n            self.X_Discretisation = extended_fixed_discretisation\n\n        else:\n            self.base_discretisation = None\n            self.fixed_discretisation = False\n            if optimize_discretization==True:\n                self.X_Discretisation =None\n\n        if base_c_quantiles is not None:\n\n            clist =  base_c_quantiles\n            res = list(itertools.product(*clist))\n            list(res)\n            self.Z_cdKG = np.array(list(res))\n\n            alllist = [self.n_marginalisation_points] + base_c_quantiles\n            res = list(itertools.product(*alllist))\n\n            if np.array(list(res)).shape[0]> self.base_points_cap_size:\n                subset_pick = np.random.choice(range(np.array(list(res)).shape[0]), self.base_points_cap_size, replace=False)\n                self.Z_obj = np.array(list(res))[subset_pick, :1] #np.atleast_2d(self.n_marginalisation_points).T #\n                self.Z_const = np.array(list(res))[subset_pick, 1:] #constraint_quantiles #\n            else:\n                self.Z_obj = np.array(list(res))[:, :1] #np.atleast_2d(self.n_marginalisation_points).T #\n                self.Z_const = np.array(list(res))[:, 1:] #constraint_quantiles #\n\n\n    def _unconstrained_marginal_acq(self, X):\n\n        varX_obj = self.model.posterior_variance(X, noise=True)\n\n        acqX = np.zeros((X.shape[0], 1))\n\n        for i in range(0, len(X)):\n            x = np.atleast_2d(X[i])\n\n            #For each x new precompute covariance matrices for\n            self.model.partial_precomputation_for_covariance(x)\n            self.model.partial_precomputation_for_covariance_gradient(x)\n\n            aux_obj = np.reciprocal(varX_obj[:, i])\n            #Create discretisation for discrete KG.\n            # if self.fixed_discretisation is False:\n\n            self.X_Discretisation = self._unconstrained_discretisation_X(index=i, X=X, aux_obj =aux_obj )\n\n            # print(\"X discretisation\", self.X_Discretisation)\n\n            kg_val = self.unconstrained_discrete_KG(Xd = self.X_Discretisation ,\n                                      xnew = x,\n                                      Zc=self.Z_cdKG,\n                                      aux_obj =aux_obj)\n            acqX[i,:] = kg_val\n\n        return acqX.reshape(-1)\n\n    def unconstrained_discrete_KG(self, Xd, xnew, Zc, aux_obj, grad=False, verbose=False):\n        xnew = np.atleast_2d(xnew)\n        # Xd = np.concatenate((Xd, self.fixed_discretisation_values))\n        Xd = np.concatenate((Xd, xnew))\n        # Xd = np.concatenate((Xd, self.current_max_xopt))\n        self.grad = grad\n        out = []\n\n        MM = self.model.predict(Xd)[0].reshape(-1)  # move up\n        SS_Xd = np.array(self.model.posterior_covariance_between_points_partially_precomputed(Xd, xnew)[:, :, :]).reshape(-1)\n        inv_sd = np.asarray(np.sqrt(aux_obj)).reshape(())\n\n        SS = SS_Xd * inv_sd\n        MM = MM.reshape(-1)\n        SS = SS.reshape(-1)\n\n        marginal_KG = []\n\n\n        KG = self._unconstrained_parallel_KG(MM=MM,SS=SS,verbose=verbose)\n\n        KG = np.clip(KG, 0, np.inf)\n        marginal_KG.append(KG)\n        out.append(marginal_KG)\n\n        KG_value = np.mean(out)\n        # gradKG_value = np.mean(gradout, axis=?)\n        assert ~np.isnan(KG_value);\n        \"KG cant be nan\"\n        return KG_value#, gradKG_value\n\n\n    def _unconstrained_parallel_KG(self, MM, SS, Xd=None,verbose=False):\n        \"\"\"\n        Calculates the linear epigraph, i.e. the boundary of the set of points\n        in 2D lying above a collection of straight lines y=a+bx.\n        Parameters\n        ----------\n        a\n            Vector of intercepts describing a set of straight lines\n        b\n            Vector of slopes describing a set of straight lines\n        tol\n            Minimum slope (in absolute value) different from zero\n        Returns\n        -------\n        KGCB\n            average hieght of the epigraph\n        grad_a\n            dKGCB/db, vector\n        grad_b\n            dKGCB/db, vector\n        \"\"\"\n        a = MM #np.array(self.c_MM[:, index]).reshape(-1)\n        b = SS #np.array(self.c_SS[:, index]).reshape(-1)\n\n        assert len(b) > 0, \"must provide slopes\"\n        assert len(a) == len(b), f\"#intercepts != #slopes, {len(a)}, {len(b)}\"\n        # ensure 1D\n        a = np.array(a).reshape(-1)\n        b = np.array(b).reshape(-1)\n        assert len(a) > 0, \"must provide slopes\"\n        assert len(a) == len(b), f\"#intercepts != #slopes, {len(a)}, {len(b)}\"\n\n        # ensure 1D\n        a = np.atleast_1d(a.squeeze())\n        b = np.atleast_1d(b.squeeze()) #- np.mean(b)\n        max_a_index = np.argmax(a)\n        maxa = np.max(a)\n        n_elems = len(a)\n\n        if np.all(np.abs(b) < 0.000000001):\n            return np.array([0])#, np.zeros(a.shape), np.zeros(b.shape)\n\n        # order by ascending b and descending a\n        order = np.lexsort((-a, b))\n        a = a[order]\n        b = b[order]\n\n        # exclude duplicated b (or super duper similar b)\n        threshold = (b[-1] - b[0]) * 0.00001\n        diff_b = b[1:] - b[:-1]\n        keep = diff_b > threshold\n        keep = np.concatenate([[True], keep])\n        keep[np.argmax(a)] = True\n        order = order[keep]\n        a = a[keep]\n        b = b[keep]\n\n        # initialize\n        idz = [0]\n        i_last = 0\n        x = [-np.inf]\n\n        n_lines = len(a)\n        # main loop TODO describe logic\n        # TODO not pruning properly, e.g. a=[0,1,2], b=[-1,0,1]\n        # returns x=[-inf, -1, -1, inf], shouldn't affect kgcb\n        while i_last < n_lines - 1:\n            i_mask = np.arange(i_last + 1, n_lines)\n            x_mask = -(a[i_last] - a[i_mask]) / (b[i_last] - b[i_mask])\n\n            best_pos = np.argmin(x_mask)\n            idz.append(i_mask[best_pos])\n            x.append(x_mask[best_pos])\n\n            i_last = idz[-1]\n\n        x.append(np.inf)\n\n        x = np.array(x)\n        idz = np.array(idz)\n\n        # found the epigraph, now compute the expectation\n        a = a[idz]\n        b = b[idz]\n        order = order[idz]\n\n        pdf = norm.pdf(x)\n        cdf = norm.cdf(x)\n\n        KG = np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:]))\n        KG -= np.max(a)\n\n\n\n        z_all = np.linspace(x[1], x[-2], 100)\n        for j in range(len(a)):\n\n            print(x[1], x[-2])\n            if x[j] <-30:\n                z = np.linspace(-3, x[j+1], 3)\n            elif x[j+1] > 30:\n                z = np.linspace(x[j], 3, 3)\n            else:\n                z = np.linspace(x[j], x[j+1], 3)\n            mu_star = a.reshape(-1)[j] + b.reshape(-1)[j]*z\n            mu_star_all = a.reshape(-1)[j] + b.reshape(-1)[j]*z_all\n            plt.plot(z_all , mu_star_all,\n                     color=\"grey\",\n                     linewidth=3,\n                     alpha=0.3, zorder=0)\n            plt.plot(z, mu_star,\n                     color=\"red\",\n                     linewidth=3,\n                     zorder=-1)\n\n        plt.plot(z_all, mu_star_all,\n                 color=\"grey\",\n                 linewidth=3,\n                 alpha=0.3, zorder=0, label=\" $\\mu_{i}^{n+1}(x)$\")\n        plt.plot(z, mu_star,\n                 color=\"red\",\n                 linewidth=3,\n                 zorder=-1, label=\"$\\max_{x}$  $\\mu_{i}^{n+1}(x)$\")\n        plt.xlabel(\"$Z_{y}$\", size=14)\n        plt.xticks(fontsize=13)\n        plt.yticks(fontsize=13)\n        plt.legend(loc=\"upper left\", fontsize=15)\n        plt.xlim(-2.4,2.4)\n        plt.savefig(\"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zy_epigraph.jpg\")\n        plt.show()\n        raise\n        # if verbose:\n        #     print(\"a_sorted \",a_sorted )\n        #     print(\"b_sorted\", b_sorted)\n        #\n        #     print(\"current max\",np.max(a) )\n        #     print(\"idz\", idz)\n        #     print(\"a\", a)\n        #     print(\"b\", b)\n        #     plt.scatter(Xd.reshape(-1), np.array(self.c_MM[:, index]).reshape(-1))\n        #     plt.plot(np.linspace(0,5,2), np.repeat(np.max(a), 2), color=\"red\")\n        #     plt.show()\n        #     # raise\n        # if KG < -1e-5:\n        #     print(\"KG cant be negative\")\n        #     print(\"np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:]))\",\n        #           np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:])))\n        #     print(\"self.bases_value[index]\", np.max(a))\n        #     print(\"KG\", KG)\n        #     raise\n        #\n        # KG = np.clip(KG, 0, np.inf)\n\n        if np.isnan(KG):\n            print(\"KG\", KG)\n            print(\"self.bases_value[index]\", max_a_index)\n            print(\"a\", a)\n            print(\"b\", b)\n            raise\n\n        return KG\n\n    def _unconstrained_discretisation_X(self, index, X, aux_obj):\n        \"\"\"\n\n             \"\"\"\n        i = index\n        x = np.atleast_2d(X[i])\n\n        statistics_precision = []\n        self.Z_obj = np.array([-2.64,-1.96, -0.67, 0, 0.67,1.96, 2.64])\n        X_discretisation = np.zeros((len(self.Z_obj),X.shape[1]))\n\n        # efficiency = 0\n        self.new_anchors_flag = True\n        complete_function = []\n        xnew_vals=[]\n        for z in range(len(self.Z_obj)):\n\n            Z_obj  = self.Z_obj[z]\n            # inner function of maKG acquisition function.\n            # current_xval, current_max = self._compute_current_max(x, Z_const, aux_c)\n\n            def inner_func(X_inner):\n                X_inner = np.atleast_2d(X_inner)\n                # X_inner = X_inner.astype(\"int\")\n                grad_obj = gradients(x_new=x, model=self.model, Z=Z_obj, aux=aux_obj,\n                                     X_inner=X_inner)  # , test_samples = self.test_samples)\n                mu_xnew = grad_obj.compute_value_mu_xnew(x=X_inner)\n\n                func_val = mu_xnew\n                return -func_val.reshape(-1)  # mu_xnew , Fz\n\n            # inner function of maKG acquisition function with its gradient.\n            plot_samples = np.linspace(4.0, 7, 60)[:, np.newaxis]\n            complete_function.append(inner_func(plot_samples))\n            xnew_vals.append(-inner_func(x))\n            inner_opt_x, inner_opt_val = self.optimizer.optimize_inner_func(f=inner_func,\n                                                                            f_df=None)\n\n            statistics_precision.append(inner_opt_val)\n            X_discretisation[z] = inner_opt_x.reshape(-1)\n\n        plot_samples = np.linspace(4.0,7,60)[:, np.newaxis]\n        mu = self.model.posterior_mean(plot_samples).reshape(-1)\n        var = self.model.posterior_variance(plot_samples, noise=False).reshape(-1)\n\n        print(X_discretisation, -np.array(statistics_precision).reshape(-1))\n        plt.plot(plot_samples.reshape(-1), mu, color=\"grey\", linestyle='dashed')\n        plt.fill_between(plot_samples.reshape(-1),\n                         mu-3.1*np.sqrt(var),\n                         mu+3.1*np.sqrt(var), color=\"lightcoral\", alpha=0.3)\n        plt.scatter(X_discretisation, -np.array(statistics_precision).reshape(-1), label=\"$\\max_{x}$  $\\mu_{i}^{n+1}(x)$\",\n        color=\"red\", s=60,edgecolors='black', zorder=1)\n        plt.plot(plot_samples.reshape(-1), -np.array(complete_function).T, color=\"grey\", alpha=0.5)\n        plt.scatter(np.repeat(x, len(xnew_vals)), np.array(xnew_vals).reshape(-1), s=60, color=\"white\", edgecolors=\"black\", zorder=1)\n        plt.xticks(fontsize=14)\n        plt.yticks(fontsize=14)\n        plt.legend(loc=\"upper left\", fontsize=15)\n        plt.xlim(4,7)\n        plt.savefig(\"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/max_u.jpg\")\n        plt.show()\n\n        self.new_anchors_flag = False\n        return X_discretisation\n\n    def _marginal_acq(self, X):\n        self.update_current_best()\n\n        varX_obj = self.model.posterior_variance(X, noise=True)\n        varX_c = self.model_c.posterior_variance(X, noise=True)\n\n        acqX = np.zeros((X.shape[0], 1))\n\n        for i in range(0, len(X)):\n            x = np.atleast_2d(X[i])\n\n            #For each x new precompute covariance matrices for\n            self.model.partial_precomputation_for_covariance(x)\n            self.model.partial_precomputation_for_covariance_gradient(x)\n\n            self.model_c.partial_precomputation_for_covariance(x)\n            self.model_c.partial_precomputation_for_covariance_gradient(x)\n\n            # Precompute aux_obj and aux_c for computational efficiency.\n\n            aux_obj = np.reciprocal(varX_obj[:, i])\n            aux_c = np.reciprocal(varX_c[:, i])\n\n            quantiles = self.constraint_sensitivity_and_constraint_quantile_generation(aux_c=aux_c,\n                                                                                       xnew=x)\n\n            if self.base_discretisation is None:\n                self.generate_random_vectors(base_c_quantiles=quantiles,\n                                             optimize_discretization=self.optimise_discretisation,\n                                             optimize_random_Z=True,\n                                             fixed_discretisation= None)\n            else:\n                self.generate_random_vectors(base_c_quantiles=quantiles,\n                                             optimize_discretization=self.optimise_discretisation,\n                                             optimize_random_Z=True,\n                                             fixed_discretisation= self.base_discretisation)\n\n\n            #Create discretisation for discrete KG.\n            if self.fixed_discretisation is False:\n                if self.optimise_discretisation:\n                    self.generate_random_vectors(base_c_quantiles=quantiles, optimize_discretization=True,\n                                                 optimize_random_Z=True,\n                                                 fixed_discretisation=None)\n\n\n                    self.X_Discretisation = self.Discretisation_X(index=i, X=X, aux_obj =aux_obj , aux_c =aux_c)\n                    # print(\"updated discretisation\")\n                    # print(\"quantiles\", quantiles)\n                    self.optimise_discretisation = False\n            # print(\"X discretisation\", self.X_Discretisation)\n\n            kg_val = self.discrete_KG(Xd = self.X_Discretisation ,\n                                      xnew = x,\n                                      Zc=self.Z_cdKG,\n                                      aux_obj =aux_obj ,\n                                      aux_c =aux_c )\n            acqX[i,:] = kg_val\n\n        return acqX.reshape(-1)\n\n    def constraint_sensitivity_and_constraint_quantile_generation(self, aux_c, xnew):\n\n        base_quantiles =  [np.array([ -3, 3])] * self.model_c.output_dim\n        base_quantiles = np.array(base_quantiles).T\n\n\n        x_inner = np.atleast_2d(self.current_max_xopt)\n        xnew = np.atleast_2d(xnew)\n        grad_c = gradients(x_new=xnew, model=self.model_c, Z=base_quantiles, aux=aux_c, X_inner=x_inner)\n\n        Fz = grad_c.compute_probability_feasibility_each_gp(x=x_inner)\n        Fz = np.squeeze(Fz)\n        if len(Fz.shape)==1:\n            Fz = np.atleast_2d(Fz).T\n\n        else:\n            Fz = Fz.T\n\n        delta = np.abs(Fz[0,:] - Fz[1,:])\n\n        quantiles = []\n        self._test_Fz_values.append(delta)\n        for d in delta:\n            if  d<1e-4:\n                quantiles.append(np.array([0]))\n                self._test_important_values_for_estimated_optimum.append(0)\n            else:\n                quantiles.append(np.array([ -2.64,  0,  2.64]))\n                self._test_important_values_for_estimated_optimum.append(1)\n        return quantiles\n\n    def Discretisation_X(self, index, X, aux_obj, aux_c):\n        \"\"\"\n\n             \"\"\"\n        i = index\n        x = np.atleast_2d(X[i])\n\n        statistics_precision = []\n        X_discretisation = np.zeros((len(self.Z_obj),X.shape[1]))\n\n        # efficiency = 0\n        self.new_anchors_flag = True\n        for z in range(len(self.Z_obj)):\n\n            Z_obj  = self.Z_obj[z]\n            Z_const = self.Z_const[z]\n            # inner function of maKG acquisition function.\n            # current_xval, current_max = self._compute_current_max(x, Z_const, aux_c)\n\n            def inner_func(X_inner):\n                X_inner = np.atleast_2d(X_inner)\n                # X_inner = X_inner.astype(\"int\")\n                grad_obj = gradients(x_new=x, model=self.model, Z=Z_obj, aux=aux_obj,\n                                     X_inner=X_inner)  # , test_samples = self.test_samples)\n                mu_xnew = grad_obj.compute_value_mu_xnew(x=X_inner)\n\n                Z_const = self.Z_const[z]\n                if len(Z_const.shape)==1:\n                    Z_const = np.atleast_2d(Z_const)\n\n                grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const, aux=aux_c,\n                                   X_inner=X_inner)  # , test_samples = initial_design('random', self.space, 1000))\n\n                Fz = grad_c.compute_probability_feasibility_multi_gp(x=X_inner, l=0)\n\n                func_val = mu_xnew* Fz #- current_max\n\n                return -func_val.reshape(-1)  # mu_xnew , Fz\n\n            # inner function of maKG acquisition function with its gradient.\n\n            def inner_func_with_gradient(X_inner):\n                # print(\"inner_func_with_gradient\")\n\n                X_inner = np.atleast_2d(X_inner)\n                # X_inner = X_inner.astype(\"int\")\n\n                grad_obj = gradients(x_new=x, model=self.model, Z=Z_obj, aux=aux_obj, X_inner=X_inner,\n                                     precompute_grad=True)\n                mu_xnew = grad_obj.compute_value_mu_xnew(x=X_inner)\n\n                grad_mu_xnew = grad_obj.compute_gradient_mu_xnew(x=X_inner)\n\n                grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const, aux=aux_c, X_inner=X_inner,\n                                   precompute_grad=True)\n\n                Fz, grad_Fz = grad_c.compute_probability_feasibility_multi_gp(x=X_inner, l=0,\n                                                                              gradient_flag=True)\n                func_val = np.array(mu_xnew * Fz) #- self.control_variate\n\n                func_grad_val = np.array(mu_xnew).reshape(-1) * grad_Fz.reshape(-1) + Fz.reshape(\n                    -1) * grad_mu_xnew.reshape(\n                    -1)  # grad_c.product_gradient_rule(func = np.array([np.array(mu_xnew).reshape(-1), Fz.reshape(-1)]), grad = np.array([grad_mu_xnew.reshape(-1) ,grad_Fz.reshape(-1) ]))\n\n                assert ~ np.isnan(func_val); \"nans found\"\n                # print(\"-func_val, -func_grad_val\",-func_val, -func_grad_val)\n                return -func_val, func_grad_val\n\n\n            inner_opt_x, inner_opt_val = self.optimizer.optimize_inner_func(f=inner_func,\n                                                                            f_df=None)\n\n            statistics_precision.append(inner_opt_val)\n            X_discretisation[z] = inner_opt_x.reshape(-1)\n\n        self.new_anchors_flag = False\n        return X_discretisation\n\n    def probability_feasibility_multi_gp(self, x, model, l=0):\n        # print(\"model\",model.output)\n        x = np.atleast_2d(x)\n        Fz = []\n        for m in range(model.output_dim):\n            Fz.append(self.probability_feasibility(x, model.output[m], l))\n        Fz = np.product(Fz, axis=0)\n        return Fz\n\n    def probability_feasibility(self, x, model, l=0):\n\n        mean = model.posterior_mean(x)\n        var = model.posterior_variance(x, noise=False)\n        std = np.sqrt(var).reshape(-1, 1)\n\n        mean = mean.reshape(-1, 1)\n\n        norm_dist = norm(mean, std)\n        Fz = norm_dist.cdf(l)\n\n        return Fz.reshape(-1, 1)\n\n    def _compute_acq_withGradients(self, X):\n        \"\"\"\n        \"\"\"\n        # print(\"_compute_acq_withGradients\")\n\n        raise\n        X = np.atleast_2d(X)\n\n        marginal_acqX, marginal_dacq_dX = self._marginal_acq_with_gradient(X)\n\n        acqX = np.reshape(marginal_acqX,(X.shape[0], 1))\n        dacq_dX = np.reshape(marginal_dacq_dX , X.shape)\n        KG = acqX\n        return np.array(KG).reshape(-1), np.array(dacq_dX).reshape(-1)\n\n    def _marginal_acq_with_gradient(self, X):\n        # print(\"_marginal_acq\")\n        \"\"\"\n\n        \"\"\"\n        # Initialise marginal acquisition variables\n\n        # Precompute posterior pariance at vector points X. These are the same through every cKG loop.\n\n        varX_obj = self.model.posterior_variance(X, noise=True)\n        varX_c = self.model_c.posterior_variance(X, noise=True)\n        acqX = np.zeros((X.shape[0], 1))\n        dacq_dX = np.zeros((X.shape[0], X.shape[1], 1))\n\n        for i in range(0, len(X)):\n            x = np.atleast_2d(X[i])\n\n            # For each x new precompute covariance matrices for\n\n            self.model.partial_precomputation_for_covariance(x)\n            self.model.partial_precomputation_for_covariance_gradient(x)\n\n            self.model_c.partial_precomputation_for_covariance(x)\n            self.model_c.partial_precomputation_for_covariance_gradient(x)\n\n            # Precompute aux_obj and aux_c for computational efficiency.\n\n            aux_obj = np.reciprocal(varX_obj[:, i])\n            aux_c = np.reciprocal(varX_c[:, i])\n\n            # Create discretisation for discrete KG.\n            start = time.time()\n            # print(\"self.fixed_discretisation\",self.fixed_discretisation)\n            # print(\"self.optimise_discretisation\",self.optimise_discretisation)\n            # if test_mode:\n            #     self.X_Discretisation = self.Discretisation_X(index=i, X=X, aux_obj=aux_obj, aux_c=aux_c)\n            if self.fixed_discretisation is False:\n                if self.optimise_discretisation:\n                    print(\"optimise_discretisation\", self.optimise_discretisation)\n                    self.X_Discretisation = self.Discretisation_X(index=i, X=X, aux_obj=aux_obj, aux_c=aux_c)\n                    print(\"updated discretisation\")\n                    self.optimise_discretisation = False\n            # print(\"x\", x)\n            kg_val, kg_grad = self.discrete_KG(Xd=self.X_Discretisation, xnew=x, Zc=self.Z_cdKG, aux_obj=aux_obj,\n                                      aux_c=aux_c, grad=True)\n            # print(\"kg\",  kg_val)\n            acqX[i, :] = kg_val\n            dacq_dX[i, :, 0] = kg_grad\n        # print(\"acqX\",acqX)\n\n        return acqX.reshape(-1), dacq_dX\n\n    def discrete_KG(self, Xd, xnew, Zc, aux_obj, aux_c, grad=False, verbose=False):\n        xnew = np.atleast_2d(xnew)\n        # Xd = np.concatenate((Xd, self.fixed_discretisation_values))\n        Xd = np.concatenate((Xd, xnew))\n        Xd = np.concatenate((Xd, self.current_max_xopt))\n        self.grad = grad\n        out = []\n        grad_c = gradients(x_new=xnew, model=self.model_c, Z=Zc, aux=aux_c,\n                           X_inner=Xd)  # , test_samples = initial_design('random', self.space, 1000))\n        Fz = grad_c.compute_probability_feasibility_multi_gp(x=Xd, l=0)\n\n        MM = self.model.predict(Xd)[0].reshape(-1)  # move up\n        SS_Xd = np.array(self.model.posterior_covariance_between_points_partially_precomputed(Xd, xnew)[:, :, :]).reshape(-1)\n        inv_sd = np.asarray(np.sqrt(aux_obj)).reshape(())\n\n        SS = SS_Xd * inv_sd\n        MM = MM.reshape(-1)\n        SS = SS.reshape(-1)\n\n\n        grad_c = gradients(x_new=xnew, model=self.model_c, Z=Zc, aux=aux_c,\n                           X_inner=self.current_max_xopt)\n        Fz_current = grad_c.compute_probability_feasibility_multi_gp(x=self.current_max_xopt, l=0).reshape(-1)\n        MM_current = self.model.predict(self.current_max_xopt)[0].reshape(-1) #MM[-1]\n\n        # print(\"Fz_current \",Fz_current.shape, \"MM_current\", MM_current.shape)\n        # print(\"Fz_current \", Fz_current, \"MM_current\", MM_current)\n        marginal_KG = []\n\n\n        for zc in range(Zc.shape[0]):\n            VoI_future = self.parallel_KG(MM=MM*np.array(Fz[:,zc]).reshape(-1),SS=SS*np.array(Fz[:,zc]).reshape(-1),verbose=verbose)\n            VoI_current = MM_current*np.array(Fz_current[zc]).reshape(-1)\n            KG = VoI_future - VoI_current\n\n            try:\n                if KG < -1e-5:\n                    print(\"max future\", np.max(MM * np.array(Fz[:, zc]).reshape(-1)))\n                    print(\"MM current\", MM_current*np.array(Fz_current[zc]).reshape(-1))\n                    print(\"VoI_future\", VoI_future)\n                    print(\"VoI_current\", VoI_current)\n                    print(\"KG\", KG)\n\n            except:\n                print(\"max future\", np.max(MM * np.array(Fz[:, zc]).reshape(-1)))\n                print(\"MM current\", MM_current * np.array(Fz_current[zc]).reshape(-1))\n                print(\"VoI_future\", VoI_future)\n                print(\"VoI_current\", VoI_current)\n                print(\"KG\", KG)\n\n            KG = np.clip(KG, 0, np.inf)\n            marginal_KG.append(KG)\n\n        out.append(marginal_KG)\n        # if verbose:\n        #     print(\"Zc\", np.array_split(Zc, 1))\n        #     print(\"marginal_KG\",out)\n        #     print(\"KG_value\",np.mean(out))\n\n        KG_value = np.mean(out)\n        # gradKG_value = np.mean(gradout, axis=?)\n        assert ~np.isnan(KG_value);\n        \"KG cant be nan\"\n        return KG_value#, gradKG_value\n\n    def parallel_KG(self, MM, SS, Xd=None,verbose=False):\n        \"\"\"\n        Calculates the linear epigraph, i.e. the boundary of the set of points\n        in 2D lying above a collection of straight lines y=a+bx.\n        Parameters\n        ----------\n        a\n            Vector of intercepts describing a set of straight lines\n        b\n            Vector of slopes describing a set of straight lines\n        tol\n            Minimum slope (in absolute value) different from zero\n        Returns\n        -------\n        KGCB\n            average hieght of the epigraph\n        grad_a\n            dKGCB/db, vector\n        grad_b\n            dKGCB/db, vector\n        \"\"\"\n        a = MM #np.array(self.c_MM[:, index]).reshape(-1)\n        b = SS #np.array(self.c_SS[:, index]).reshape(-1)\n\n        assert len(b) > 0, \"must provide slopes\"\n        assert len(a) == len(b), f\"#intercepts != #slopes, {len(a)}, {len(b)}\"\n        # ensure 1D\n        a = np.array(a).reshape(-1)\n        b = np.array(b).reshape(-1)\n        assert len(a) > 0, \"must provide slopes\"\n        assert len(a) == len(b), f\"#intercepts != #slopes, {len(a)}, {len(b)}\"\n\n        # ensure 1D\n        a = np.atleast_1d(a.squeeze())\n        b = np.atleast_1d(b.squeeze()) #- np.mean(b)\n        max_a_index = np.argmax(a)\n        maxa = np.max(a)\n        n_elems = len(a)\n\n        if np.all(np.abs(b) < 0.000000001):\n            return np.array([0])#, np.zeros(a.shape), np.zeros(b.shape)\n\n        # order by ascending b and descending a\n        order = np.lexsort((-a, b))\n        a = a[order]\n        b = b[order]\n\n        # exclude duplicated b (or super duper similar b)\n        threshold = (b[-1] - b[0]) * 0.00001\n        diff_b = b[1:] - b[:-1]\n        keep = diff_b > threshold\n        keep = np.concatenate([[True], keep])\n        keep[np.argmax(a)] = True\n        order = order[keep]\n        a = a[keep]\n        b = b[keep]\n\n        # initialize\n        idz = [0]\n        i_last = 0\n        x = [-np.inf]\n\n        n_lines = len(a)\n        # main loop TODO describe logic\n        # TODO not pruning properly, e.g. a=[0,1,2], b=[-1,0,1]\n        # returns x=[-inf, -1, -1, inf], shouldn't affect kgcb\n        while i_last < n_lines - 1:\n            i_mask = np.arange(i_last + 1, n_lines)\n            x_mask = -(a[i_last] - a[i_mask]) / (b[i_last] - b[i_mask])\n\n            best_pos = np.argmin(x_mask)\n            idz.append(i_mask[best_pos])\n            x.append(x_mask[best_pos])\n\n            i_last = idz[-1]\n\n        x.append(np.inf)\n\n        x = np.array(x)\n        idz = np.array(idz)\n\n        # found the epigraph, now compute the expectation\n        a = a[idz]\n        b = b[idz]\n        order = order[idz]\n\n        pdf = norm.pdf(x)\n        cdf = norm.cdf(x)\n\n        KG = np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:]))\n        #KG -= np.max(a)\n\n        if KG - maxa <- 1e-5 :\n            print(\"x\",x)\n            print(\"a\",a )\n            print(\"b\",b)\n            print(\"maxa\",maxa)\n            print(\"KG\", KG)\n            z_all = np.linspace(x[1], x[-2], 100)\n            for j in range(len(a)):\n\n                print(x[1], x[-2])\n                if x[j] <-30:\n                    z = np.linspace(-3, x[j+1], 3)\n                elif x[j+1] > 30:\n                    z = np.linspace(x[j], 3, 3)\n                else:\n                    z = np.linspace(x[j], x[j+1], 3)\n                mu_star = a.reshape(-1)[j] + b.reshape(-1)[j]*z\n                mu_star_all = a.reshape(-1)[j] + b.reshape(-1)[j]*z_all\n                plt.plot(z_all , mu_star_all, color=\"grey\")\n                plt.plot(z, mu_star)\n            plt.show()\n            raise\n        # if verbose:\n        #     print(\"a_sorted \",a_sorted )\n        #     print(\"b_sorted\", b_sorted)\n        #\n        #     print(\"current max\",np.max(a) )\n        #     print(\"idz\", idz)\n        #     print(\"a\", a)\n        #     print(\"b\", b)\n        #     plt.scatter(Xd.reshape(-1), np.array(self.c_MM[:, index]).reshape(-1))\n        #     plt.plot(np.linspace(0,5,2), np.repeat(np.max(a), 2), color=\"red\")\n        #     plt.show()\n        #     # raise\n        # if KG < -1e-5:\n        #     print(\"KG cant be negative\")\n        #     print(\"np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:]))\",\n        #           np.sum(a * (cdf[1:] - cdf[:-1]) + b * (pdf[:-1] - pdf[1:])))\n        #     print(\"self.bases_value[index]\", np.max(a))\n        #     print(\"KG\", KG)\n        #     raise\n        #\n        # KG = np.clip(KG, 0, np.inf)\n\n        if np.isnan(KG):\n            print(\"KG\", KG)\n            print(\"self.bases_value[index]\", max_a_index)\n            print(\"a\", a)\n            print(\"b\", b)\n            raise\n\n        return KG\n\n    def run_inner_func_vals(self,f ):\n        X = initial_design('random', self.space, 1000)\n        f_val = []\n        for x in X:\n            x = x.reshape(1,-1)\n            f_val.append(np.array(f(x)).reshape(-1))\n        print(\"f_val min max\", np.min(f_val), np.max(f_val))\n        plt.scatter(X[:,0],X[:,1], c=np.array(f_val).reshape(-1))\n        plt.show()\n\n    def update_current_best(self):\n        n_observations = self.model.get_X_values().shape[0]\n        if n_observations > self.counter:\n            print(\"updating current best..........\")\n            self.counter = n_observations\n            self.current_max_xopt, self.current_max_value = self._compute_current_max()\n        assert self.current_max_value.reshape(-1) is not np.inf; \"error ocurred updating current best\"\n\n    def current_func(self,X_inner):\n        X_inner = np.atleast_2d(X_inner)\n        mu = self.model.posterior_mean(X_inner)[0]\n        mu = np.array(mu).reshape(-1)\n        Fz = self.probability_feasibility_multi_gp(x=X_inner, model=self.model_c).reshape(-1)\n        return -(mu * Fz).reshape(-1)\n\n    def _compute_current_max(self):\n\n        inner_opt_x, inner_opt_val = self.optimizer.optimize_inner_func(f=self.current_func,\n                                                                        f_df=None,\n                                                                        num_samples=5000)\n        inner_opt_x = np.array(inner_opt_x).reshape(-1)\n        inner_opt_x = np.atleast_2d(inner_opt_x)\n        return inner_opt_x,-inner_opt_val\n\n    def probability_feasibility_multi_gp(self, x, model, mean=None, cov=None, l=0):\n\n        x = np.atleast_2d(x)\n\n        Fz = []\n        for m in range(model.output_dim):\n            Fz.append(self.probability_feasibility( x, model.output[m], l))\n        Fz = np.product(Fz,axis=0)\n        return Fz\n\n    def _plots(self, test_samples, discretisation=None):\n\n        if False:\n            def current_func(X_inner, Z_const, aux_c):\n                X_inner = np.atleast_2d(X_inner)\n                mu = self.model.posterior_mean(X_inner)[0]\n                mu = np.array(mu).reshape(-1)\n                grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const, aux=aux_c,\n                                   X_inner=X_inner)  # , test_samples = initial_design('random', self.space, 1000))\n\n                Fz = grad_c.compute_probability_feasibility_multi_gp(x=X_inner, l=0).reshape(-1)\n                return -(mu * Fz).reshape(-1)\n\n            plot_samples = initial_design('random', self.space, 1000)\n            test_samples = np.sort(test_samples ,axis=0)\n            plot_samples = np.sort(plot_samples,axis=0)\n            # print(\"test_samples\",test_samples)\n            varX_obj = self.model.posterior_variance(test_samples, noise=True)\n            varX_c = self.model_c.posterior_variance(test_samples, noise=True)\n\n            colors = [\"magenta\", \"green\", \"red\", \"blue\", \"orange\"]\n            Z_obj =  np.array([ -3, -1.64, -2.64, -0.67, 0, 0.67, 1.64, 2.64, 3])\n            Z_const =  np.array([ -3, -1.64, -2.64, -0.67, 0, 0.67, 1.64, 2.64, 3])\n\n            optimums_objs = []\n            optimums_const = []\n            optimiser_objs = []\n            optimiser_const =[ ]\n            future_means_const = []\n            future_means_objs = []\n            for i in range(0, len(test_samples)):\n                x = np.atleast_2d(test_samples[i])\n                # For each x new precompute covariance matrices for\n                self.model.partial_precomputation_for_covariance(x)\n                self.model.partial_precomputation_for_covariance_gradient(x)\n                self.model_c.partial_precomputation_for_covariance(x)\n                self.model_c.partial_precomputation_for_covariance_gradient(x)\n                # Precompute aux_obj and aux_c for computational efficiency.\n                aux_obj = np.reciprocal(varX_obj[:, i])\n                aux_c = np.reciprocal(varX_c[:, i])\n                maxgraph = []\n                feasibility_graph = []\n                posterior_mean_c = []\n                posterior_var_c = []\n                for zc in range(len(Z_const)):\n                    individual_maxgraph = []\n\n                    grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const[zc], aux=aux_c,\n                                       X_inner=plot_samples)  # , test_samples = initial_design('random', self.space, 1000))\n                    feasibility_graph.append(grad_c.compute_probability_feasibility_multi_gp(x=plot_samples, l=0).reshape(-1))\n                    posterior_mean_c.append(grad_c.compute_value_mu_xnew(x=plot_samples).reshape(-1))\n                    posterior_var_c.append(grad_c.compute_posterior_var_x_new(x=plot_samples).reshape(-1))\n                    for zo in range(len(Z_obj)):\n                        def inner_func(X_inner, verbose=False):\n                            X_inner = np.atleast_2d(X_inner)\n                            # X_inner = X_inner.astype(\"int\")\n                            grad_obj = gradients(x_new=x, model=self.model, Z=Z_obj[zo], aux=aux_obj,\n                                                 X_inner=X_inner)  # , test_samples = self.test_samples)\n                            mu_xnew = grad_obj.compute_value_mu_xnew(x=X_inner)\n\n                            grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const[zc], aux=aux_c,\n                                               X_inner=X_inner)  # , test_samples = initial_design('random', self.space, 1000))\n\n                            Fz = grad_c.compute_probability_feasibility_multi_gp(x=X_inner, l=0)\n\n                            func_val = mu_xnew * Fz  # - inner_opt_val\n\n                            return -func_val.reshape(-1)\n\n                        def inner_func_with_gradient(X_inner):\n                            # print(\"inner_func_with_gradient\")\n\n                            X_inner = np.atleast_2d(X_inner)\n                            # X_inner = X_inner.astype(\"int\")\n\n                            grad_obj = gradients(x_new=x, model=self.model, Z=Z_obj[zo], aux=aux_obj, X_inner=X_inner,\n                                                 precompute_grad=True)\n                            mu_xnew = grad_obj.compute_value_mu_xnew(x=X_inner)\n\n                            grad_mu_xnew = grad_obj.compute_gradient_mu_xnew(x=X_inner)\n\n                            grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const[zc], aux=aux_c, X_inner=X_inner,\n                                               precompute_grad=True)\n\n                            Fz, grad_Fz = grad_c.compute_probability_feasibility_multi_gp(x=X_inner, l=0,\n                                                                                          gradient_flag=True)\n                            func_val = np.array(mu_xnew * Fz)  # - self.control_variate\n\n                            func_grad_val = np.array(mu_xnew).reshape(-1) * grad_Fz.reshape(-1) + Fz.reshape(\n                                -1) * grad_mu_xnew.reshape(\n                                -1)  # grad_c.product_gradient_rule(func = np.array([np.array(mu_xnew).reshape(-1), Fz.reshape(-1)]), grad = np.array([grad_mu_xnew.reshape(-1) ,grad_Fz.reshape(-1) ]))\n\n                            assert ~ np.isnan(func_val);\n                            \"nans found\"\n                            print(\"-func_val, -func_grad_val\", -func_val, -func_grad_val)\n                            return -func_val, func_grad_val\n\n\n                        def inner_func_predict(X_inner):\n                            X_inner = np.atleast_2d(X_inner)\n                            # X_inner = X_inner.astype(\"int\")\n                            grad_obj = gradients(x_new=x, model=self.model, Z=Z_obj[zo], aux=aux_obj,\n                                                 X_inner=X_inner)\n                            mu_xnew = self.model.predict(X_inner)[0].reshape(-1)\n                            # var_xnew = self.model.predict(X_inner)[1].reshape(-1)\n                            var_xnew = grad_obj.compute_b(xopt=X_inner)\n\n                            grad_c = gradients(x_new=x, model=self.model_c, Z=Z_const[zc], aux=aux_c,\n                                               X_inner=X_inner)\n\n                            Fz = grad_c.compute_probability_feasibility_multi_gp(x=X_inner, l=0)\n\n                            func_val = mu_xnew.reshape(-1) * Fz.reshape(-1)  # - inner_opt_val\n\n                            return func_val.reshape(-1), var_xnew.reshape(-1)* (np.array(Fz).reshape(-1))\n\n                        if discretisation is not None:\n                            current_test_samples_mean = -current_func(X_inner=plot_samples, Z_const=Z_const[zc],\n                                                                      aux_c=aux_c)\n                            next_test_samples_mean = -inner_func(plot_samples)\n                            mean_n1, varn_n1 = inner_func_predict(plot_samples)\n\n                            current_inner_opt_x, current_inner_opt_val = self._compute_current_max(x, Z_const[zc], aux_c)\n\n                            discretisation_vals = -inner_func(discretisation)\n                            next_inner_opt_x = discretisation[np.argmax(discretisation_vals)]\n                            # print(\"func_val2\",inner_func(next_inner_opt_x , verbose=True))\n                            next_inner_opt_val = -np.max(discretisation_vals )\n\n\n                            individual_maxgraph.append(-next_inner_opt_val)\n                            maxgraph.append(-next_inner_opt_val)\n                            plt.plot(plot_samples, mean_n1, color=\"lightcoral\")\n                            plt.plot(plot_samples, mean_n1 + 2.64 * varn_n1, color=\"lightcoral\", alpha=0.3)\n                            plt.plot(plot_samples, mean_n1 - 2.64 * varn_n1, color=\"lightcoral\", alpha=0.3)\n                            plt.fill_between(plot_samples.reshape(-1), mean_n1 - 1.96 * varn_n1,\n                                             mean_n1 + 1.96 * varn_n1, color=\"lightcoral\", alpha=0.2)\n\n\n                            plt.plot(plot_samples, current_test_samples_mean, color=\"grey\")\n                            plt.plot(plot_samples, next_test_samples_mean, color=\"grey\", linestyle='dashed')\n                            plt.scatter(current_inner_opt_x, current_inner_opt_val, color=\"red\")\n                            plt.scatter(next_inner_opt_x, -next_inner_opt_val, color=\"green\")\n                            plt.scatter(np.array(discretisation).reshape(-1), np.repeat([0], len(np.array(discretisation).reshape(-1))), color=\"blue\")\n                            plt.scatter(x, [0], color=\"magenta\")\n\n                        else:\n\n                            next_test_samples_mean = -inner_func(plot_samples)\n                            next_inner_opt_x, next_inner_opt_val = self.optimizer.optimize_inner_func(f=inner_func,\n                                                                                            f_df=None)\n                            individual_maxgraph.append(-next_inner_opt_val)\n                            maxgraph.append(-next_inner_opt_val)\n\n                            if Z_obj[zo]==0:\n                                future_means_const.append(next_test_samples_mean)\n                                optimums_const.append(-next_inner_opt_val)\n                                optimiser_const.append(next_inner_opt_x)\n                                if Z_const[zc]==0:\n                                    current_mean_const = next_test_samples_mean\n                                    current_optimums_const = -next_inner_opt_val\n                                    current_optimiser_const = next_inner_opt_x\n\n                            if Z_const[zc]==0:\n                                future_means_objs.append(next_test_samples_mean)\n                                optimums_objs.append(-next_inner_opt_val )\n                                optimiser_objs.append(next_inner_opt_x)\n                                if Z_obj[zo]==0:\n                                    current_mean_objs = next_test_samples_mean\n                                    current_optimums_objs = -next_inner_opt_val\n                                    current_optimiser_objs = next_inner_opt_x\n\n\n                ####plot Zy\n                plt.plot(plot_samples, current_mean_objs , color=\"black\", linestyle=\"dashed\", zorder=0)\n                plt.plot(plot_samples, np.array(future_means_objs).T, alpha=0.4, color=\"grey\", zorder=0)\n                plt.fill_between(plot_samples.reshape(-1), np.min(future_means_objs, axis=0), np.max(future_means_objs, axis=0), color=\"lightcoral\",\n                                 alpha=0.7, zorder=0)\n\n\n                plt.scatter(np.array(optimiser_objs).reshape(-1), np.array(optimums_objs).reshape(-1), color=\"red\",\n                            label=\"$\\max_{x}$  $\\mu_{i}^{n+1}(x) PF_{j}^{n+1}(x)$\", edgecolors='black', zorder=1)\n                plt.scatter(np.array(current_optimiser_objs).reshape(-1), np.array(current_optimums_objs).reshape(-1),\n                            color=\"green\", zorder=2,  edgecolors='black')\n                plt.xlim(1.2,3.5)\n                plt.ylim(-0.3,1.5)\n                plt.xticks(fontsize=14)\n                plt.yticks(fontsize=14)\n                plt.legend(loc=\"upper left\", fontsize=15)\n                # plt.savefig(\n                #     \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zy_change.jpg\",\n                #     bbox_inches=\"tight\")\n                plt.show()\n\n                #PLOTS Zc\n                plt.plot(plot_samples, current_mean_const , color=\"black\", linestyle=\"dashed\", zorder=0)\n                plt.plot(plot_samples, np.array(future_means_const).T, alpha=0.4, color=\"grey\", zorder=0)\n                plt.fill_between(plot_samples.reshape(-1), np.min(future_means_const, axis=0), np.max(future_means_const, axis=0), color=\"lightcoral\",\n                                 alpha=0.7, zorder=0)\n\n\n                plt.scatter(np.array(optimiser_const).reshape(-1), np.array(optimums_const).reshape(-1), color=\"red\",\n                            label=\"$\\max_{x}$  $\\mu_{i}^{n+1}(x) PF_{j}^{n+1}(x)$\", zorder=1, edgecolors='black')\n                plt.scatter(np.array(current_optimiser_const).reshape(-1), np.array(current_optimums_const).reshape(-1),\n                            color=\"green\", zorder=2,  edgecolors='black')\n                plt.legend(loc=\"upper left\", fontsize=15)\n                plt.xlim(1.2,3.5)\n                plt.ylim(-0.3,1.2)\n                plt.xticks(fontsize=14)\n                plt.yticks(fontsize=14)\n                # plt.savefig(\n                #     \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zc_change.jpg\",\n                #     bbox_inches=\"tight\")\n                plt.show()\n\n                Zo, Zc = np.meshgrid(Z_obj, Z_const)\n                maxvals = np.array(maxgraph).reshape(Zo.shape)\n\n\n                fig = plt.figure()\n                ax = fig.add_subplot(111, projection='3d')\n                ax.plot_wireframe(Zc,Zo, maxvals, color=\"red\")\n                ax.set_ylabel('$Z_{y}$', fontsize=15)\n                ax.set_xlabel('$Z_{c}$', fontsize=15)\n                ax.set_title('$\\max_{x}$  $\\mu_{i}^{n+1}(x) PF_{j}^{n+1}(x)$', fontsize=15)\n\n                plt.savefig(\n                    \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/epigraph.jpg\",\n                    bbox_inches=\"tight\")\n                plt.show()\n\n            # plt.plot(plot_samples, np.array(feasibility_graph).T)\n            # plt.title(\"feasible region\")\n            # plt.show()\n\n            # plt.plot(plot_samples, np.array(posterior_mean_c).T)\n            # plt.plot(plot_samples, np.array(self.model_c.predict(plot_samples)[0]).reshape(-1), color=\"black\")\n            # plot_samples = np.linspace(0,10,100)[:,np.newaxis]\n            varX_c = self.model_c.posterior_variance(test_samples, noise=True)\n            aux_c = np.reciprocal(varX_c[:, 0])\n            grad_c = gradients(x_new=test_samples, model=self.model_c, Z=Z_const[0], aux=aux_c,\n                               X_inner=plot_samples)\n\n            var_xnew = grad_c.compute_b(xopt=plot_samples)\n\n            plt.title(\"b constraint\")\n            plt.scatter(test_samples, 0, color=\"magenta\")\n            plt.scatter(plot_samples, var_xnew)\n            plt.scatter(np.array(self.model_c.get_X_values()).reshape(-1), np.repeat(0, len(np.array(self.model_c.get_X_values()).reshape(-1))), color=\"green\")\n            plt.show()\n\n            varX_c = self.model.posterior_variance(test_samples, noise=True)\n            aux_c = np.reciprocal(varX_c[:, 0])\n            grad_c = gradients(x_new=test_samples, model=self.model, Z=Z_const[0], aux=aux_c,\n                               X_inner=plot_samples)\n\n            var_xnew = grad_c.compute_b(xopt=plot_samples)\n\n            plt.title(\"b objective\")\n            plt.scatter(test_samples, 0, color=\"magenta\")\n            plt.scatter(plot_samples, var_xnew)\n            plt.scatter(np.array(self.model_c.get_X_values()).reshape(-1), np.repeat(0, len(np.array(self.model_c.get_X_values()).reshape(-1))), color=\"green\")\n            plt.show()\n\n            # print(\"corr\", self.model_c.posterior_covariance_between_points(test_samples, test_samples))\n            # print(\"varX_c\", varX_c)\n            # print(\"b\", np.sqrt(varX_c))\n            # raise\n            plot_samples = initial_design('random', self.space, 1000)\n            # plt.plot(plot_samples, np.array(self.model_c.predict(plot_samples)[0]).reshape(-1) + 1.95*np.sqrt(var_xnew), color=\"black\")\n            # plt.plot(plot_samples,\n            #          np.array(self.model_c.predict(plot_samples)[0]).reshape(-1) - 1.95 * np.sqrt(var_xnew), color=\"black\")\n            # plt.title(\"posterior means constraints\")\n            # plt.show()\n            #\n            # plt.title(\"posterior var constraints\")\n            # plt.plot(plot_samples, np.array(posterior_var_c).T)\n            # plt.show()\n        if True:\n            from matplotlib.pyplot import figure\n            kg_val = []\n            plot_kg_samples = np.linspace(4, 7,90)[:,np.newaxis] # initial_design('random', self.space, 500)\n            plot_kg_samples  = np.sort(plot_kg_samples , axis=0)\n            varX_obj = self.model.posterior_variance(plot_kg_samples, noise=True)\n            varX_c = self.model_c.posterior_variance(plot_kg_samples, noise=True)\n\n            for i in range( len(plot_kg_samples)):\n                x = np.atleast_2d(plot_kg_samples[i])\n                self.model.partial_precomputation_for_covariance(x)\n                self.model.partial_precomputation_for_covariance_gradient(x)\n                self.model_c.partial_precomputation_for_covariance(x)\n                self.model_c.partial_precomputation_for_covariance_gradient(x)\n\n                aux_obj = np.reciprocal(varX_obj[:, i])\n                aux_c = np.reciprocal(varX_c[:, i])\n                kg_val.append(self.discrete_KG(Xd=self.fixed_discretisation_values, xnew=x, Zc=self.Z_cdKG, aux_obj=aux_obj, aux_c=aux_c, grad=False))\n\n            varX_obj = self.model.posterior_variance(test_samples, noise=True)\n            varX_c = self.model_c.posterior_variance(test_samples, noise=True)\n            for i in range(len(test_samples)):\n                x = np.atleast_2d(test_samples[i])\n                self.model.partial_precomputation_for_covariance(x)\n                self.model.partial_precomputation_for_covariance_gradient(x)\n                self.model_c.partial_precomputation_for_covariance(x)\n                self.model_c.partial_precomputation_for_covariance_gradient(x)\n\n                aux_obj = np.reciprocal(varX_obj[:, i])\n                aux_c = np.reciprocal(varX_c[:, i])\n                best_kg_val = self.discrete_KG(Xd=self.fixed_discretisation_values, xnew=x, Zc=self.Z_cdKG, aux_obj=aux_obj, aux_c=aux_c, grad=False)\n\n            def penalised_mean_GP(X_inner):\n                # print(\"inner_func_with_gradient\")\n\n                X_inner = np.atleast_2d(X_inner)\n\n                mu_xnew = self.model.predict(X_inner)[0]\n                var_xnew = self.model.posterior_variance(X_inner, noise=False)\n\n                Fz = self.probability_feasibility_multi_gp(x=X_inner, model=self.model_c).reshape(-1)\n\n                mean = np.array(mu_xnew.reshape(-1) * Fz)  # - self.control_variate\n                var = np.array(var_xnew.reshape(-1) * Fz**2)\n\n                return mean, var\n\n            figure(figsize=(8, 6))\n            plot_gp_samples = initial_design('random', self.space, 500)\n            plot_gp_samples = np.sort(plot_gp_samples, axis=0)\n\n            mean_current_GP , var_current_GP= penalised_mean_GP(plot_gp_samples)\n            plt.plot(plot_gp_samples.reshape(-1), np.array(mean_current_GP).reshape(-1), color=\"black\", linestyle=\"dashed\", alpha=0.5, zorder=0)\n            plt.fill_between(plot_gp_samples.reshape(-1), np.array(mean_current_GP).reshape(-1) - 1.65* np.sqrt(var_current_GP),\n                             np.array(mean_current_GP).reshape(-1) + 1.65* np.sqrt(var_current_GP), color=\"lightcoral\", alpha=0.3, zorder=0)\n\n            current_max = np.max(mean_current_GP )\n            current_optimiser = plot_gp_samples[np.argmax(mean_current_GP)]\n\n\n            plt.scatter(test_samples.reshape(-1), penalised_mean_GP(test_samples)[0], color=\"red\", edgecolors=\"black\", label=\"$max_{x} cKG(x)$\", s=60, zorder=2)\n            plt.scatter(self.model.get_X_values(), np.array(self.model.get_Y_values()).reshape(-1) * np.array(np.array(self.model_c.get_Y_values()).reshape(-1)<0).reshape(-1), color=\"white\", edgecolors=\"black\", s=60, zorder=1)\n            plt.scatter(current_optimiser, current_max , color=\"orange\", edgecolors=\"black\", label=\"$max_{x} \\mu^{n}(x) PF^{n}(x)$\", s=60, zorder=2)\n            plt.xlabel(\"$X$\", fontsize=15)\n            plt.ylabel(\"$\\mu^{n}(x) PF^{n}(x)$\", fontsize=15)\n            # plt.title(\"n = \" + str(len(self.model.get_X_values())), fontsize=14)\n            plt.xlim(4,7)\n\n            plt.xticks(fontsize=14)\n            plt.yticks(fontsize=14)\n\n            x = plot_gp_samples\n            y = self.true_func(x, true_val=True)\n            c = self.true_const(x)\n            truefval = y.reshape(-1) * np.array(c < 0).reshape(-1)\n\n            current_max = np.max(truefval)\n            current_optimiser = x[np.argmax(truefval)]\n            plt.plot(x, truefval, color=\"green\", label=\"True function\", zorder=-1)\n            plt.scatter(current_optimiser, current_max , color=\"green\", edgecolor=\"black\", zorder=2, label=\"$\\max_{x} f$\")\n            # plt.legend(loc=\"upper right\", prop={'size': 14})\n            plt.savefig(\n                \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/posterior_GP_{n}_v2.jpg\".format(n = len(self.model.get_X_values())),\n                bbox_inches=\"tight\")\n            plt.show()\n\n            figure(figsize=(8, 6))\n            plt.scatter(test_samples.reshape(-1), best_kg_val.reshape(-1), color=\"red\", edgecolors=\"black\",\n                        label=\"$argmax_{x} cKG(x)$\", s=60, zorder=1)\n            plt.plot(plot_kg_samples.reshape(-1), np.array(kg_val).reshape(-1), color=\"black\", linewidth=3,  zorder=0)\n            plt.xlabel(\"$X$\", fontsize=15)\n            plt.ylabel(\"$cKG$\", fontsize=15)\n            plt.xlim(4,7)\n            plt.xticks(fontsize=14)\n            plt.yticks(fontsize=14)\n            # plt.legend(loc=\"upper right\", prop={'size': 14})\n            plt.savefig(\n                \"/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/cKG_{n}_v2.jpg\".format(n = len(self.model.get_X_values())),\n                bbox_inches=\"tight\")\n            plt.show()\n\n\n\n    def probability_feasibility(self, x, model, l=0):\n\n        model = model.model\n\n        mean = model.posterior_mean(x)\n        var = model.posterior_variance(x, noise=False)\n\n        std = np.sqrt(var).reshape(-1, 1)\n        mean = mean.reshape(-1, 1)\n        norm_dist = norm(mean, std)\n        Fz = norm_dist.cdf(l)\n\n        return Fz.reshape(-1, 1)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/Hybrid_continuous_KG_v2.py b/core/acquisition/Hybrid_continuous_KG_v2.py
--- a/core/acquisition/Hybrid_continuous_KG_v2.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/Hybrid_continuous_KG_v2.py	(date 1684582033024)
@@ -321,12 +321,33 @@
                  color="red",
                  linewidth=3,
                  zorder=-1, label="$\max_{x}$  $\mu_{i}^{n+1}(x)$")
-        plt.xlabel("$Z_{y}$", size=14)
+
+        x = np.linspace(-2.4, 2.4, 200)
+
+        # Creating a Function.
+        def normal_dist(x, mean, sd):
+            prob_density = (np.pi * sd) * np.exp(-0.5 * ((x - mean) / sd) ** 2)
+            return prob_density
+
+        # Calculate mean and Standard deviation.
+        mean = 0
+        sd = 1
+
+        # Apply function to the data.
+        pdf = normal_dist(x, mean, sd)
+
+        # Plotting the Results
+        plt.plot(x, pdf*0.6 -1.4, color='blue')
+
+        plt.xlabel("$Z_{y}$", size=30)
+        plt.ylabel("$\mathbb{Y}$", size=30)
         plt.xticks(fontsize=13)
         plt.yticks(fontsize=13)
-        plt.legend(loc="upper left", fontsize=15)
+        plt.legend(loc="upper left", fontsize=20)
+
         plt.xlim(-2.4,2.4)
-        plt.savefig("/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zy_epigraph.jpg")
+        plt.ylim(-1.5, 3.7)
+        plt.savefig("/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zy_epigraph.pdf", bbox_inches="tight")
         plt.show()
         raise
         # if verbose:
@@ -416,9 +437,12 @@
         plt.scatter(np.repeat(x, len(xnew_vals)), np.array(xnew_vals).reshape(-1), s=60, color="white", edgecolors="black", zorder=1)
         plt.xticks(fontsize=14)
         plt.yticks(fontsize=14)
-        plt.legend(loc="upper left", fontsize=15)
+        plt.legend(loc="upper left", fontsize=20)
+        plt.ylabel("$\mathbb{Y}$", size=30)
+        plt.xlabel("$\mathbb{X}$", size=30)
+        plt.ylim(-1.5, 3.7)
         plt.xlim(4,7)
-        plt.savefig("/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/max_u.jpg")
+        plt.savefig("/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/max_u.pdf", bbox_inches="tight")
         plt.show()
 
         self.new_anchors_flag = False
@@ -743,6 +767,8 @@
         #     print("KG_value",np.mean(out))
 
         KG_value = np.mean(out)
+        self._plots(np.linspace(0,4, 100))
+        raise
         # gradKG_value = np.mean(gradout, axis=?)
         assert ~np.isnan(KG_value);
         "KG cant be nan"
@@ -939,7 +965,7 @@
 
     def _plots(self, test_samples, discretisation=None):
 
-        if False:
+        if True:
             def current_func(X_inner, Z_const, aux_c):
                 X_inner = np.atleast_2d(X_inner)
                 mu = self.model.posterior_mean(X_inner)[0]
@@ -1147,9 +1173,9 @@
                 plt.ylim(-0.3,1.2)
                 plt.xticks(fontsize=14)
                 plt.yticks(fontsize=14)
-                # plt.savefig(
-                #     "/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zc_change.jpg",
-                #     bbox_inches="tight")
+                plt.savefig(
+                    "/home/juan/Documents/repos_data/Constrained-KG/RESULTS/plot_saved_data/plots/Zc_change.jpg",
+                    bbox_inches="tight")
                 plt.show()
 
                 Zo, Zc = np.meshgrid(Z_obj, Z_const)
Index: core/acquisition/NN_experiment_cEI.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport GPyOpt\nfrom GPyOpt.objective_examples.experiments2d import mistery, dropwave\nfrom Real_Experiments.FC_Neural_Network.real_functions_caller import FC_NN_test_function\nimport GPy as GPy\nfrom multi_objective import MultiObjective\nfrom multi_outputGP import multi_outputGP\nimport matplotlib.pyplot as plt\nimport scipy\nfrom Hybrid_continuous_KG_v2 import KG\nfrom bayesian_optimisation import BO\nimport pandas as pd\n# from nEI import nEI\nfrom EI import EI\n# from EI import EI\nimport os\nfrom datetime import datetime\nimport time\nimport tensorflow as tf\n#ALWAYS check cost in\n# --- Function to optimize\nprint(\"NN TS activate\")\nprint(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))\ndef function_caller_NN_cEI(rep_base):\n    rep_base = rep_base + 100\n    for it in range(3):\n        rep = rep_base + 10**(it)\n        np.random.seed(rep)\n        np.random.seed(rep)\n\n        function_rejected = True\n        s = 0\n        while function_rejected or s <= 1:\n            # for i in range(2):\n\n            try:\n                threshold = 1.1e-2  #seconds\n                RMITD_f = FC_NN_test_function(max_time=threshold)\n                function_rejected = False\n                s += 1\n            except:\n                function_rejected = True\n                print(\"function_rejected check path inside function\")\n                pass\n\n        # --- Attributes\n        #repeat same objective function to solve a 1 objective problem\n        f = MultiObjective([RMITD_f.f])\n        c = MultiObjective([RMITD_f.c])\n\n\n        # --- Attributes\n        #repeat same objective function to solve a 1 objective problem\n\n        #c2 = MultiObjective([test_c2])\n        # --- Space\n        #define space of variables\n        space = GPyOpt.Design_space(space=[{'name': 'var_1', 'type': 'continuous', 'domain': (0, 1)},  #Learning rate\n                                           {'name': 'var_2', 'type': 'continuous', 'domain': (0, 1)},  #Drop-out rate 1\n                                           {'name': 'var_3', 'type': 'continuous', 'domain': (0, 1)},  #Drop-out rate 2\n                                           {'name': 'var_3', 'type': 'continuous', 'domain': (0, 1)},  # Drop-out rate 2\n                                           {'name': 'var_5', 'type': 'continuous', 'domain': (3, 12)},  # units 1\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (3, 12)},  # units 1\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (3, 12)},  # units 1\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (0, 1)},  # beta 1 rate\n                                           {'name': 'var_7', 'type': 'continuous', 'domain': (0, 1)}])# beta 2 rate\n\n\n\n\n\n        n_f = 1\n        n_c = 1\n        model_f = multi_outputGP(output_dim = n_f,   exact_feval=[False]*n_f)\n        model_c = multi_outputGP(output_dim = n_c,  noise_var=[1e-4]*n_c, exact_feval=[True]*n_c)\n\n\n        # --- Aquisition optimizer\n        #optimizer for inner acquisition function\n        type_anchor_points_logic = \"max_objective\"\n        acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer=\"lbfgs\",inner_optimizer='lbfgs',space=space, model=model_f, model_c=model_c,anchor_points_logic=type_anchor_points_logic)\n        #\n        # # --- Initial design\n        #initial design\n        initial_design = GPyOpt.experiment_design.initial_design('latin', space, 18)\n\n        nz = 1\n        acquisition = EI(model=model_f, model_c=model_c, space=space, nz=nz, optimizer=acq_opt)\n        evaluator = GPyOpt.core.evaluators.Sequential(acquisition)\n        bo = BO(model_f, model_c, space, f, c, acquisition, evaluator, initial_design,\n                tag_last_evaluation=True,\n                deterministic=True)\n\n\n        stop_date = datetime(2022, 5, 16, 7)# year month day hour\n        max_iter  = 50\n        # print(\"Finished Initialization\")\n        subfolder = \"NN_cEI_\"\n        folder = \"RESULTS\"\n        cwd = os.getcwd()\n        path =cwd + \"/\" + folder + \"/\" + subfolder + '/it_' + str(rep) + '.csv'\n        X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter=max_iter, verbosity=False,stop_date= stop_date,\n                                                                                  path=path,compute_OC=False,\n                                                                                  evaluations_file=subfolder,\n                                                                                  KG_dynamic_optimisation=False)\n\n        print(\"Code Ended\")\n        print(\"X\",X,\"Y\",Y, \"C\", C)\n# function_caller_NN_cEI(21)\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/NN_experiment_cEI.py b/core/acquisition/NN_experiment_cEI.py
--- a/core/acquisition/NN_experiment_cEI.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/NN_experiment_cEI.py	(date 1642014717737)
@@ -24,7 +24,7 @@
 def function_caller_NN_cEI(rep_base):
     rep_base = rep_base + 100
     for it in range(3):
-        rep = rep_base + 10**(it)
+        rep = rep_base #+ 10**(it)
         np.random.seed(rep)
         np.random.seed(rep)
 
@@ -93,7 +93,7 @@
 
 
         stop_date = datetime(2022, 5, 16, 7)# year month day hour
-        max_iter  = 50
+        max_iter  = 1
         # print("Finished Initialization")
         subfolder = "NN_cEI_"
         folder = "RESULTS"
Index: core/acquisition/mistery_penalised_experiment_v2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport GPyOpt\nfrom GPyOpt.objective_examples.experiments2d import mistery,  test_function_2, new_brannin\nimport GPy as GPy\nfrom multi_objective import MultiObjective\nfrom multi_outputGP import multi_outputGP\nimport matplotlib.pyplot as plt\nimport scipy\nfrom Hybrid_continuous_KG_penalised import KG\nfrom nEI import nEI\nfrom EI import EI\nfrom bayesian_optimisation import BO\nimport pandas as pd\nimport os\nfrom datetime import datetime\n\n#ALWAYS check cost in\n# --- Function to optimize\nprint(\"mistery activate\")\ndef function_caller_penalised_mistery(rep):\n    rep = rep +20\n    np.random.seed(rep)\n\n    for noise in [1.0]:\n        # func2 = dropwave()\n        noise_objective = noise\n        noise_constraints = (0.1) ** 2\n        mistery_f = mistery(sd_obj=np.sqrt(noise_objective), sd_c=np.sqrt(noise_constraints))\n\n        # --- Attributes\n        # repeat same objective function to solve a 1 objective problem\n        f = MultiObjective([mistery_f.f])\n        c = MultiObjective([mistery_f.c])\n\n        # --- Attributes\n        # repeat same objective function to solve a 1 objective problem\n\n        # c2 = MultiObjective([test_c2])\n        # --- Space\n        # define space of variables\n        space = GPyOpt.Design_space(space=[{'name': 'var_1', 'type': 'continuous', 'domain': (0, 5)},\n                                           {'name': 'var_2', 'type': 'continuous', 'domain': (0, 5)}])  # GPyOpt.Design_space(space =[{'name': 'var_1', 'type': 'continuous', 'domain': (0,100)}])#\n        n_f = 1\n        n_c = 1\n        model_f = multi_outputGP(output_dim = n_f,   noise_var=[noise_objective]*n_f, exact_feval=[True]*n_f)\n        model_c = multi_outputGP(output_dim = n_c,  noise_var=[noise_constraints]*n_c, exact_feval=[True]*n_c)\n\n        # --- Aquisition optimizer\n        #optimizer for inner acquisition function\n        type_anchor_points_logic = \"max_objective\"\n        acq_opt = GPyOpt.optimization.AcquisitionOptimizer(optimizer=\"lbfgs\",inner_optimizer='lbfgs',space=space, model=model_f, model_c=model_c,anchor_points_logic=type_anchor_points_logic)\n        #\n        # # --- Initial design\n        #initial design\n        initial_design = GPyOpt.experiment_design.initial_design('latin', space, 10)\n\n        nz = 60 # (n_c+1)\n        acquisition = KG(model=model_f, model_c=model_c , space=space, nz=nz, optimizer = acq_opt)\n\n\n        evaluator = GPyOpt.core.evaluators.Sequential(acquisition)\n        bo = BO(model_f, model_c, space, f, c, acquisition, evaluator, initial_design,\n                deterministic=False)\n\n        stop_date = datetime(2022, 5, 10, 7) # year month day hour\n        max_iter  = 100\n        # print(\"Finished Initialization\")\n        subfolder = \"mistery_penalised_KG_n_obj_\" + str(noise_objective) + \"_n_c_\" + str(noise_constraints)\n        folder = \"RESULTS\"\n        cwd = os.getcwd()\n        path =cwd + \"/\" + folder + \"/\" + subfolder + '/it_' + str(rep) + '.csv'\n        X, Y, C, recommended_val, optimum, Opportunity_cost = bo.run_optimization(max_iter=max_iter,\n                                                                                  verbosity=False,\n                                                                                  stop_date= stop_date,\n                                                                                  path=path,\n                                                                                  evaluations_file=subfolder,\n                                                                                  KG_dynamic_optimisation=True)\n\n        print(\"Code Ended\")\n        print(\"X\",X,\"Y\",Y, \"C\", C)\n# function_caller_penalised_mistery(rep=4)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/mistery_penalised_experiment_v2.py b/core/acquisition/mistery_penalised_experiment_v2.py
--- a/core/acquisition/mistery_penalised_experiment_v2.py	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/mistery_penalised_experiment_v2.py	(date 1659455825030)
@@ -62,7 +62,7 @@
         bo = BO(model_f, model_c, space, f, c, acquisition, evaluator, initial_design,
                 deterministic=False)
 
-        stop_date = datetime(2022, 5, 10, 7) # year month day hour
+        stop_date = datetime(2023, 5, 10, 7) # year month day hour
         max_iter  = 100
         # print("Finished Initialization")
         subfolder = "mistery_penalised_KG_n_obj_" + str(noise_objective) + "_n_c_" + str(noise_constraints)
@@ -78,6 +78,7 @@
 
         print("Code Ended")
         print("X",X,"Y",Y, "C", C)
-# function_caller_penalised_mistery(rep=4)
+
+function_caller_penalised_mistery(1)
 
 
Index: core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>,OC sampled,OC GP mean,Y,C_bool,recommended_val_sampled,recommended_val_GP,optimum\n0,0.0,0.0,-0.8190985551983405,0,0.0,0.0,0.0\n1,0.0,0.0,1.0064023934111537,1,0.0,0.0,0.0\n2,0.0,0.0,0.2817346768650408,0,0.0,0.0,0.0\n3,0.0,0.0,-0.6837547227964673,0,0.0,0.0,0.0\n4,0.0,0.0,-0.7677399341495389,0,0.0,0.0,0.0\n5,0.838268122237956,0.8378262666596799,0.9301639522832937,1,0.0,1.0504885134609965,0.0\n6,0.838268122237956,0.7826370733509216,0.9279715559595879,1,0.0,1.1056777067697547,0.0\n7,0.838268122237956,0.7808415247929921,1.744034810025831,1,0.0,1.1074732553276843,0.0\n8,0.1252995530231591,0.08246835347027925,1.8248630308993206,1,0.0,1.805846426650397,0.0\n9,0.042687201042635126,0.0001951033011324821,1.3513503381726053,1,0.0,1.888119676819544,0.0\n10,0.042687201042635126,2.0635694215620504e-06,0.6035926722617347,1,0.0,1.888312716551255,0.0\n11,0.042687201042635126,8.153861602888668e-05,1.7369408649502616,1,0.0,1.8882332415046477,0.0\n12,0.042687201042635126,0.0001007353912887421,1.8946111430425452,1,0.0,1.8882140447293878,0.0\n13,0.042687201042635126,0.005498558418685517,1.5515279336648469,1,0.0,1.882816221701991,0.0\n14,0.042687201042635126,0.003317984410480923,1.7569027865533613,1,0.0,1.8849967957101956,0.0\n15,0.042687201042635126,0.0033891361273170606,1.8555215934033904,1,0.0,1.8849256439933595,0.0\n16,0.042687201042635126,0.0014431300688213522,1.7388859035904285,1,0.0,1.8868716500518552,0.0\n17,0.042687201042635126,0.0005461145721308291,1.9012231641070538,1,0.0,1.8877686655485457,0.0\n18,0.042687201042635126,0.0015064821621308955,1.7573134693680945,1,0.0,1.8868082979585457,0.0\n19,0.04268720104263535,0.0019368014445131365,1.9135741124033734,1,0.0,1.8863779786761634,0.0\n20,0.04268720104263535,0.0007459582235591622,1.8733167177781007,1,0.0,1.8875688218971176,0.0\n21,0.04268720104263535,0.0010624629574760291,0.018028095923465142,0,0.0,1.8872523171632007,0.0\n22,0.04268720104263535,0.0010742468526503401,0.9884067386303148,1,0.0,1.8872405332680264,0.0\n23,0.04268720104263535,0.000749285518974574,1.48804785302072,1,0.0,1.8875654946017022,0.0\n24,0.04268720104263535,0.00010919566520994906,1.7009642093659967,1,0.0,1.8882055844554668,0.0\n25,0.04268720104263535,0.00014092505152918378,1.8579651420854033,1,0.0,1.8881738550691476,0.0\n26,0.04268720104263535,0.0001032863673500195,1.6563047286671178,1,0.0,1.8882114937533268,0.0\n27,0.04268720104263535,1.0407322010852482e-06,1.860389178599885,1,0.0,1.8883137393884757,0.0\n28,0.04268720104263535,1.0402877560711232e-05,1.752217485280561,1,0.0,1.888304377243116,0.0\n29,0.04268720104263535,2.678010365331218e-05,1.9297671032215336,1,0.0,1.8882880000170235,0.0\n30,0.04268720104263535,4.816205853308553e-05,0.8445975823424253,0,0.0,1.8882666180621437,0.0\n31,0.04268720104263535,5.3858973863452064e-05,1.8084399028160385,1,0.0,1.8882609211468133,0.0\n32,0.04268720104263535,4.673091950491148e-05,1.9233644983956841,1,0.0,1.8882680492011719,0.0\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv b/core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv
--- a/core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv	(revision 6c00b5773cea0907c2195eb6474ea6128fa45adb)
+++ b/core/acquisition/RESULTS/mistery_hybrid_KG_0.005/it_2.csv	(date 1684581423087)
@@ -4,31 +4,7 @@
 2,0.0,0.0,0.2817346768650408,0,0.0,0.0,0.0
 3,0.0,0.0,-0.6837547227964673,0,0.0,0.0,0.0
 4,0.0,0.0,-0.7677399341495389,0,0.0,0.0,0.0
-5,0.838268122237956,0.8378262666596799,0.9301639522832937,1,0.0,1.0504885134609965,0.0
-6,0.838268122237956,0.7826370733509216,0.9279715559595879,1,0.0,1.1056777067697547,0.0
-7,0.838268122237956,0.7808415247929921,1.744034810025831,1,0.0,1.1074732553276843,0.0
-8,0.1252995530231591,0.08246835347027925,1.8248630308993206,1,0.0,1.805846426650397,0.0
-9,0.042687201042635126,0.0001951033011324821,1.3513503381726053,1,0.0,1.888119676819544,0.0
-10,0.042687201042635126,2.0635694215620504e-06,0.6035926722617347,1,0.0,1.888312716551255,0.0
-11,0.042687201042635126,8.153861602888668e-05,1.7369408649502616,1,0.0,1.8882332415046477,0.0
-12,0.042687201042635126,0.0001007353912887421,1.8946111430425452,1,0.0,1.8882140447293878,0.0
-13,0.042687201042635126,0.005498558418685517,1.5515279336648469,1,0.0,1.882816221701991,0.0
-14,0.042687201042635126,0.003317984410480923,1.7569027865533613,1,0.0,1.8849967957101956,0.0
-15,0.042687201042635126,0.0033891361273170606,1.8555215934033904,1,0.0,1.8849256439933595,0.0
-16,0.042687201042635126,0.0014431300688213522,1.7388859035904285,1,0.0,1.8868716500518552,0.0
-17,0.042687201042635126,0.0005461145721308291,1.9012231641070538,1,0.0,1.8877686655485457,0.0
-18,0.042687201042635126,0.0015064821621308955,1.7573134693680945,1,0.0,1.8868082979585457,0.0
-19,0.04268720104263535,0.0019368014445131365,1.9135741124033734,1,0.0,1.8863779786761634,0.0
-20,0.04268720104263535,0.0007459582235591622,1.8733167177781007,1,0.0,1.8875688218971176,0.0
-21,0.04268720104263535,0.0010624629574760291,0.018028095923465142,0,0.0,1.8872523171632007,0.0
-22,0.04268720104263535,0.0010742468526503401,0.9884067386303148,1,0.0,1.8872405332680264,0.0
-23,0.04268720104263535,0.000749285518974574,1.48804785302072,1,0.0,1.8875654946017022,0.0
-24,0.04268720104263535,0.00010919566520994906,1.7009642093659967,1,0.0,1.8882055844554668,0.0
-25,0.04268720104263535,0.00014092505152918378,1.8579651420854033,1,0.0,1.8881738550691476,0.0
-26,0.04268720104263535,0.0001032863673500195,1.6563047286671178,1,0.0,1.8882114937533268,0.0
-27,0.04268720104263535,1.0407322010852482e-06,1.860389178599885,1,0.0,1.8883137393884757,0.0
-28,0.04268720104263535,1.0402877560711232e-05,1.752217485280561,1,0.0,1.888304377243116,0.0
-29,0.04268720104263535,2.678010365331218e-05,1.9297671032215336,1,0.0,1.8882880000170235,0.0
-30,0.04268720104263535,4.816205853308553e-05,0.8445975823424253,0,0.0,1.8882666180621437,0.0
-31,0.04268720104263535,5.3858973863452064e-05,1.8084399028160385,1,0.0,1.8882609211468133,0.0
-32,0.04268720104263535,4.673091950491148e-05,1.9233644983956841,1,0.0,1.8882680492011719,0.0
+5,0.9947082628235143,1.1122948039807077,0.9089257554404245,1,0.0,1.1122948039807077,1.8883147801206763
+6,1.875832723084289,1.875157780249018,1.8475139950034467,1,0.0,1.875157780249018,1.8883147801206763
+7,1.871620503697093,1.8870705526368827,1.2425876132619498,1,0.0,1.8870705526368827,1.8883147801206763
+8,1.884512511977937,1.8838610340399404,0.707683289960609,1,0.0,1.8838610340399404,1.8883147801206763
